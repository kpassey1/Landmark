     F/TITLE MNU050     Maintain Program Names
     F*****************************************************************
     F* Copyright   ** KDP Software Limited **    1996
     F*****************************************************************
     F*
     F*  Program ID          -    MNU050
     F*  Application ID      -    MNU050
     F*  Application Name    -        Maintain Program Names
     F*  Date Generated      -    Feb 2, 1996
     F*
     F*****************************************************************
     F*  Program Narrative
     F*
     F*  The program name maintenance programs allows additional programs to
     F*  be set up, so that they can be used in the menus. The full set
     F*  of programs have already been input.
     F*
     F*  If a program name is defined on a menu, then it cannot be deleted.
     F*
     F*****************************************************************
     F*  Files Usage
     F*
     F*  MNUPGM      - (U/DISK   ) Program Names               MP
     F*  MNUOPT3     - (I/DISK   ) Program Name, Secondary Pgm
     F*  MNU050D     - (C/WORKSTN) Generated display file
     F*
     F*****************************************************************
     F*  Function Of Indicators
     F*
     F*  SC0001     - List Screen for Program Names
     F*
     F*  01     - SCR001S1 / FL0001 : DSPATR(PC)
     F*  01     - SCR001S1 / FL0001 : DSPATR(RI)
     F*  02     - SCR001S1 / FL0001 : DSPATR(PR)
     F*  03     - SCR001S1 / FL0001 : DSPATR(UL)
     F*  04     - SCR001S1 / FL0001 : DSPATR(ND)
     F*  05     - SCR001C1 / PS0101 : DSPATR(PR)
     F*  06     - SCR001C1 / PS0102 : DSPATR(PR)
     F*  07     - SCR001S1 / MPSPGM : DSPATR(PC)
     F*  07     - SCR001S1 / MPSPGM : DSPATR(RI)
     F*  63     - SCR001C1 SFLDSPCTL
     F*  64     - SCR001C1 SFLDSP
     F*  65     - SCR001S1 SFLNXTCHG
     F*  66     - SCR001C1 SFLINZ
     F*  99     - SCR001 OVERLAY
     F* N63     - SCR001C1 SFLCLR
     F* N67     - SCR001C1 SFLEND
     F* N79     - SCR001 PUTOVR
     F* N79     - SCR001C1 PUTOVR
     F*
     F*  SC0002     - Detail Screen for Programs
     F*
     F*  01     - SCR002 / MPPGMD : DSPATR(PR)
     F*  01     - SCR002 / MPPGMT : DSPATR(PR)
     F*  01     - SCR002 / MPPRM1 : DSPATR(PR)
     F*  01     - SCR002 / MPPRM2 : DSPATR(PR)
     F*  01     - SCR002 / MPPRM3 : DSPATR(PR)
     F*  01     - SCR002 / MPPRM4 : DSPATR(PR)
     F*  02     - SCR002 / MPPGMD : DSPATR(UL)
     F*  02     - SCR002 / MPPGMT : DSPATR(UL)
     F*  02     - SCR002 / MPPRM1 : DSPATR(UL)
     F*  02     - SCR002 / MPPRM2 : DSPATR(UL)
     F*  02     - SCR002 / MPPRM3 : DSPATR(UL)
     F*  02     - SCR002 / MPPRM4 : DSPATR(UL)
     F*  03     - SCR002 / MPPGMN : DSPATR(PR)
     F*  03     - SCR002 / MPSPGM : DSPATR(PR)
     F*  04     - SCR002 / MPPGMN : DSPATR(UL)
     F*  04     - SCR002 / MPSPGM : DSPATR(UL)
     F*  05     - SCR002 / MPPGMD : DSPATR(PC)
     F*  05     - SCR002 / MPPGMD : DSPATR(RI)
     F*  06     - SCR002 / MPPGMN : DSPATR(PC)
     F*  06     - SCR002 / MPPGMN : DSPATR(RI)
     F*  07     - SCR002 / MPPGMT : DSPATR(PC)
     F*  07     - SCR002 / MPPGMT : DSPATR(RI)
     F*  99     - SCR002C1 DSPATR(RI)
     F* N79     - SCR002 PUTOVR
     F*
     F*****************************************************************
     F*  Function Of Subroutines
     F*
     F* SMAIN - Main flow of the program.
     F* SEND - END of program.
     F* S001 - List Screen for Program Names
     F* S002 - Detail Screen for Programs
     F* SREDSP -  Redisplay Windows within stack.
     F* S01BKW - SCRN SUB
     F* S01EDT - SCRN SUB
     F* S01FWD - SCRN SUB
     F* SMSG - calls message handling program to either clear, add, or
     F* S003   - SETLL D.MENU,F.MNUPGM,SVK001,SVK002
     F* S004   - GETREC D.MENU,F.MNUPGM,*lock,*eq,SVK001,SVK002
     F* S005   - GETREC D.MENU,F.MNUPGM,*eq,SVK001,SVK002
     F* S006   - GETREC D.MNUOPT3,F.MNUOPT3,*eq,MPPGMN,mpspgm
     F* S007   - DELETE D.MENU,F.MNUPGM
     F* S008   - UPDATE D.MENU,F.MNUPGM
     F* S009   - WRITE D.MENU,F.MNUPGM
     F* S010   - GETBLK D.MENU,F.MNUPGM,*PV
     F* S011   - Process To Reset File Pointer(BOF) - MNUPGM
     F* S012   - Process To Reset File Pointer(EOF) - MNUPGM
     F* S013   - GETREC D.MENU,F.MNUPGM,*EQ,MPPGMN,MPSPGM
     F* S002V - Detail Screen for Programs
     F* *PSSR - Program Execution Errors Handler
     F* SATRIB - Display Attribute Handler
     F* SLOCK - Update Lock Flag
     F* SFERR - File Exception Handler
     F* SMVTOF - Move Fields From Work Area To File(s)
     F* SMVTOW - Move Fields From File(s) To Work Area
     F*
     F*****************************************************************
     F*            F i l e     S p e c i f i c a t i o n
     F*****************************************************************
     FMNU050D CF  E                    WORKSTN
     F                                        RRN01 KSFILE SCR001S1
     F                                              KINFDS DSPFDS
     FMNUOPT3 IF  E           K        DISK
     F                                              KINFDS FIDS02
     F                                              KINFSR SFERR
     FMNUPGM  UF  E           K        DISK                      A
     F                                              KINFDS FIDS01
     F                                              KINFSR SFERR
     F*
     E*****************************************************************
     E*      A r r a y  /  T a b l e   S p e c i f i c a t i o n
     E*****************************************************************
     E                    A01        11 10
     E                    A02        11 10
     E                    SID        99  8               Scrn stk
     E                    STY        99  1               Scr type
     E                    A1      1  12 80               Alpha constants i
     E                    DA6        15  1               Fld Attr. Wrk Ary
     E                    DA3        17  2               Fld Attr. Wrk Ary
     E                    DA1     1  12 24   DA2    34   Fld Attr. Indic t
     E*
     I*****************************************************************
     I*            I n p u t    S p e c i f i c a t i o n
     I*****************************************************************
     IFIDS02      DS
     I                                     *STATUS  STS02
     I                                    B 397 4000REC02
     IFIDS01      DS
     I                                     *STATUS  STS01
     I                                    B 397 4000REC01
     I*
     I* Company heading
     I*
     I@DS001      DS                             30
     I                                        1  30 WKCOMP
     I*
     I* INFDS for cursor location
     I*
     IDSPFDS      DS
     I                                      370 370 ROW
     I                                      371 371 COL
     I                                    B 378 3790SFLRRN
     I*
     I* Work Data Structure for cursor
     I*
     I@DS002      DS
     I                                    B   1   20HALFWD
     I                                        2   2 BYTE2
     I*
     I* Display Attribute Structure
     I*
     I@DS003      DS
     I                                        1  10 FLDSCR
     I                                       11  20 FLDNAM
     I                                       21  240FLDINX
     I                                       25  25 DSPERR
     I                                       26  26 #DS
     I                                       27  27 #HI
     I                                       28  28 #RI
     I                                       29  29 #UL
     I                                       30  30 #BL
     I                                       31  31 #CS
     I                                       32  32 #PC
     I                                       33  33 #ND
     I                                       34  34 #PR
     I                                       35  35 #GN
     I                                       36  36 #RD
     I                                       37  37 #PK
     I                                       38  38 #WT
     I                                       39  39 #TQ
     I                                       40  40 #YW
     I                                       41  41 #BU
     I                                       27  41 DA6
     I                                       11  41 #ATRIB
     I                                       25  280#FROM
     I                                       29  320#TO
     I                                       25  320#CLF
     I                                        1  24 #MAP
     I*
     I* Named constants
     I*
     I              'Record not found for-C         C0001
     I              ' Edit'
     I*
     I* Named constants
     I*
     I              'Record not found for-C         C0002
     I              ' Delete'
     I*
     I* Named constants
     I*
     I              'Record not found for-C         C0003
     I              ' Display'
     I*
     I* Named constants
     I*
     I              'Invalid action choic-C         C0004
     I              'e'
     I*
     I* Date Manipulation Data Struct.
     I*
     I            DS
     I                                        1   80X1CDAT
     I                                        1   60X1DATE
     I                                        1   20X12
     I                                        3   40X34
     I                                        5   60X56
     I                                        7   80X78
     I*
     I* Message data structure
     I*
     I@DS004      DS
     I                                        1 132 MSGDTA
     I                                        1  51 UMESG1
     I                                       52 102 UMESG2
     I                                      103 132 UMESG3
     I*
     I* Program status data structure
     I*
     ISDS        SDS
     I                                      244 253 WSID
     I                                      254 263 USER
     I                                     *PROGRAM PGM
     I                                       11  150USTAT
     I                                       21  28 USRCLN
     I                                       29  36 UROUTN
     I                                       40  46 MSGID
     I                                       81  90 ULIB
     I                                       91 170 UMSGTX
     I                                      201 208 UFILE
     I                                      209 213 UFSTAT
     I                                      228 235 UFSRCL
     I                                      264 2690UJOBN
     I                                      288 2930UCDAT
     I                                      294 2990UCTIM
     I*
     C*****************************************************************
     C*            P a r a m e t e r     L i s t
     C*****************************************************************
     C*
     C           P0001     PLIST
     C                     PARM           BAT
     C                     PARM           RN0002
     C                     PARM           RN0001
     C                     PARM           ACT
     C                     PARM           OK
     C*
     C           PMSGCL    PLIST
     C                     PARM           MSGACT  1
     C                     PARM           MSGID
     C                     PARM           MSGF   10
     C                     PARM           MSGFL  10
     C                     PARM           MSGDTA
     C*
     C           PHELP     PLIST
     C                     PARM           APPSET
     C                     PARM           APPTYP
     C                     PARM           APPPGM
     C                     PARM           APPSCR
     C                     PARM           APPROW
     C                     PARM           APPCOL
     C*****************************************************************
     C*                   K e y      L i s t
     C*****************************************************************
     C*
     C           K0001     KLIST
     C                     KFLD           KCPG01
     C                     KFLD           KPSP02
     C*
     C           K0002     KLIST
     C                     KFLD           KCPG01
     C                     KFLD           KCSP02
     C*
     C           K0003     KLIST
     C                     KFLD           KPPG01
     C                     KFLD           KPSP02
     C*
     C*****************************************************************
     C*        V a r i a b l e s     D e c l a r a t i o n
     C*****************************************************************
     C           LRFLAG    IFNE 'N'
     C           *LIKE     DEFN REC02     HRC02
     C           *LIKE     DEFN MCPGMN    HCPGMN
     C           *LIKE     DEFN MCSPGM    HCSPGM
     C                     MOVE *ZEROS    NARG1  309       Numer argument1
     C                     MOVE *ZEROS    NRSLT  309       Numeric result
     C                     MOVE *BLANKS   DATFMT  3        Date format
     C                     MOVE *ZEROS    SVDAT   60       Save date
     C                     MOVE *ZEROS    SVYY    20       Save year
     C                     MOVE *ZEROS    SVMM    20       Save month
     C                     MOVE *ZEROS    SVDD    20       Save days
     C                     MOVE *ZEROS    SVDAYS  30       Save days
     C                     MOVE *ZEROS    SVLEAP  10       If leap year
     C                     MOVE *ZEROS    FEB     20       NOD in feb/Leap
     C                     MOVE *ZEROS    C1      30       Numeric wrk fld
     C                     MOVE *ZEROS    SVCY    40       Save days
     C                     MOVE *ZEROS    SVCC    20       Save century
     C                     MOVE 1         CHKVAR  10       Perform Valid.
     C                     MOVE *BLANKS   ACT     1
     C                     MOVE *BLANKS   BAT     1
     C                     MOVE *ZEROS    Z1      30       Loop Counter . . . .S
     C                     MOVE *BLANKS   ERROR   1
     C                     MOVE *ZEROS    EXTSCR  10
     C                     MOVE *ZEROS    FL0001  10
     C                     MOVE *ZEROS    F12FLG  10
     C                     MOVE *ZEROS    Z2      30       Loop Counter . . . .S
     C                     MOVE *ZEROS    LOOPCT  30
     C                     MOVE *ZEROS    MNTFLG  10
     C                     MOVE *BLANKS   MODDSC  8
     C                     MOVE *ZEROS    MODE    10
     C                     MOVE *BLANKS   OK      1
     C                     MOVE *BLANKS   RN0001 10        Program Name
     C                     MOVE *ZEROS    POSFLG  10
     C                     MOVE *ZEROS    PRMCNT  30
     C                     MOVE *BLANKS   PRM001 10
     C                     MOVE *BLANKS   PRM002 20
     C                     MOVE *BLANKS   PS0101 10
     C                     MOVE *BLANKS   PS0102 10
     C                     MOVE *BLANKS   SVK001 10
     C                     MOVE *BLANKS   SVK002 10
     C                     MOVE *ZEROS    UPDFLG  10
     C                     MOVE *BLANKS   RN0002 10        User Id
     C                     MOVE *ZEROS    LCK02   10       File lock flag
     C                     MOVE *ZEROS    LCK01   10       File lock flag
     C                     MOVE *BLANKS   RN0003 10        Program Name
     C                     MOVE 'N'       IOFLAG  1
     C                     MOVE *BLANKS   SCRNID  8        Scrn ID
     C                     MOVE *BLANKS   IN01   99        Save Ind
     C                     MOVE *BLANKS   DSPLY   1        Display screen flag
     C                     MOVE *BLANKS   INS01  99        Savd.Ind
     C                     MOVE *BLANKS   SWRD01  1        RD STS
     C                     MOVE *BLANKS   KCPG01 10        MCPGMN
     C                     MOVE *BLANKS   KPSP02 10        MPSPGM
     C                     MOVE *BLANKS   SWRD02  1        RD STS          01001
     C                     MOVE *BLANKS   KCSP02 10        MCSPGM
     C                     MOVE 'N'       CMDKEY  1         Cmd key pressed flag
     C                     MOVE *BLANKS   KPPG01 10        MPPGMN
     C                     MOVE *ZEROS    VALIDF  10       Flag for validation S
     C                     MOVE *ZEROS    LISTF   10       List of value flag
     C                     MOVE *ZEROS    X1CDAT           Init DS/*DTA flds
     C                     MOVE 'N'       MSGFLG  1        Display Msg Flg
     C                     MOVE *BLANKS   APPSET 10
     C                     MOVE 'D'       APPTYP  1
     C                     MOVE *BLANKS   APPSCR 10
     C                     MOVE *ZEROS    APPROW  30
     C                     MOVE *ZEROS    APPCOL  30
     C                     MOVE *ZEROS    UERCNT  10
     C                     MOVE *BLANKS   URSUME  6
     C                     MOVEL'MENUDEV' APPSET
     C                     MOVELPGM       APPPGM 10
     C                     Z-ADD1         XRN01
     C                     Z-ADD*ZEROS    X0      40       INDEX 0
     C                     Z-ADD*ZEROS    X1      30       INDEX 1
     C                     Z-ADD*ZEROS    SP      30       Stk ptr
     C                     Z-ADD*ZEROS    CT      30       Counter
     C                     Z-ADD*ZEROS    SRN01   40       Savd.Rrn
     C                     Z-ADD*ZEROS    DRN01   40       Dspl.Rrn
     C                     Z-ADD*ZEROS    ERN01   40       SFLEND +
     C                     Z-ADD*ZEROS    DAS001  50
     C                     Z-ADD*ZEROS    NRSLT0 309
     C                     Z-ADD*ZEROS    WCNTR   30       COUNTER
     C                     Z-ADD*ZEROS    WGETR   30       COUNTER
     C                     Z-ADD*ZEROS    SVS01   50       SV STS          01001
     C                     Z-ADD*ZEROS    WRRN01  30       WRK RRN
     C                     Z-ADD*ZEROS    WADJ01  30       WRK ADJ
     C                     Z-ADD*ZEROS    WLCNTR  50       LOOP CT
     C                     Z-ADD*ZEROS    WLGETR  50       LOOP CT
     C                     Z-ADD*ZEROS    SWEXBL  10       @EXITBLK
     C                     Z-ADD*ZEROS    SWSKPR  10       @SKIPREC
     C                     Z-ADD*ZEROS    NXTRRN  40       NXT RRNC
     C                     Z-ADD1         XYES    10       *YES keyword
     C                     Z-ADD1         CALLST  10       CALL STSword
     C                     Z-ADD*ZEROS    XNO     10       *NO keyword
     C                     Z-ADD*ZEROS    WFILE#  20       FILE#
     C                     END
     C                     MOVE *BLANK    LRFLAG  1
     C                     MOVE '0'       *IN60
     C*
     C           *NAMVAR   DEFN MNUCOMP   @DS001
     C/EJECT
     C*****************************************************************
     C*        M a i n l i n e      R o u t i n e
     C*****************************************************************
     C                     EXSR SMAIN
     C*
     C/EJECT
     C*****************************************************************
     C* SMAIN - Main flow of the program.
     C*****************************************************************
     C           SMAIN     BEGSR
     C*
     C*
     C* Clear Message Subfile.
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C*      *------------------------------------------*
     C*      *  Process all screens.                    *
     C*      *------------------------------------------*
     C                     MOVEL'SC0001'  SCRNID
     C           *INLR     DOWEQ'0'
     C           SCRNID    CASEQ'SC0001'  S001
     C           SCRNID    CASEQ'SC0002'  S002
     C           SCRNID    CASEQ'SEND'    SEND
     C                     END
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SEND - END of program.
     C*****************************************************************
     C           SEND      BEGSR
     C*
     C           LRFLAG    IFEQ 'Y'
     C           LRFLAG    OREQ *BLANK
     C                     MOVE '1'       *INLR
     C                     END                             LRFLAG EQ 'Y'
     C                     MOVE *BLANK    SCRNID
     C                     RETRN
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* S001 - List Screen for Program Names
     C*****************************************************************
     C           S001      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'0010000' *IN,1
     C                     MOVEA'0'       *IN,64
     C                     MOVEA'1'       *IN,80
     C*                                                               *
     C* GETDTAA mnucomp
     C                     IN   @DS001                 93
     C                     Z-ADD0         DAS001
     C           *IN93     IFEQ '1'
     C                     Z-ADDUSTAT     DAS001
     C                     END
     C*                                                               *
     C* ***  Clear list panel and start display on
     C* ***  first record in file. Performed only once
     C* ***  at start of program.
     C*                                                               *
     C* F12FLG = 0
     C                     Z-ADD*ZERO     F12FLG
     C* MPPGMN = ' '
     C                     MOVEL*BLANKS   XPPGMN
     C* MPSPGM = ' '
     C                     MOVEL*BLANKS   XPSPGM
     C* MPPGMD = ' '
     C                     MOVEL*BLANKS   XPPGMD
     C*                                                               *
     C* Count number of parms passed.
     C* Protect all parms first, Then if a parm was not
     C* passed, unprotect it and reduce parm count.
     C*                                                               *
     C* If parms are not generated, these fields
     C* will be blank.
     C* FLDATR PS0101,*PR
     C                     MOVE 'X'       #PR
     C                     MOVEL'PS0101  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR PS0102,*PR
     C                     MOVE 'X'       #PR
     C                     MOVEL'PS0102  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* PRMCNT = 002
     C                     Z-ADD002       PRMCNT
     C*                                                               *
     C* IF PRM002=' '
     C           PRM002    IFEQ *BLANKS
     C* PRMCNT = PRMCNT-1
     C           PRMCNT    SUB  1         NRSLT0
     C                     Z-ADDNRSLT0    PRMCNT
     C* FLDATR PS0102,*DS
     C                     MOVE 'X'       #DS
     C                     MOVEL'PS0102  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* IF PRM001=' '
     C           PRM001    IFEQ *BLANKS
     C* PRMCNT = PRMCNT-1
     C           PRMCNT    SUB  1         NRSLT0
     C                     Z-ADDNRSLT0    PRMCNT
     C* FLDATR PS0101,*DS
     C                     MOVE 'X'       #DS
     C                     MOVEL'PS0101  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C*                                                               *
     C* END                                                           *
     C                     END
     C*                                                               *
     C*                                                               *
     C* Set Key values to parms passed
     C* SVK001 = PRM001
     C                     MOVE PRM001    SVK001
     C* SVK002 = PRM002
     C                     MOVE *BLANKS   SVK002
     C                     MOVELPRM002    SVK002
     C*                                                               *
     C* Set Reposition values to parms passed
     C* PS0101 = PRM001
     C                     MOVE PRM001    PS0101
     C* PS0102 = PRM002
     C                     MOVE *BLANKS   PS0102
     C                     MOVELPRM002    PS0102
     C*                                                               *
     C* Set file for list to first record in file
     C* SETLL D.MENU,F.MNUPGM,SVK001,SVK002
     C*
     C                     EXSR S003
     C*                                                               *
     C* Fill list Panel
     C* EXSUBR S01FWD
     C                     EXSR S01FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN63
     C                     MOVE '1'       *IN65
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     WRITESCR001
     C* Turn off SFLDSP in case of empty subfile
     C           RRN01     IFLT 1
     C                     MOVE '0'       *IN64
     C                     ELSE
     C                     MOVE '1'       *IN64
     C                     END
     C           ERN01     IFEQ 1
     C                     MOVE '1'       *IN67
     C                     ELSE
     C                     MOVE '0'       *IN67
     C                     END
     C                     Z-ADDRRN01     DRN01
     C                     EXFMTSCR001C1
     C           SFLRRN    IFGT 0
     C           DRN01     ANDNE0
     C                     Z-ADDSFLRRN    RRN01
     C                     Z-ADDSFLRRN    DRN01
     C                     END
     C                     MOVEA'0'       *IN,1
     C                     MOVEA'1'       *IN,3
     C                     MOVEA'0'       *IN,7
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Exit
     C*
     C           *INKC     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Exit program on function key 3
     C*                                                               *
     C* EXTPGM                                                        *
     C                     MOVE 'Y'       LRFLAG
     C                     MOVE *BLANK    SCRNID
     C                     MOVEL'SEND'    SCRNID
     C                     GOTO $00199
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Create
     C*
     C           *INKF     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Process ADD Request on function key 6
     C*                                                               *
     C* MODE = 6
     C                     Z-ADD6         MODE
     C* EXSCR SC0002
     C                     ADD  1         SP
     C                     MOVEL'SC0001  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN01
     C                     EXSR S002
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVEAIN01      *IN
     C                     MOVE '1'       *IN79
     C* SETLL D.MENU,F.MNUPGM,SVK001,SVK002
     C*
     C                     EXSR S003
     C* EXSUBR S01FWD
     C                     EXSR S01FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Exit program on function key 12
     C*                                                               *
     C* EXTPGM                                                        *
     C                     MOVE 'Y'       LRFLAG
     C                     MOVE *BLANK    SCRNID
     C                     MOVEL'SEND'    SCRNID
     C                     GOTO $00199
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C*
     C* Bkwd
     C*
     C           *INKG     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backward on function key 7
     C* **  1. Check for any selected records.
     C* EXSUBR S01EDT
     C                     EXSR S01EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C* **  2. Fill panel.
     C* EXSUBR S01BKW
     C                     EXSR S01BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *INKH     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forward on function key 8
     C* **  1. Check for selected records.
     C* EXSUBR S01EDT
     C                     EXSR S01EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C* **  2. Fill panel.
     C* EXSUBR S01FWD
     C                     EXSR S01FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Bkwd
     C*
     C           *IN62     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backwards
     C*     1. Check for any selected records.
     C* EXSUBR S01EDT
     C                     EXSR S01EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C*     2. Fill panel.
     C* EXSUBR S01BKW
     C                     EXSR S01BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *IN61     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forwards
     C*     1. Check for selected records.
     C* EXSUBR S01EDT
     C                     EXSR S01EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C*     2. Fill Panel.
     C* EXSUBR S01FWD
     C                     EXSR S01FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* *** Check for any selected records on post-enter.
     C*                                                               *
     C* Reset reposition flag and check for any
     C* selected records.
     C* POSFLG = 0
     C                     Z-ADD*ZERO     POSFLG
     C* EXSUBR S01EDT
     C                     EXSR S01EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C* *** Check for reposition
     C* *** Check field only if not passed as parm.
     C*                                                               *
     C* IF (PS0102<>' ')&(PRM002=' ')
     C           PS0102    IFNE *BLANKS
     C           PRM002    ANDEQ*BLANKS
     C* POSFLG = 1
     C                     Z-ADD1         POSFLG
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C* IF (PS0101<>' ')&(PRM001=' ')
     C           PS0101    IFNE *BLANKS
     C           PRM001    ANDEQ*BLANKS
     C* POSFLG = 1
     C                     Z-ADD1         POSFLG
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* If reposition values entered, set key
     C* values to reposition values.
     C* IF POSFLG=1
     C           POSFLG    IFEQ 1
     C* SVK001 = PS0101
     C                     MOVE PS0101    SVK001
     C* SVK002 = PS0102
     C                     MOVE PS0102    SVK002
     C* Reset/clear reposition values to parms passed
     C* PS0101 = PRM001
     C                     MOVE PRM001    PS0101
     C* PS0102 = PRM002
     C                     MOVE *BLANKS   PS0102
     C                     MOVELPRM002    PS0102
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Refresh screen if record selected or
     C* if reposition was selected.
     C* IF POSFLG=1 | updflg=1
     C           POSFLG    IFEQ 1
     C           UPDFLG    OREQ 1
     C*                                                               *
     C* Set pointer to file.
     C* SETLL D.MENU,F.MNUPGM,SVK001,SVK002
     C*
     C                     EXSR S003
     C*                                                               *
     C* Fill Panel.
     C* EXSUBR S01FWD
     C                     EXSR S01FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C* END                                                           *
     C                     END
     C                     END
     C                     END
     C                     END
     C           $00199    ENDSR
     C/EJECT
     C*****************************************************************
     C* S002 - Detail Screen for Programs
     C*****************************************************************
     C           S002      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'0000000' *IN,1
     C                     MOVEA'1'       *IN,80
     C*                                                               *
     C* *** Check option is allowed
     C* BAT = 'I'
     C                     MOVE 'I'       BAT
     C* USER = *userid
     C                     MOVE *BLANKS   RN0002
     C                     MOVELUSER      RN0002
     C* PGM = 'MNU050C'
     C                     MOVE *BLANKS   RN0001
     C                     MOVEL'MNU050C' RN0001
     C* ACT = %ctc(Mode)
     C*  Convert To Character
     C                     MOVE *BLANK    ACT
     C                     MOVELMODE      ACT
     C* OK = ' '
     C                     MOVE *BLANKS   OK
     C* CALL 'MNU040C',bat,user,pgm,act,ok
     C                     Z-ADD1         CALLST
     C                     CALL 'MNU040C' P0001        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* IF ok = 'N'
     C           OK        IFEQ 'N'
     C* DSPERR *NONE,'MNU0006','MENUERR'
     C                     MOVEL'MNU0006' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C*                                                               *
     C* *** Clear detail screens, setup field attributes,
     C* *** and retrieve field values from files.
     C*                                                               *
     C* Refresh exit flag at start of detail
     C* EXTSCR = 0
     C                     Z-ADD*ZERO     EXTSCR
     C*                                                               *
     C* Process Edit, Delete, and Display action choices
     C* IF MODE=2 | MODE=4 | MODE=5
     C           MODE      IFEQ 2
     C           MODE      OREQ 4
     C           MODE      OREQ 5
     C*                                                               *
     C* Save Key values prior to clearing screens,
     C* otherwise, keys will be lost when screen is
     C* cleared.
     C* SVK001 = MPPGMN
     C                     MOVE XPPGMN    SVK001
     C* SVK002 = MPSPGM
     C                     MOVE XPSPGM    SVK002
     C* MPPGMN = ' '
     C                     MOVEL*BLANKS   XPPGMN
     C* MPSPGM = ' '
     C                     MOVEL*BLANKS   XPSPGM
     C* MPPGMD = ' '
     C                     MOVEL*BLANKS   XPPGMD
     C* MPPRM1 = ' '
     C                     MOVEL*BLANKS   XPPRM1
     C* MPPRM2 = ' '
     C                     MOVEL*BLANKS   XPPRM2
     C* MPPRM3 = ' '
     C                     MOVEL*BLANKS   XPPRM3
     C* MPPRM4 = ' '
     C                     MOVEL*BLANKS   XPPRM4
     C* MPPGMT = ' '
     C                     MOVE *BLANKS   XPPGMT
     C* MPPGMN = SVK001
     C                     MOVE SVK001    XPPGMN
     C* MPSPGM = SVK002
     C                     MOVE SVK002    XPSPGM
     C*                                                               *
     C* Revise, Delete, and Display, protect
     C* key fields from being changed.
     C* GRPATR keys,*PR
     C                     MOVE 'X'       #PR
     C                     MOVEL'KEYS    'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* Get selected record for edit function.
     C* IF MODE=2
     C           MODE      IFEQ 2
     C* GETREC D.MENU,F.MNUPGM,*lock,*eq,SVK001,SVK002
     C*
     C                     EXSR S004
     C*                                                               *
     C* If record locked, return to previous
     C* screen and display lock message from OS/400.
     C* IF %lock(D.MENU,F.MNUPGM)=*yes
     C*  Lock status on file
     C                     EXSR SLOCK
     C           LCK01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C*                                                               *
     C* If record not found, Display message
     C* and return.
     C* IF %sts(D.MENU,F.MNUPGM)=*no
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XNO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR *none,'Record not found for Edit'
     C                     MOVELC0001     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Get secondary records if any were selected.
     C* MODDSC = 'CHANGE'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'CHANGE'  MODDSC
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C* Protect Data fields from being changed for
     C* delete and display action choices.
     C* GRPATR data,*pr
     C                     MOVE 'X'       #PR
     C                     MOVEL'DATA    'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* Get selected record for delete function.
     C* IF MODE=4
     C           MODE      IFEQ 4
     C* GETREC D.MENU,F.MNUPGM,*lock,*eq,SVK001,SVK002
     C*
     C                     EXSR S004
     C*                                                               *
     C* If record locked, return to previous
     C* screen and display lock message from OS/400.
     C* IF %lock(D.MENU,F.MNUPGM)=*yes
     C*  Lock status on file
     C                     EXSR SLOCK
     C           LCK01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C*                                                               *
     C* If record not found, Display message
     C* and return.
     C* IF %sts(D.MENU,F.MNUPGM)=*no
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XNO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR *none,'Record not found for Delete'
     C                     MOVELC0002     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Get secondary records if any were selected.
     C* MODDSC = 'DELETE'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'DELETE'  MODDSC
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C* Get selected record for display function.
     C* GETREC D.MENU,F.MNUPGM,*eq,SVK001,SVK002
     C*
     C                     EXSR S005
     C*                                                               *
     C* If record not found, Display message
     C* and return.
     C* IF %sts(D.MENU,F.MNUPGM)=*no
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XNO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR *none,'Record not found for Display'
     C                     MOVELC0003     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Get secondary records if any were selected.
     C* MODDSC = 'DISPLAY'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'DISPLAY' MODDSC
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C*                                                               *
     C* Clear screens for Add function.
     C* MPPGMN = ' '
     C                     MOVEL*BLANKS   XPPGMN
     C* MPSPGM = ' '
     C                     MOVEL*BLANKS   XPSPGM
     C* MPPGMD = ' '
     C                     MOVEL*BLANKS   XPPGMD
     C* MPPRM1 = ' '
     C                     MOVEL*BLANKS   XPPRM1
     C* MPPRM2 = ' '
     C                     MOVEL*BLANKS   XPPRM2
     C* MPPRM3 = ' '
     C                     MOVEL*BLANKS   XPPRM3
     C* MPPRM4 = ' '
     C                     MOVEL*BLANKS   XPPRM4
     C* MPPGMT = ' '
     C                     MOVE *BLANKS   XPPGMT
     C* MPPGMN = MCPGMN
     C                     MOVE RN0003    XPPGMN
     C* SVK001 = MCPGMN
     C                     MOVE RN0003    SVK001
     C* MODDSC = 'ADD'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'ADD'     MODDSC
     C* END                                                           *
     C                     END
     C* F12FLG = 0
     C                     Z-ADD*ZERO     F12FLG
     C*                                                               *
     C* IF mode = 6
     C           MODE      IFEQ 6
     C* GRPATR data,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'DATA    'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* GRPATR keys,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'KEYS    'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* IF mode = 2
     C           MODE      IFEQ 2
     C* GRPATR data,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'DATA    'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     EXFMTSCR002
     C                     MOVEA'000'     *IN,5
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Return to list panel on function key 12
     C* Set exit flag to signal previous screen
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C*                                                               *
     C* Release record if edit or delete functions
     C* IF mode=2 | mode=4
     C           MODE      IFEQ 2
     C           MODE      OREQ 4
     C* RLSREC D.MENU,F.MNUPGM
     C*
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     UNLCKMNUPGM                 91  RLS LCK MNUPGM
     C* END                                                           *
     C                     END
     C*                                                               *
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* Process Screen Validation.
     C           CHKVAR    IFEQ 1
     C                     EXSR S002V
     C                     END
     C           VALIDF    IFEQ 1
     C           CHKVAR    OREQ 0
     C*
     C* Delete
     C*
     C           *INKN     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Perform delete on function key 14
     C*                                                               *
     C* ** Delete
     C* IF MODE=4
     C           MODE      IFEQ 4
     C* ERROR = 'N'
     C                     MOVE 'N'       ERROR
     C*                                                               *
     C* GETREC D.MNUOPT3,F.MNUOPT3,*eq,MPPGMN,mpspgm
     C*
     C                     EXSR S006
     C* IF %sts(d.mnuopt3,f.mnuopt3) = *yes
     C*  Status of last file I/O
     C           STS02     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR *NONE,'MNU0012','MENUERR'
     C                     MOVEL'MNU0012' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* ERROR = 'Y'
     C                     MOVE 'Y'       ERROR
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF error = 'N'
     C           ERROR     IFEQ 'N'
     C* DELETE D.MENU,F.MNUPGM
     C*
     C                     EXSR S007
     C*                                                               *
     C* IF %STS(D.MENU,F.MNUPGM)=*YES
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* *** Perform updates to file
     C*                                                               *
     C* IF MODE<>4
     C           MODE      IFNE 4
     C*                                                               *
     C* ** Revise
     C* IF MODE=2
     C           MODE      IFEQ 2
     C* UPDATE D.MENU,F.MNUPGM
     C*
     C                     EXSR S008
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C* ** Create
     C* IF MODE=6
     C           MODE      IFEQ 6
     C* WRITE D.MENU,F.MNUPGM
     C*
     C                     EXSR S009
     C* ** Set keys for first record to display.
     C* SVK001 = MPPGMN
     C                     MOVE XPPGMN    SVK001
     C* SVK002 = MPSPGM
     C                     MOVE XPSPGM    SVK002
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF %STS(D.MENU,F.MNUPGM)=*YES
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C           $00299    ENDSR
     C/EJECT
     C*****************************************************************
     C* SREDSP -  Redisplay Windows within stack.
     C*****************************************************************
     C           SREDSP    BEGSR
     C*
     C                     Z-ADDSP        CT
     C           CT        DOWGT1
     C           STY,CT    ANDNE'F'
     C                     SUB  1         CT
     C                     END
     C*
     C*  Redisplay Windows within stack.
     C*
     C           CT        DOWLESP
     C           CT        ANDGT0
     C*
     C           SID,CT    IFEQ 'SC0001'
     C                     MOVEAIN01      *IN
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR001
     C                     WRITESCR001C1
     C                     ELSE
     C           SID,CT    IFEQ 'SC0002'
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR002
     C                     END
     C                     END
     C*
     C                     ADD  1         CT
     C                     END
     C*
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* S01BKW - SCRN SUB
     C*****************************************************************
     C           S01BKW    BEGSR
     C*
     C* ***  Scroll information backward
     C*                                                               *
     C* C01 = 0
     C                     Z-ADD*ZERO     Z1
     C* ** Clear hidden key arrays used for record
     C* ** retrieval.
     C* A001 = ' '
     C                     MOVEA*BLANKS   A01
     C* A002 = ' '
     C                     MOVEA*BLANKS   A02
     C* FLDATR fl0001,*pr,*nd
     C                     MOVE 'X'       #PR
     C                     MOVE 'X'       #ND
     C                     MOVEL'FL0001  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* GETBLK D.MENU,F.MNUPGM,*PV
     C*
     C                     EXSR S010
     C*
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADD11        WLCNTR           INIT LOOP CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Initialize subfile    SCR001S1
     C*          ---------------------------------------------------------------
     C                     MOVEA'0000'    *IN,63           SFLCLR,DSP,NXTCHG,INZ
     C                     WRITESCR001C1                   CLEAR SUBFILE
     C                     Z-ADD0         RRN01
     C*
     C                     Z-ADD1         XRN01            Init Next RRN
     C                     Z-ADDXRN01     SRN01
     C                     MOVEA'1110'    *IN,63           DSP,DSPCTL,NXTCHG
     C                     MOVEA*IN       INS01
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD01    DOUNE'Y'                        RD.SW.MNUPGM    MNUHL
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     Z-ADD*ZEROS    FL0001
     C                     MOVEL*BLANKS   XPPGMN
     C                     MOVEL*BLANKS   XPSPGM
     C                     MOVEL*BLANKS   XPPGMD
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     READ MNUPGM              N  9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     Z-ADD*ZERO     HRC01            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     END
     C*
     C           SWRD01    IFEQ 'Y'                        RD.SW.MNUPGM    MNUHL
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C*
     C* FLDATR fl0001,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'FL0001  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* C01 = C01+1
     C           Z1        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z1
     C* ** Save key values in key arrays.
     C* A001(C01) = MPPGMN
     C                     MOVE *BLANKS   A01,Z1
     C                     MOVE XPPGMN    A01,Z1
     C* A002(C01) = MPSPGM
     C                     MOVE *BLANKS   A02,Z1
     C                     MOVE XPSPGM    A02,Z1
     C* ** Fill any possible work fields in list
     C* ** panel with secondary file fields.
     C* ENDBLK                                                        *
     C           SWEXBL    IFEQ *ZERO
     C           SWSKPR    ANDEQ*ZERO
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     Z-ADDWCNTR     WRRN01
     C                     MOVEA*IN       INSAV1
     C                     ADD  1         RRN01            INCREMENT RRN
     C                     WRITESCR001S1               90
     C                     ADD  1         XRN01            Incr NEXT RRN
     C                     END
     C                     END
     C                     END
     C                     Z-ADDRRN01     NXTRRN
     C                     Z-ADD*ZEROS    FL0001
     C                     MOVEL*BLANKS   XPPGMN
     C                     MOVEL*BLANKS   XPSPGM
     C                     MOVEL*BLANKS   XPPGMD
     C                     MOVEAINS01     *IN
     C                     MOVE '0'       *IN65
     C                     MOVEA*IN       INSAV1
     C                     Z-ADDWCNTR     WGETR
     C           WGETR     DOWLTWLCNTR
     C                     ADD  1         RRN01            INCREMENT RRN
     C                     WRITESCR001S1               90
     C                     ADD  1         XRN01            Incr NEXT RRN
     C                     ADD  1         WGETR            INCREMENT CNTR
     C                     END
     C           NXTRRN    IFGT 0
     C           NXTRRN    CHAINSCR001S1             90
     C                     MOVEAINSAV1    *IN
     C                     UPDATSCR001S1               90
     C                     MOVEAINS01     *IN
     C                     END
     C           RRN01     IFGT SRN01
     C                     Z-ADDSRN01     RRN01
     C                     END
     C                     EXSR S012                       CHK EOF
     C*                                                               *
     C*
     C           $S01BK    ENDSR
     C/EJECT
     C*****************************************************************
     C* S01EDT - SCRN SUB
     C*****************************************************************
     C           S01EDT    BEGSR
     C*
     C* ** Process Maintenance on Detail Panel (MB)
     C* **   1. Check for any selected records, If record
     C* **      selected, display detail panel.
     C* UPDFLG = 0
     C                     Z-ADD*ZERO     UPDFLG
     C* I01 = 0
     C                     Z-ADD*ZERO     Z2
     C* DOBLK D.MENU
     C*
     C                     Z-ADDRRN01     SRN01            Save RRN
     C                     Z-ADD1         RRN01            INIT RRN
     C                     MOVEA'00'      *IN,90
     C                     MOVEA*IN       INS01
     C                     Z-ADD*ZERO     SWEXBL
     C           *IN90     DOUEQ'1'
     C           *IN91     OREQ '1'
     C           *IN64     OREQ '0'
     C           SWEXBL    ORNE *ZERO
     C                     READCSCR001S1               9190
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C                     MOVEAINSAV1    *IN
     C                     MOVE '1'       *IN65
     C                     MOVEA'0'       *IN,1
     C                     MOVEA'1'       *IN,3
     C                     MOVEA'0'       *IN,7
     C* I01 = I01+1
     C           Z2        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z2
     C*                                                               *
     C* ** display detail screen
     C* IF (FL0001=2)|(FL0001=4)|(FL0001=5)
     C           FL0001    IFEQ 2
     C           FL0001    OREQ 4
     C           FL0001    OREQ 5
     C* MODE = FL0001
     C                     Z-ADDFL0001    MODE
     C* ** set keys from hidden key arrays.
     C* MPPGMN = A001(I01)
     C                     MOVE A01,Z2    XPPGMN
     C* MPSPGM = A002(I01)
     C                     MOVE A02,Z2    XPSPGM
     C* SVK001 = A001(I01)
     C                     MOVE A01,Z2    SVK001
     C* SVK002 = A002(I01)
     C                     MOVE A02,Z2    SVK002
     C* ** Get record and any secondary records.
     C* GETREC D.MENU,F.MNUPGM,*EQ,MPPGMN,MPSPGM
     C*
     C                     EXSR S013
     C* ** Display Screen.
     C* EXSCR SC0002
     C                     ADD  1         SP
     C                     MOVEL'SC0001  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN01
     C                     UPDATSCR001S1               90
     C                     EXSR S002
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S01ED
     C                     END
     C           RRN01     CHAINSCR001S1             9091
     C                     MOVEAIN01      *IN
     C                     MOVE '1'       *IN79
     C* FL0001 = 0
     C                     Z-ADD*ZERO     FL0001
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* END                                                           *
     C                     END
     C* ** Process any optional action codes.
     C*    1. Set keys from hidden key arrays.
     C*    2. Get record and any secondary records.
     C*    3. Display Screen.
     C*                                                               *
     C* ** If the action choice is not
     C* ** one of the allowed values,
     C* ** display error message.
     C* IF (FL0001<>0)&(UPDFLG=0)
     C           FL0001    IFNE *ZERO
     C           UPDFLG    ANDEQ*ZERO
     C* DSPERR FL0001,'Invalid action choice'
     C                     MOVELC0004     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'FL0001  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     MOVEA'00'      *IN,90
     C                     MOVEA*IN       INSAV1
     C                     UPDATSCR001S1               90
     C                     MOVEA'0'       *IN,1
     C                     MOVEA'1'       *IN,3
     C                     MOVEA'0'       *IN,7
     C                     END
     C                     END
     C*
     C                     Z-ADDSRN01     RRN01
     C                     MOVEAINS01     *IN
     C*
     C*
     C*
     C           $S01ED    ENDSR
     C/EJECT
     C*****************************************************************
     C* S01FWD - SCRN SUB
     C*****************************************************************
     C           S01FWD    BEGSR
     C*
     C* *** Scroll information forward
     C*                                                               *
     C* C01 = 0
     C                     Z-ADD*ZERO     Z1
     C* ** Clear Hidden key arrays used for later
     C* ** record retrieval.
     C* A001 = ' '
     C                     MOVEA*BLANKS   A01
     C* A002 = ' '
     C                     MOVEA*BLANKS   A02
     C* FLDATR fl0001,*pr,*nd
     C                     MOVE 'X'       #PR
     C                     MOVE 'X'       #ND
     C                     MOVEL'FL0001  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* GETBLK D.MENU,F.MNUPGM,*NX
     C*
     C*
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADD11        WLCNTR           INIT LOOP CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Initialize subfile    SCR001S1
     C*          ---------------------------------------------------------------
     C                     MOVEA'0000'    *IN,63           SFLCLR,DSP,NXTCHG,INZ
     C                     WRITESCR001C1                   CLEAR SUBFILE
     C                     Z-ADD0         RRN01
     C*
     C                     Z-ADD1         XRN01            Init Next RRN
     C                     Z-ADDXRN01     SRN01
     C                     MOVEA'1110'    *IN,63           DSP,DSPCTL,NXTCHG
     C                     MOVEA*IN       INS01
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD01    DOUNE'Y'                        RD.SW.MNUPGM    MNUHL
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     Z-ADD*ZEROS    FL0001
     C                     MOVEL*BLANKS   XPPGMN
     C                     MOVEL*BLANKS   XPSPGM
     C                     MOVEL*BLANKS   XPPGMD
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     READ MNUPGM              N  9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     Z-ADD*ZERO     HRC01            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     END
     C*
     C           SWRD01    IFEQ 'Y'                        RD.SW.MNUPGM    MNUHL
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C* FLDATR fl0001,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'FL0001  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* C01 = C01+1
     C           Z1        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z1
     C* ** Save key information in key arrays.
     C* A001(C01) = MPPGMN
     C                     MOVE *BLANKS   A01,Z1
     C                     MOVE XPPGMN    A01,Z1
     C* A002(C01) = MPSPGM
     C                     MOVE *BLANKS   A02,Z1
     C                     MOVE XPSPGM    A02,Z1
     C* ** Set any work fields to values in
     C* ** secondary file fields.
     C* ENDBLK                                                        *
     C           SWEXBL    IFEQ *ZERO
     C           SWSKPR    ANDEQ*ZERO
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     Z-ADDWCNTR     WRRN01
     C                     MOVEA*IN       INSAV1
     C                     ADD  1         RRN01            INCREMENT RRN
     C                     WRITESCR001S1               90
     C                     ADD  1         XRN01            Incr NEXT RRN
     C                     END
     C                     END
     C                     END
     C                     Z-ADDRRN01     NXTRRN
     C                     Z-ADD*ZEROS    FL0001
     C                     MOVEL*BLANKS   XPPGMN
     C                     MOVEL*BLANKS   XPSPGM
     C                     MOVEL*BLANKS   XPPGMD
     C                     MOVEAINS01     *IN
     C                     MOVE '0'       *IN65
     C                     MOVEA*IN       INSAV1
     C                     Z-ADDWCNTR     WGETR
     C           WGETR     DOWLTWLCNTR
     C                     ADD  1         RRN01            INCREMENT RRN
     C                     WRITESCR001S1               90
     C                     ADD  1         XRN01            Incr NEXT RRN
     C                     ADD  1         WGETR            INCREMENT CNTR
     C                     END
     C           NXTRRN    IFGT 0
     C           NXTRRN    CHAINSCR001S1             90
     C                     MOVEAINSAV1    *IN
     C                     UPDATSCR001S1               90
     C                     MOVEAINS01     *IN
     C                     END
     C           RRN01     IFGT SRN01
     C                     Z-ADDSRN01     RRN01
     C                     END
     C                     EXSR S012                       RESET FP
     C*                                                               *
     C* If no records, redisplay last screen
     C* IF c01 = 0
     C           Z1        IFEQ *ZERO
     C* EXSUBR s01bkw
     C                     EXSR S01BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S01FW
     C                     END
     C* END                                                           *
     C                     END
     C*
     C           $S01FW    ENDSR
     C/EJECT
     C*****************************************************************
     C* SMSG - calls message handling program to either clear, add, or
     C*        remove messages from message subfile or extracts
     C*        messages from message files.
     C*****************************************************************
     C           SMSG      BEGSR
     C*
     C* Add message to message subfile
     C*
     C           MSGACT    IFEQ 'A'
     C           MSGACT    OREQ 'R'
     C                     MOVE 'Y'       MSGFLG
     C                     ELSE
     C* Clear message subfile or extract message from message file.
     C*
     C           MSGACT    IFEQ 'C'
     C           MSGACT    OREQ 'E'
     C                     MOVE 'N'       MSGFLG
     C                     END
     C                     END
     C*
     C           MSGACT    IFEQ 'C'
     C           MSGACT    OREQ 'A'
     C           MSGACT    OREQ 'E'
     C                     CALL 'CLMSG'   PMSGCL
     C                     MOVE *BLANK    MSGID
     C                     MOVE *BLANK    MSGF
     C                     MOVE *BLANK    MSGFL
     C* Do not clear the message data field if message is extracted
     C* from message file
     C           MSGACT    IFNE 'E'
     C                     MOVE *BLANK    MSGDTA
     C                     END
     C                     END
     C*
     C                     ENDSR
     C/EJECT
     C**************************************************************************
     C* S003   - SETLL D.MENU,F.MNUPGM,SVK001,SVK002
     C**************************************************************************
     C           S003      BEGSR
     C                     Z-ADD5         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     MOVEL*LOVAL    HPSPGM           Secondary Program Nam
     C*
     C                     MOVELSVK001    KCPG01
     C                     MOVELSVK001    HPPGMN           Program Name
     C                     MOVELSVK001    MPPGMN           Program Name
     C                     MOVELSVK002    KPSP02
     C                     MOVELSVK002    HPSPGM           Secondary Program Nam
     C                     MOVELSVK002    MPSPGM           Secondary Program Nam
     C*
     C           K0001     SETLLMNUPGM                   90
     C           *IN90     IFEQ '0'                        REC NOT MATCH
     C                     Z-ADD12        STS01            SYMUL NOT FND
     C                     END                             *IN90=0
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S004   - GETREC D.MENU,F.MNUPGM,*lock,*eq,SVK001,SVK002
     C**************************************************************************
     C           S004      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KCPG01
     C                     MOVELSVK001    KCPG01
     C                     MOVEL*BLANK    KPSP02
     C                     MOVELSVK002    KPSP02
     C           K0001     CHAINMNUPGM               9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C*
     C           *IN91     IFEQ '1'                        RCK LOCK
     C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
     C                     END
     C*
     C                     MOVE 'N'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     Z-ADD*ZERO     HRC01            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S005   - GETREC D.MENU,F.MNUPGM,*eq,SVK001,SVK002
     C**************************************************************************
     C           S005      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KCPG01
     C                     MOVELSVK001    KCPG01
     C                     MOVEL*BLANK    KPSP02
     C                     MOVELSVK002    KPSP02
     C           K0001     CHAINMNUPGM              N9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     Z-ADD*ZERO     HRC01            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S006   - GETREC D.MNUOPT3,F.MNUOPT3,*eq,MPPGMN,mpspgm
     C**************************************************************************
     C           S006      BEGSR
     C                     Z-ADD2         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KCPG01
     C                     MOVELXPPGMN    KCPG01
     C                     MOVEL*BLANK    KCSP02
     C                     MOVELXPSPGM    KCSP02
     C           K0002     CHAINMNUOPT3              9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD02           RD.SW.MNUOPT3
     C                     Z-ADD*ZERO     HRC02            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD02           RD.SW.MNUOPT3
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S007   - DELETE D.MENU,F.MNUPGM
     C**************************************************************************
     C           S007      BEGSR
     C                     MOVEA'00'      *IN,90
     C                     MOVE *HIVAL    SVS01
     C                     MOVEL*BLANK    KCPG01
     C                     MOVELXPPGMN    KCPG01
     C                     MOVEL*BLANK    KPSP02
     C                     MOVELXPSPGM    KPSP02
     C           K0001     SETLLMNUPGM                     SETLL  MNUPGM
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Delete Record - MNUPGM
     C*          ---------------------------------------------------------------
     C           *IN90     DOUEQ'1'
     C           *IN91     OREQ '1'
     C*
     C                     Z-ADD1         WFILE#           SET FILE#
     C           K0001     READEMNUPGM                 9190READE  MNUPGM
     C*
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C                     DELETMNUPGM                 91  DELETE MNUPGM
     C                     Z-ADDSTS01     SVS01            SAVE FILE STS
     C*          ---------------------------------------------------------------
     C*          | Send Message To Indicate Delete Status
     C*          ---------------------------------------------------------------
     C           *IN91     IFEQ '0'
     C                     MOVELA1,5      MSGDTA           Record deleted from f
     C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
     C                     EXSR SMSG                       GET THE MESSAGE
     C                     END                             END-DEL STATUS
     C*
     C                     ELSE                            ELSE-READ-FILE
     C           *IN90     IFEQ '1'                        NO RCD FOUND
     C                     MOVELA1,6      MSGDTA           No record found to de
     C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
     C                     EXSR SMSG                       GET THE MESSAGE
     C                     ELSE
     C                     MOVE 'Y'       MSGFLG           SET ON ERROR FLAG
     C                     END                             READ KEY FILE FAIL
     C*
     C                     END                             END-READ KEY FILE
     C                     END                             EMD-DOUNE LOOP
     C                     MOVEA'00'      *IN,90
     C*
     C           K0001     SETLLMNUPGM                     RESUME FILE POINTER
     C                     Z-ADDSVS01     STS01            RESTORE FILE STS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S008   - UPDATE D.MENU,F.MNUPGM
     C**************************************************************************
     C           S008      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KCPG01           Program Name
     C                     MOVELHPPGMN    KCPG01
     C                     MOVEL*BLANK    KPSP02           Secondary Program Nam
     C                     MOVELHPSPGM    KPSP02
     C           K0001     CHAINMNUPGM               9091  CHAIN  MNUPGM
     C*
     C           *IN91     IFEQ '1'                        RCK LOCK
     C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
     C                     END
     C*
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C           MPPGMD    IFEQ XPPGMD
     C           MPPGMN    ANDEQXPPGMN
     C           MPPGMT    ANDEQXPPGMT
     C           MPPRM1    ANDEQXPPRM1
     C           MPPRM2    ANDEQXPPRM2
     C           MPPRM3    ANDEQXPPRM3
     C           MPPRM4    ANDEQXPPRM4
     C           MPSPGM    ANDEQXPSPGM
     C                     UNLCKMNUPGM                 91  RLS LCK MNUPGM
     C                     ELSE
     C                     EXSR SMVTOF                     MOVE FLD TO FILE
     C                     UPDATMNUPGMF                90  UPDATE MNUPGM
     C           *IN90     IFEQ '0'                        REC UPDATED
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     MOVELA1,7      MSGDTA           Record update for fil
     C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
     C                     EXSR SMSG                       GET THE MESSAGE
     C                     END                             END-UPDATE STATUS
     C                     END                             END-FLD COMPARE
     C*
     C*
     C                     ELSE
     C                     MOVELA1,8      MSGDTA           Unable to update reco
     C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
     C                     EXSR SMSG                       GET THE MESSAGE
     C                     END                             END-STATUS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S009   - WRITE D.MENU,F.MNUPGM
     C**************************************************************************
     C           S009      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     EXSR SMVTOF                     MOVE FLD TO FILE
     C                     WRITEMNUPGMF                90  ADD REC TO MNUPGM
     C*
     C           *IN90     IFEQ *ZERO                      RECORD ADDED
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     MOVELA1,9      MSGDTA           Record added to file
     C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
     C                     EXSR SMSG                       GET THE MESSAGE
     C                     ELSE
     C                     MOVELA1,10     MSGDTA           Unable to add record
     C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
     C                     EXSR SMSG                       GET THE MESSAGE
     C                     END                             END-STATUS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S010   - GETBLK D.MENU,F.MNUPGM,*PV
     C**************************************************************************
     C           S010      BEGSR
     C*
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADDWRRN01    WLCNTR           INIT LOOP CNTR
     C                     ADD  WADJ01    WLCNTR           ADD ADJ.CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD01    DOUNE'Y'                        RD.SW.MNUPGM    MNUHL
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     READPMNUPGM              N  9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     Z-ADD*ZERO     HRC01            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     END
     C*
     C           SWRD01    IFEQ 'Y'                        RD.SW.MNUPGM    MNUHL
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     END
     C                     END
     C                     EXSR S011                       CHK BOF
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S011   - Process To Reset File Pointer(BOF) - MNUPGM
     C**************************************************************************
     C           S011      BEGSR
     C*
     C           SWRD01    IFNE 'Y'                        RD.SW.MNUPGM    MNUHL
     C           STS01     ANDNE1122                       RCD LOCK
     C           STS01     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     Z-ADDSTS01     SVS01            SAVE FILE STS
     C                     MOVEL*BLANK    KPPG01           Program Name
     C                     MOVELMPPGMN    KPPG01
     C                     MOVEL*BLANK    KPSP02           Secondary Program Nam
     C                     MOVELMPSPGM    KPSP02
     C           K0003     SETLLMNUPGM
     C                     Z-ADDSVS01     STS01            RESTORE FILE STS
     C*
     C                     MOVELA1,11     MSGDTA           The beginning of the
     C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
     C                     EXSR SMSG                       GET THE MESSAGE
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S012   - Process To Reset File Pointer(EOF) - MNUPGM
     C**************************************************************************
     C           S012      BEGSR
     C*
     C           SWRD01    IFNE 'Y'                        RD.SW.MNUPGM    MNUHL
     C           STS01     ANDNE1122                       RCD LOCK
     C           STS01     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     Z-ADDSTS01     SVS01            SAVE FILE STS
     C                     MOVEL*BLANK    KPPG01           Program Name
     C                     MOVELMPPGMN    KPPG01
     C                     MOVEL*BLANK    KPSP02           Secondary Program Nam
     C                     MOVELMPSPGM    KPSP02
     C           K0003     SETGTMNUPGM
     C                     Z-ADDSVS01     STS01            RESTORE FILE STS
     C*
     C                     Z-ADD1         WADJ01
     C           WCNTR     IFNE *ZERO
     C                     ADD  11        WADJ01
     C                     END
     C                     MOVELA1,12     MSGDTA           The end of the file w
     C                     MOVE 'A'       MSGACT           SET ON ADD FLAG
     C                     EXSR SMSG                       GET THE MESSAGE
     C                     ELSE
     C                     Z-ADDWRRN01    WADJ01
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S013   - GETREC D.MENU,F.MNUPGM,*EQ,MPPGMN,MPSPGM
     C**************************************************************************
     C           S013      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KPPG01
     C                     MOVELXPPGMN    KPPG01
     C                     MOVEL*BLANK    KPSP02
     C                     MOVELXPSPGM    KPSP02
     C           K0003     CHAINMNUPGM              N9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     Z-ADD*ZERO     HRC01            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUPGM    MNUHL
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S002V - Detail Screen for Programs
     C* Validation subroutine for -- SC0002
     C**************************************************************************
     C           S002V     BEGSR
     C*
     C                     Z-ADD1         VALIDF
     C*
     C           XPPGMN    IFEQ A1,1                       Lst Valid/Invalid val
     C                     Z-ADD0         LISTF            Invalid value found
     C                     ELSE
     C                     Z-ADD1         LISTF            Valid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'XPPGMN'  FLDNAM
     C                     MOVEL'SC0002'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'MNU0002' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C*
     C           XPPGMD    IFEQ A1,1                       Lst Valid/Invalid val
     C                     Z-ADD0         LISTF            Invalid value found
     C                     ELSE
     C                     Z-ADD1         LISTF            Valid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'XPPGMD'  FLDNAM
     C                     MOVEL'SC0002'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'AAA0001' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C*
     C           XPPGMT    IFEQ A1,2                       Lst Valid/Invalid val
     C           XPPGMT    OREQ A1,3                       Valid value
     C           XPPGMT    OREQ A1,4                       Valid value
     C                     Z-ADD1         LISTF            Valid value found
     C                     ELSE
     C                     Z-ADD0         LISTF            Invalid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'XPPGMT'  FLDNAM
     C                     MOVEL'SC0002'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'MNU0010' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C                     ENDSR
     C**************************************************************************
     C/EJECT
     C*****************************************************************
     C* *PSSR - Program Execution Errors Handler
     C*****************************************************************
     C           *PSSR     BEGSR
     C           UERCNT    IFNE *ZERO
     C                     MOVEL'*CANCL'  URSUME
     C                     ELSE
     C                     Z-ADD1         UERCNT
     C                     MOVE 'R'       MSGACT
     C                     MOVE *BLANKS   MSGF
     C                     MOVEL'QCPFMSG' MSGF
     C                     MOVE *BLANKS   MSGFL
     C                     MOVEL'QSYS'    MSGFL
     C                     MOVE *BLANKS   MSGDTA
     C           UMSGTX    IFNE *BLANKS
     C                     MOVELUMSGTX    MSGDTA
     C                     ELSE
     C                     MOVELUROUTN    MSGDTA
     C                     END
     C*
     C           USTAT     IFEQ *ZEROS
     C                     MOVE UFSTAT    USTAT
     C                     MOVE UFSRCL    USRCLN
     C                     END
     C                     MOVE USTAT     USTAT4
     C*
     C           MSGID     IFEQ *BLANKS
     C                     MOVE USTAT4    MSGID
     C                     MOVEL'RPG'     MSGID
     C                     MOVEL'QRPGMSGE'MSGF
     C                     END
     C*
     C                     CALL 'CLMSG'   PMSGCL         93
     C*
     C                     MOVEL'1'       UEROPT
     C                     EXFMTPSSR0001
     C*
     C           UEROPT    IFEQ '1'
     C                     MOVEL'*GETIN  'URSUME
     C                     ELSE
     C           UEROPT    IFEQ '2'
     C                     MOVEL'*CANCL  'URSUME
     C                     ELSE
     C           UEROPT    IFEQ '3'
     C                     MOVE '        'URSUME
     C                     END
     C                     END
     C                     END
     C                     END
     C*
     C                     MOVEL*BLANK    MSGID
     C                     MOVE *ZERO     UERCNT
     C*
     C                     ENDSRURSUME
     C*/EJECT
     C*****************************************************************
     C* SATRIB - Display Attribute Handler
     C*****************************************************************
     C           SATRIB    BEGSR
     C*
     C* FIND TABLE OFFSET BY SCREEN ID AND FIELD NAME AND FIELD INDEX
     C*
     C                     Z-ADD1         X0
     C           #MAP      LOKUPDA1,X0                   90
     C           *IN90     IFEQ '1'                        IF FIND
     C                     MOVEADA2,X0    DA3
     C*
     C*          ------------------------------------------------------
     C*          | @DSPERR/VALIDATION FIELD DISPLAY ATTRIBUTES
     C*          ------------------------------------------------------
     C           DSPERR    IFNE *BLANK
     C           DA3,6     IFNE *BLANK                     TURN ON *PC
     C                     MOVE DA3,6     X1
     C           DSPERR    IFEQ 'X'
     C                     MOVE '0'       *IN80
     C                     MOVEA'1'       *IN,X1
     C                     ELSE                            x-DSPERR EQ 'X'
     C                     MOVEA'0'       *IN,X1
     C                     END                             DSPERR EQ 'X'
     C                     END                             DA3,6 NE *BLANK
     C*
     C           DA3,2     IFNE *BLANK                     TURN ON *RI
     C                     MOVE DA3,2     X1
     C           DSPERR    IFEQ 'X'
     C                     MOVEA'1'       *IN,X1
     C                     ELSE                            x-DSPERR EQ 'X'
     C                     MOVEA'0'       *IN,X1
     C                     END                             DSPERR EQ 'X'
     C                     END                             DA3,2 NE *BLANK
     C*
     C           DA3,3     IFNE *BLANK                     TURN OFF *UL
     C           DA3,16    ANDEQ' Y'                       KEEP UL
     C                     MOVE DA3,3     X1
     C           DSPERR    IFEQ 'X'
     C                     MOVEA'0'       *IN,X1
     C                     ELSE                            x-DSPERR EQ 'X'
     C                     MOVEA'1'       *IN,X1
     C                     END                             DSPERR EQ 'X'
     C                     END                             DA3,3 NE *BLANK
     C                     ELSE                            x-DSPERR NE *BL
     C*
     C*          ------------------------------------------------------
     C*          | *DS - RESET FIELD DISPLAY ATTRIBUTES
     C*          ------------------------------------------------------
     C           #DS       IFNE *BLANK
     C           1         DO   15        X0
     C           DA3,X0    IFNE *BLANK
     C           X0        IFEQ 3
     C           DA3,16    ANDEQ' Y'
     C                     ELSE                            x-X0 EQ 3
     C                     MOVE DA3,X0    X1
     C                     MOVEA'0'       *IN,X1
     C                     END                             X0 EQ 3
     C                     END                             DA3,X0 NE *BLAN
     C                     END                             1 DO 15
     C*          ------------------------------------------------------
     C*          | *DS - TURN ON ORIGINAL COLOR ATTRIBUTES
     C*          |       IF THERE IS NO COLOR SPECIFIED
     C*          ------------------------------------------------------
     C           DA3,17    IFNE *BLANK
     C           #GN       ANDEQ*BLANK
     C           #RD       ANDEQ*BLANK
     C           #WT       ANDEQ*BLANK
     C           #PK       ANDEQ*BLANK
     C           #TQ       ANDEQ*BLANK
     C           #YW       ANDEQ*BLANK
     C           #BU       ANDEQ*BLANK
     C                     MOVE DA3,17    X1
     C                     MOVEA'1'       *IN,X1
     C                     END                             DA3,17 NE *BLAN
     C                     END                             #DS NE *BLANK
     C*
     C*          ------------------------------------------------------
     C*          | LOOP TO TURN ON/OFF ATTRIBUTE INDICATORS
     C*          ------------------------------------------------------
     C           1         DO   15        X0
     C           DA3,X0    IFNE *BLANK
     C                     MOVE DA3,X0    X1
     C*          ------------------------------------------------------
     C*          | TURN ON ATTRIBUTE INDICATORS
     C*          ------------------------------------------------------
     C           DA6,X0    IFNE *BLANK
     C                     MOVEA'1'       *IN,X1
     C                     ELSE                            x-DA6,X0 NE *BL
     C*          ------------------------------------------------------
     C*          | FOR COLOR ATTRIBUTE, RESET OTHER COLOR THAT ARE
     C*          | NOT SPECIFIED.
     C*          ------------------------------------------------------
     C           X0        IFGE 9
     C           X0        ANDLE15
     C           #GN       IFNE *BLANK
     C           #RD       ORNE *BLANK
     C           #WT       ORNE *BLANK
     C           #PK       ORNE *BLANK
     C           #TQ       ORNE *BLANK
     C           #YW       ORNE *BLANK
     C           #BU       ORNE *BLANK
     C                     MOVEA'0'       *IN,X1
     C                     END                             #GN NE *BLANK
     C                     END                             X0 GE 9
     C                     END                             DA6,X0 NE *BLAN
     C                     END                             DA3,X0 NE *BLAN
     C                     END                             1 DO 15
     C                     END                             DSPERR NE *BLAN
     C                     END                             *IN90 EQ '1'
     C*
     C                     MOVE *BLANK    #ATRIB
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SLOCK - Update Lock Flag
     C*****************************************************************
     C           SLOCK     BEGSR
     C           STS01     IFEQ 1218                       LOCK(SYS)-MNUPGM    M
     C           STS01     OREQ 1122                       LOCK(ASSET)
     C                     Z-ADD*ZERO     LCK01            SET OFF LOCK FLAG
     C                     ELSE
     C                     Z-ADD1         LCK01            SET ON LOCK FLAG
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SFERR - File Exception Handler
     C*****************************************************************
     C           SFERR     BEGSR
     C                     MOVE 'Y'       MSGFLG           MSG FLAG ON
     C           WFILE#    IFEQ 1                          MNUPGM
     C           STS01     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS01            ASSET LOCK STATUS
     C                     ELSE
     C           STS01     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS01            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C           WFILE#    IFEQ 2                          MNUOPT3
     C           STS02     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS02            ASSET LOCK STATUS
     C                     ELSE
     C           STS02     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS02            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SMVTOF - Move Fields From Work Area To File(s)
     C*****************************************************************
     C           SMVTOF    BEGSR
     C*          ------------------------------------------------------
     C*          | Move Fields From Work Area To File - MNUPGM
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 01
     C                     MOVELXPPGMD    MPPGMD           Program Description
     C                     MOVELXPPGMN    MPPGMN           Program Name
     C                     MOVELXPPGMT    MPPGMT           Program Type
     C                     MOVELXPPRM1    MPPRM1           Parameter
     C                     MOVELXPPRM2    MPPRM2           Parameter
     C                     MOVELXPPRM3    MPPRM3           Parameter
     C                     MOVELXPPRM4    MPPRM4           Parameter
     C                     MOVELXPSPGM    MPSPGM           Secondary Program Nam
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SMVTOW - Move Fields From File(s) To Work Area
     C*****************************************************************
     C           SMVTOW    BEGSR
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUPGM
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 01
     C                     MOVELMPPGMD    XPPGMD           Program Description
     C                     MOVELMPPGMN    XPPGMN           Program Name
     C                     MOVELMPPGMT    XPPGMT           Program Type
     C                     MOVELMPPRM1    XPPRM1           Parameter
     C                     MOVELMPPRM2    XPPRM2           Parameter
     C                     MOVELMPPRM3    XPPRM3           Parameter
     C                     MOVELMPPRM4    XPPRM4           Parameter
     C                     MOVELMPSPGM    XPSPGM           Secondary Program Nam
     C                     Z-ADDREC01     HRC01
     C                     MOVELMPPGMN    HPPGMN           Program Name
     C                     MOVELMPSPGM    HPSPGM           Secondary Program Nam
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUOPT3
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 02
     C                     Z-ADDREC02     HRC02
     C                     MOVELMCPGMN    HCPGMN           Program Name
     C                     MOVELMCSPGM    HCSPGM           Secondary Program Nam
     C                     END
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C*            C o m p i l e   T i m e   A r r a y
     C*               I n i t i a l i z a t i o n
     C*****************************************************************
**   Alpha Constant Array - A1

C
R
M
Record deleted from file Program Names               MP
No record found to delete from file Program Names               MP
Record update for file Program Names               MP
Unable to update record for file Program Names               MP
Record added to file Program Names               MP
Unable to add record to file Program Names               MP
The beginning of the file was reached
The end of the file was reached
**   Display Attribute Map Array - DA1
                         H R U B C P N P G R P W T Y B K O
Screen    Field/Grp Idx  I I L L S C D R N D K T Q W U U C
=========+=========+===+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=============
SC0001    XPSPGM    0000  07      07
SC0002    XPPGMD    0000  05      05
SC0002    XPPGMN    0000  06      06
SC0002    XPPGMT    0000  07      07
SC0001    PS0101    0000              05
SC0001    PS0102    0000              06
SC0001    FL0001    0000  0103    010402               Y
SC0002    KEYS      0000    04        03
SC0002    DATA      0000    02        01
