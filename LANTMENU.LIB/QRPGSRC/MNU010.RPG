     F/TITLE MNU010   Maintain User Menu Details
     F*****************************************************************
     F* Copyright   ** KDP Software Limited **    1996
     F*****************************************************************
     F*
     F*  Program ID          -    MNU010
     F*  Application ID      -    MNU010
     F*  Application Name    -      Maintain User Menu Details
     F*  Date Generated      -    Feb 8, 1996
     F*
     F*****************************************************************
     F*  Program Narrative
     F*
     F*  The menu programs supplied with the software will allow
     F*  companies to set up specific menus related to a particular
     F*  user or group of users.
     F*
     F*  Initially a user is set up and all the associated menus defined for
     F*  that user are added.
     F*
     F*  Once the required menus are defined the user can then define the
     F*  required menu options.
     F*
     F*  Having defined the relevant menu options help text for each option
     F*  can be added along with help text for each menu.
     F*
     F*****************************************************************
     F*  Files Usage
     F*
     F*  MNUUSR      - (U/DISK   ) Menu Users                  MA
     F*  MNUUSR2     - (I/DISK   ) Users by Group Id
     F*  MNUUSR1     - (I/DISK   ) User Seq
     F*  MNUHED      - (U/DISK   ) Menu Heading file           MB
     F*  MNUOPT      - (U/DISK   ) Menu Options                MC
     F*  MNUPGM      - (I/DISK   ) Program Names               MP
     F*  MNUHLP      - (I/DISK   ) Menu Help Text              MD
     F*  MNUHLPX     - (U/DISK   ) Menu Help Text              MD
     F*  MNU010D     - (C/WORKSTN) Generated display file
     F*
     F*****************************************************************
     F*  Function Of Indicators
     F*
     F*  SC0001     - List Users
     F*
     F*  01     - SCR001S1 / FL0001 : DSPATR(PC)
     F*  01     - SCR001S1 / FL0001 : DSPATR(RI)
     F*  02     - SCR001S1 / FL0001 : DSPATR(PR)
     F*  03     - SCR001S1 / FL0001 : DSPATR(UL)
     F*  04     - SCR001S1 / FL0001 : DSPATR(ND)
     F*  05     - SCR001S1 / RN0003 : DSPATR(PC)
     F*  05     - SCR001S1 / RN0003 : DSPATR(RI)
     F*  63     - SCR001C1 SFLDSPCTL
     F*  64     - SCR001C1 SFLDSP
     F*  65     - SCR001S1 SFLNXTCHG
     F*  66     - SCR001C1 SFLINZ
     F*  99     - SCR001 OVERLAY
     F* N63     - SCR001C1 SFLCLR
     F* N67     - SCR001C1 SFLEND
     F* N79     - SCR001 PUTOVR
     F* N79     - SCR001C1 PUTOVR
     F*
     F*  SC0002     - User Entry Screen
     F*
     F*  01     - SCR002 / MACHG : DSPATR(PR)
     F*  01     - SCR002 / MADFV1 : DSPATR(PR)
     F*  01     - SCR002 / MADFV2 : DSPATR(PR)
     F*  01     - SCR002 / MADFV3 : DSPATR(PR)
     F*  01     - SCR002 / MAFORN : DSPATR(PR)
     F*  01     - SCR002 / RN0003 : DSPATR(PR)
     F*  01     - SCR002 / MASURN : DSPATR(PR)
     F*  02     - SCR002 / MACHG : DSPATR(UL)
     F*  02     - SCR002 / MADFV1 : DSPATR(UL)
     F*  02     - SCR002 / MADFV2 : DSPATR(UL)
     F*  02     - SCR002 / MADFV3 : DSPATR(UL)
     F*  02     - SCR002 / MAFORN : DSPATR(UL)
     F*  02     - SCR002 / RN0003 : DSPATR(UL)
     F*  02     - SCR002 / MASURN : DSPATR(UL)
     F*  03     - SCR002 / MAUSER : DSPATR(UL)
     F*  04     - SCR002 / RN0003 : DSPATR(PC)
     F*  04     - SCR002 / RN0003 : DSPATR(RI)
     F*  05     - SCR002 / MACHG : DSPATR(PC)
     F*  05     - SCR002 / MACHG : DSPATR(RI)
     F*  06     - SCR002 / MADFV1 : DSPATR(PC)
     F*  06     - SCR002 / MADFV1 : DSPATR(RI)
     F*  07     - SCR002 / MADFV2 : DSPATR(PC)
     F*  07     - SCR002 / MADFV2 : DSPATR(RI)
     F*  08     - SCR002 / MADFV3 : DSPATR(PC)
     F*  08     - SCR002 / MADFV3 : DSPATR(RI)
     F*  09     - SCR002 / MAUSER : DSPATR(PC)
     F*  09     - SCR002 / MAUSER : DSPATR(RI)
     F*  10     - SCR002 / MAUSER : DSPATR(PR)
     F*  99     - SCR002C1 DSPATR(PR)
     F* N79     - SCR002 PUTOVR
     F*
     F*  SC0003     - Menu List Screen
     F*
     F*  01     - SCR003S1 / FL0002 : DSPATR(PC)
     F*  01     - SCR003S1 / FL0002 : DSPATR(RI)
     F*  02     - SCR003S1 / FL0002 : DSPATR(PR)
     F*  03     - SCR003S1 / FL0002 : DSPATR(UL)
     F*  04     - SCR003S1 / FL0002 : DSPATR(ND)
     F*  63     - SCR003C1 SFLDSPCTL
     F*  64     - SCR003C1 SFLDSP
     F*  65     - SCR003S1 SFLNXTCHG
     F*  66     - SCR003C1 SFLINZ
     F*  99     - SCR003C1 SFLINZ
     F* N63     - SCR003C1 SFLCLR
     F* N67     - SCR003C1 SFLEND
     F* N79     - SCR003 PUTOVR
     F* N79     - SCR003C1 PUTOVR
     F*
     F*  SC0004     - Menu Detail Screen
     F*
     F*  01     - SCR004 / MBMNUD : DSPATR(UL)
     F*  02     - SCR004 / MBMNUC : DSPATR(UL)
     F*  03     - SCR004 / MBMNUC : DSPATR(PC)
     F*  03     - SCR004 / MBMNUC : DSPATR(RI)
     F*  04     - SCR004 / MBMNUC : DSPATR(PR)
     F*  05     - SCR004 / MBMNUD : DSPATR(PC)
     F*  05     - SCR004 / MBMNUD : DSPATR(RI)
     F*  06     - SCR004 / MBMNUD : DSPATR(PR)
     F*  99     - SCR004C1 DSPATR(PR)
     F* N79     - SCR004 PUTOVR
     F*
     F*  SC0005     - Options List Screen
     F*
     F*  01     - SCR005S1 / FL0003 : DSPATR(PC)
     F*  01     - SCR005S1 / FL0003 : DSPATR(RI)
     F*  02     - SCR005S1 / FL0003 : DSPATR(PR)
     F*  03     - SCR005S1 / FL0003 : DSPATR(UL)
     F*  04     - SCR005S1 / FL0003 : DSPATR(ND)
     F*  63     - SCR005C1 SFLDSPCTL
     F*  64     - SCR005C1 SFLDSP
     F*  65     - SCR005S1 SFLNXTCHG
     F*  66     - SCR005C1 SFLINZ
     F*  99     - SCR005C1 SFLINZ
     F* N63     - SCR005C1 SFLCLR
     F* N67     - SCR005C1 SFLEND
     F* N79     - SCR005 PUTOVR
     F* N79     - SCR005C1 PUTOVR
     F*
     F*  SC0006     - Options Detail Screen
     F*
     F*  01     - SCR006 / MCACTA : DSPATR(PR)
     F*  01     - SCR006 / MCACTD : DSPATR(PR)
     F*  01     - SCR006 / MCACTR : DSPATR(PR)
     F*  01     - SCR006 / MCOPTD : DSPATR(PR)
     F*  01     - SCR006 / MCPGMN : DSPATR(PR)
     F*  01     - SCR006 / MCPGMT : DSPATR(PR)
     F*  01     - SCR006 / MCPRM1 : DSPATR(PR)
     F*  01     - SCR006 / MCPRM2 : DSPATR(PR)
     F*  01     - SCR006 / MCPRM3 : DSPATR(PR)
     F*  01     - SCR006 / MCPRM4 : DSPATR(PR)
     F*  01     - SCR006 / MCSPGM : DSPATR(PR)
     F*  02     - SCR006 / MCACTA : DSPATR(UL)
     F*  02     - SCR006 / MCACTD : DSPATR(UL)
     F*  02     - SCR006 / MCACTR : DSPATR(UL)
     F*  02     - SCR006 / MCOPTD : DSPATR(UL)
     F*  02     - SCR006 / MCPGMN : DSPATR(UL)
     F*  02     - SCR006 / MCPGMT : DSPATR(UL)
     F*  02     - SCR006 / MCPRM1 : DSPATR(UL)
     F*  02     - SCR006 / MCPRM2 : DSPATR(UL)
     F*  02     - SCR006 / MCPRM3 : DSPATR(UL)
     F*  02     - SCR006 / MCPRM4 : DSPATR(UL)
     F*  02     - SCR006 / MCSPGM : DSPATR(UL)
     F*  03     - SCR006 / MCOPTC : DSPATR(PR)
     F*  04     - SCR006 / MCOPTC : DSPATR(UL)
     F*  05     - SCR006 / MCACTA : DSPATR(PC)
     F*  05     - SCR006 / MCACTA : DSPATR(RI)
     F*  06     - SCR006 / MCACTD : DSPATR(PC)
     F*  06     - SCR006 / MCACTD : DSPATR(RI)
     F*  07     - SCR006 / MCACTR : DSPATR(PC)
     F*  07     - SCR006 / MCACTR : DSPATR(RI)
     F*  08     - SCR006 / MCOPTC : DSPATR(PC)
     F*  08     - SCR006 / MCOPTC : DSPATR(RI)
     F*  09     - SCR006 / MCOPTD : DSPATR(PC)
     F*  09     - SCR006 / MCOPTD : DSPATR(RI)
     F*  10     - SCR006 / MCPGMN : DSPATR(PC)
     F*  10     - SCR006 / MCPGMN : DSPATR(RI)
     F*  11     - SCR006 / MCPGMT : DSPATR(PC)
     F*  11     - SCR006 / MCPGMT : DSPATR(RI)
     F*  12     - SCR006 / MCSPGM : DSPATR(PC)
     F*  12     - SCR006 / MCSPGM : DSPATR(RI)
     F*  99     - SCR006C1 DSPATR(RI)
     F* N79     - SCR006 PUTOVR
     F*
     F*  SC0007     - Help Details
     F*
     F*  01     - SCR007S1 / FL0004 : DSPATR(PC)
     F*  01     - SCR007S1 / FL0004 : DSPATR(RI)
     F*  02     - SCR007S1 / FL0004 : DSPATR(PR)
     F*  03     - SCR007S1 / FL0004 : DSPATR(UL)
     F*  04     - SCR007 / *CNST* : DSPATR(ND)
     F*  04     - SCR007 / *CNST* : DSPATR(ND)
     F*  04     - SCR007 / *CNST* : DSPATR(ND)
     F*  05     - SCR007S1 / MDSEQN : DSPATR(PR)
     F*  06     - SCR007S1 / MDSEQN : DSPATR(UL)
     F*  07     - SCR007S1 / MDTEXT : DSPATR(PR)
     F*  08     - SCR007S1 / MDTEXT : DSPATR(UL)
     F*  63     - SCR007C1 SFLDSPCTL
     F*  64     - SCR007C1 SFLDSP
     F*  65     - SCR007S1 SFLNXTCHG
     F*  66     - SCR007C1 SFLINZ
     F*  99     - SCR007C1 SFLINZ
     F* N63     - SCR007C1 SFLCLR
     F* N67     - SCR007C1 SFLEND
     F* N79     - SCR007 PUTOVR
     F* N79     - SCR007C1 PUTOVR
     F*
     F*  SC0008     - List of Users
     F*
     F*  01     - SCR008 / T01 : DSPATR(PR)
     F*  02     - SCR008 / T01 : DSPATR(ND)
     F*  03     - SCR008 / T01 : DSPATR(PR)
     F*  04     - SCR008 / T01 : DSPATR(ND)
     F*  05     - SCR008 / T01 : DSPATR(PR)
     F*  06     - SCR008 / T01 : DSPATR(ND)
     F*  07     - SCR008 / T01 : DSPATR(PR)
     F*  08     - SCR008 / T01 : DSPATR(ND)
     F*  09     - SCR008 / T01 : DSPATR(PR)
     F*  10     - SCR008 / T01 : DSPATR(ND)
     F*  80     - SCR008 / T01 : DSPATR(PC)
     F*  80     - SCR008 / T01 : DSPATR(PC)
     F*  80     - SCR008 / T01 : DSPATR(PC)
     F*  80     - SCR008 / T01 : DSPATR(PC)
     F*  80     - SCR008 / T01 : DSPATR(PC)
     F* N79     - SCR008 PUTOVR
     F*
     F*  SC0009     - Copy Users
     F*
     F*  01     - SCR010 / CPYMNU : DSPATR(PC)
     F*  01     - SCR010 / CPYMNU : DSPATR(RI)
     F*  02     - SCR010 / CPYOPT : DSPATR(PC)
     F*  02     - SCR010 / CPYOPT : DSPATR(RI)
     F*  03     - SCR010 / CPYOPT : DSPATR(UL)
     F*  04     - SCR010 / TOUSER : DSPATR(PC)
     F*  04     - SCR010 / TOUSER : DSPATR(RI)
     F*  05     - SCR010 / TOUSER : DSPATR(UL)
     F* N79     - SCR010 PUTOVR
     F*
     F*  SC0010     - List of Programs
     F*
     F*  01     - SCR009 / T04 : DSPATR(PR)
     F*  02     - SCR009 / T04 : DSPATR(ND)
     F*  03     - SCR009 / T04 : DSPATR(PR)
     F*  04     - SCR009 / T04 : DSPATR(ND)
     F*  05     - SCR009 / T04 : DSPATR(PR)
     F*  06     - SCR009 / T04 : DSPATR(ND)
     F*  07     - SCR009 / T04 : DSPATR(PR)
     F*  08     - SCR009 / T04 : DSPATR(ND)
     F*  09     - SCR009 / T04 : DSPATR(PR)
     F*  10     - SCR009 / T04 : DSPATR(ND)
     F* N79     - SCR009 PUTOVR
     F*
     F*****************************************************************
     F*  Function Of Subroutines
     F*
     F* SMAIN - Main flow of the program.
     F* SEND - END of program.
     F* S001 - List Users
     F* S002 - User Entry Screen
     F* S003 - Menu List Screen
     F* S004 - Menu Detail Screen
     F* S005 - Options List Screen
     F* S006 - Options Detail Screen
     F* S007 - Help Details
     F* S008 - List of Users
     F* S009 - List of Programs
     F* S010 - Copy Users
     F* SREDSP -  Redisplay Windows within stack.
     F* LEVTXT - Set Default Text
     F* S01BKW - SCRN SUB
     F* S01EDT - SCRN SUB
     F* S01FWD - SCRN SUB
     F* S03BKW - SCRN SUB
     F* S03EDT - SCRN SUB
     F* S03FWD - SCRN SUB
     F* S05BKW - SCRN SUB
     F* S05EDT - SCRN SUB
     F* S05FWD - SCRN SUB
     F* S07BKW - SCRN SUB
     F* S07EDT - SCRN SUB
     F* S07FWD - SCRN SUB
     F* S08ABR - SCRN SUB
     F* S08AFR - SCRN SUB
     F* S08ALD - SCRN SUB
     F* S10ABR - SCRN SUB
     F* S10AFR - SCRN SUB
     F* S10ALD - SCRN SUB
     F* SCON - Concatenates two character strings
     F* SMSG - calls message handling program to either clear, add, or
     F* S011   - SETLL D.MENU,F.MNUUSR,SVK001
     F* S012   - GETREC D.MENU,F.MNUUSR,*lock,*eq,SVK001
     F* S013   - GETREC D.MENU,F.MNUUSR1,*eq,MAGUSER
     F* S014   - GETREC D.MENU,F.MNUUSR,*eq,SVK001
     F* S015   - DELETE D.MENU,F.MNUUSR,F.MNUHED,F.MNUOPT
     F* S016   - UPDATE D.MENU,F.MNUUSR
     F* S017   - WRITE D.MENU,F.MNUUSR
     F* S018   - SETLL D.MENU,F.MNUHED,SVK002,SVK003
     F* S019   - GETREC D.MENU,F.MNUHED,*lock,*eq,SVK002,SVK003
     F* S020   - GETREC D.MENU,F.MNUHED,*eq,SVK002,SVK003
     F* S021   - DELETE D.MENU,F.MNUHED,F.MNUOPT
     F* S022   - UPDATE D.MENU,F.MNUHED
     F* S023   - WRITE D.MENU,F.MNUHED
     F* S024   - SETLL D.MENU,F.MNUOPT,SVK004,SVK005,SVK006
     F* S025   - GETREC D.MENU,F.MNUOPT,*lock,*eq,SVK004,SVK005,SVK006
     F* S026   - GETREC D.MENU,F.MNUOPT,*eq,SVK004,SVK005,SVK006
     F* S027   - GETREC D.MENU,F.MNUpgm,*eq,MCPGMN,MCSPGM
     F* S028   - DELETE D.MENU,F.MNUOPT
     F* S029   - UPDATE D.MENU,F.MNUOPT
     F* S030   - WRITE D.MENU,F.MNUOPT
     F* S031   - SETLL D.MENU,F.MNUHLP,SVK007,SVK008,SVK009
     F* S032   - GETBLK D.MENU,F.MNUUSR,*PV
     F* S033   - Process To Reset File Pointer(BOF) - MNUUSR
     F* S034   - Process To Reset File Pointer(EOF) - MNUUSR
     F* S035   - GETREC d.mnuusr2,f.mnuusr2,*eq,menu.mnuusr.mauser
     F* S036   - GETREC D.MENU,F.MNUUSR,F.MNUUSR1,*EQ,:0002
     F* S037   - GETREC D.MENU,F.MNUUSR,*EQ,:0002
     F* S038   - GETBLK D.MENU,F.MNUHED,*PV,SVK002
     F* S039   - Process To Reset File Pointer(BOF) - MNUHED
     F* S040   - Process To Reset File Pointer(EOF) - MNUHED
     F* S041   - GETREC D.MENU,F.MNUHED,*EQ,MBUSER,MBMNUC
     F* S042   - GETBLK D.MENU,F.MNUOPT,*PV,SVK004,SVK005
     F* S043   - Process To Reset File Pointer(BOF) - MNUOPT
     F* S044   - Process To Reset File Pointer(EOF) - MNUOPT
     F* S045   - GETREC D.MENU,F.MNUOPT,*EQ,MCUSER,MCMNUC,MCOPTC
     F* S046   - GETBLK D.MENU,F.MNUHLP,*PV,SVK007,SVK008,*changed
     F* S047   - Process To Reset File Pointer(BOF) - MNUHLP
     F* S048   - Process To Reset File Pointer(EOF) - MNUHLP
     F* S049   - DELETE D.MENU,F.MNUHLP
     F* S050   - SETLL D.MENU,F.MNUHLP,mdmnuc,mdoptc,mdseqn
     F* S051   - UPDATE D.menu,F.mnuhlp
     F* S052   - WRITE D.menu,f.mnuhlp
     F* S053   - GETREC D.MENU,F.MNUHLP,*eq,mdmnuc,mdoptc,mdseqn
     F* S054   - SETLL D.MENU,F.MNUHLP,SVK007,SVK008,wkseqn
     F* S055   - SETLL D.MENU,F.MNUUSR1,SVK08
     F* S056   - GETREC D.MENU,F.MNUUSR1,*PV,
     F* S057   - Process To Reset File Pointer(BOF) - MNUUSR1
     F* S058   - GETREC D.MENU,F.MNUUSR1,*NX,
     F* S059   - Process To Reset File Pointer(EOF) - MNUUSR1
     F* S060   - SETLL D.MENU,F.MNUPGM,SVK10,svk11
     F* S061   - GETREC D.MENU,F.MNUPGM,*PV,
     F* S062   - Process To Reset File Pointer(BOF) - MNUPGM
     F* S063   - GETREC D.MENU,F.MNUPGM,*NX,
     F* S064   - Process To Reset File Pointer(EOF) - MNUPGM
     F* S002V - User Entry Screen
     F* *PSSR - Program Execution Errors Handler
     F* SCLF   - CLF : Cursor Location On Field Handler
     F* SATRIB - Display Attribute Handler
     F* SLOCK - Update Lock Flag
     F* SEXCP - Dummy EXCPT(s) and Read(s)
     F* SFERR - File Exception Handler
     F* SMVTOF - Move Fields From Work Area To File(s)
     F* SMVTOW - Move Fields From File(s) To Work Area
     F*
     F*****************************************************************
     F*            F i l e     S p e c i f i c a t i o n
     F*****************************************************************
     FMNU010D CF  E                    WORKSTN
     F                                        RRN01 KSFILE SCR001S1
     F                                        RRN02 KSFILE SCR003S1
     F                                        RRN03 KSFILE SCR005S1
     F                                        RRN04 KSFILE SCR007S1
     F                                              KINFDS DSPFDS
     FMNUUSR2 IF  E           K        DISK
     F            MNUUSRF                           KRENAMEFMT002
     F                                              KINFDS FIDS02
     F                                              KINFSR SFERR
     FMNUUSR1 IF  E           K        DISK
     F            MNUUSRF                           KRENAMEFMT001
     F                                              KINFDS FIDS03
     F                                              KINFSR SFERR
     FMNUPGM  IF  E           K        DISK
     F                                              KINFDS FIDS06
     F                                              KINFSR SFERR
     FMNUHLP  IF  E           K        DISK
     F                                              KINFDS FIDS07
     F                                              KINFSR SFERR
     FMNUUSR  UF  E           K        DISK                      A
     F                                              KINFDS FIDS01
     F                                              KINFSR SFERR
     FMNUHED  UF  E           K        DISK                      A
     F                                              KINFDS FIDS04
     F                                              KINFSR SFERR
     FMNUOPT  UF  E           K        DISK                      A
     F                                              KINFDS FIDS05
     F                                              KINFSR SFERR
     FMNUHLPX UF  E                    DISK                      A
     F                                              KINFDS FIDS08
     F            MNUHLPF                           KRENAMEMNUHLPFX
     F                                              KINFSR SFERR
     F*
     E*****************************************************************
     E*      A r r a y  /  T a b l e   S p e c i f i c a t i o n
     E*****************************************************************
     E                    A01        17  1
     E                    A02        15  1
     E                    A03        11 10
     E                    A04        10 10
     E                    A05        10  5
     E                    A06         9 10
     E                    A07         9  5
     E                    A08         9  5
     E                    B01         5 10
     E                    B02         5 10
     E                    B03         5 10
     E                    T01         5  1 0
     E                    T02         5 10
     E                    T03         5 20
     E                    T04         5  1 0
     E                    T05         5 10
     E                    T06         5 30
     E                    T07         5 10
     E                    SID        99  8               Scrn stk
     E                    STY        99  1               Scr type
     E                    A1      1   6 80               Alpha constants i
     E                    DA6        15  1               Fld Attr. Wrk Ary
     E                    DA4     1   6 24   DA5     8   CLF : Cursor Loca
     E                    DA3        17  2               Fld Attr. Wrk Ary
     E                    DA1     1  46 24   DA2    34   Fld Attr. Indic t
     E*
     I*****************************************************************
     I*            I n p u t    S p e c i f i c a t i o n
     I*****************************************************************
     IMNUUSRF
     I              MAGUSER                         RN0003
     IFMT001
     I              MAGUSER                         RN0004
     IFMT002
     I              MAGUSER                         RN0005
     IFIDS04      DS
     I                                     *STATUS  STS04
     I                                    B 397 4000REC04
     IFIDS07      DS
     I                                     *STATUS  STS07
     I                                    B 397 4000REC07
     IFIDS05      DS
     I                                     *STATUS  STS05
     I                                    B 397 4000REC05
     IFIDS06      DS
     I                                     *STATUS  STS06
     I                                    B 397 4000REC06
     IFIDS01      DS
     I                                     *STATUS  STS01
     I                                    B 397 4000REC01
     IFIDS03      DS
     I                                     *STATUS  STS03
     I                                    B 397 4000REC03
     IFIDS02      DS
     I                                     *STATUS  STS02
     I                                    B 397 4000REC02
     IFIDS08      DS
     I                                     *STATUS  STS08
     I                                    B 397 4000REC08
     I*
     I* Company Heading
     I*
     I@DS001      DS                             30
     I                                        1  30 ZZCOMP
     I*
     I* Level 1 Description
     I*
     I@DS002      DS                             15
     I                                        1  15 ZZLEV1
     I*
     I* Level 2 Description
     I*
     I@DS003      DS                             15
     I                                        1  15 ZZLEV2
     I*
     I* Level 3 Description
     I*
     I@DS004      DS                             15
     I                                        1  15 ZZLEV3
     I*
     I* INFDS for cursor location
     I*
     IDSPFDS      DS
     I                                      370 370 ROW
     I                                      371 371 COL
     I                                    B 378 3790SFLRRN
     I*
     I* Work Data Structure for cursor
     I*
     I@DS005      DS
     I                                    B   1   20HALFWD
     I                                        2   2 BYTE2
     I*
     I* Display Attribute Structure
     I*
     I@DS006      DS
     I                                        1  10 FLDSCR
     I                                       11  20 FLDNAM
     I                                       21  240FLDINX
     I                                       25  25 DSPERR
     I                                       26  26 #DS
     I                                       27  27 #HI
     I                                       28  28 #RI
     I                                       29  29 #UL
     I                                       30  30 #BL
     I                                       31  31 #CS
     I                                       32  32 #PC
     I                                       33  33 #ND
     I                                       34  34 #PR
     I                                       35  35 #GN
     I                                       36  36 #RD
     I                                       37  37 #PK
     I                                       38  38 #WT
     I                                       39  39 #TQ
     I                                       40  40 #YW
     I                                       41  41 #BU
     I                                       27  41 DA6
     I                                       11  41 #ATRIB
     I                                       25  280#FROM
     I                                       29  320#TO
     I                                       25  320#CLF
     I                                        1  24 #MAP
     I*
     I* Named constants
     I*
     I              'Record not found for-C         C0001
     I              ' Edit'
     I*
     I* Named constants
     I*
     I              'Record not found for-C         C0002
     I              ' Delete'
     I*
     I* Named constants
     I*
     I              'Record not found for-C         C0003
     I              ' Display'
     I*
     I* Named constants
     I*
     I              'Invalid cursor loc f-C         C0004
     I              'or prompt'
     I*
     I* Named constants
     I*
     I              'F18=Insert'          C         C0005
     I*
     I* Named constants
     I*
     I              'F18=Add   '          C         C0006
     I*
     I* Named constants
     I*
     I              '. . . . . . . . .'   C         C0007
     I*
     I* Named constants
     I*
     I              'Invalid action choic-C         C0008
     I              'e'
     I*
     I* Date Manipulation Data Struct.
     I*
     I            DS
     I                                        1   80X1CDAT
     I                                        1   60X1DATE
     I                                        1   20X12
     I                                        3   40X34
     I                                        5   60X56
     I                                        7   80X78
     I*
     I* Message data structure
     I*
     I@DS007      DS
     I                                        1 132 MSGDTA
     I                                        1  51 UMESG1
     I                                       52 102 UMESG2
     I                                      103 132 UMESG3
     I*
     I* Program status data structure
     I*
     ISDS        SDS
     I                                      244 253 WSID
     I                                      254 263 USER
     I                                     *PROGRAM PGM
     I                                       11  150USTAT
     I                                       21  28 USRCLN
     I                                       29  36 UROUTN
     I                                       40  46 MSGID
     I                                       81  90 ULIB
     I                                       91 170 UMSGTX
     I                                      201 208 UFILE
     I                                      209 213 UFSTAT
     I                                      228 235 UFSRCL
     I                                      264 2690UJOBN
     I                                      288 2930UCDAT
     I                                      294 2990UCTIM
     I@DS008      DS
     I                                    P   1   5 T01
     I                                    P   1   10T01001
     I                                    P   2   20T01002
     I                                    P   3   30T01003
     I                                    P   4   40T01004
     I                                    P   5   50T01005
     I@DS009      DS
     I                                        1  50 T02
     I                                        1  10 T02001
     I                                       11  20 T02002
     I                                       21  30 T02003
     I                                       31  40 T02004
     I                                       41  50 T02005
     I@DS010      DS
     I                                        1 100 T03
     I                                        1  20 T03001
     I                                       21  40 T03002
     I                                       41  60 T03003
     I                                       61  80 T03004
     I                                       81 100 T03005
     I@DS011      DS
     I                                    P   1   5 T04
     I                                    P   1   10T04001
     I                                    P   2   20T04002
     I                                    P   3   30T04003
     I                                    P   4   40T04004
     I                                    P   5   50T04005
     I@DS012      DS
     I                                        1  50 T05
     I                                        1  10 T05001
     I                                       11  20 T05002
     I                                       21  30 T05003
     I                                       31  40 T05004
     I                                       41  50 T05005
     I@DS013      DS
     I                                        1 150 T06
     I                                        1  30 T06001
     I                                       31  60 T06002
     I                                       61  90 T06003
     I                                       91 120 T06004
     I                                      121 150 T06005
     I@DS014      DS
     I                                        1  50 T07
     I                                        1  10 T07001
     I                                       11  20 T07002
     I                                       21  30 T07003
     I                                       31  40 T07004
     I                                       41  50 T07005
     I*
     C*****************************************************************
     C*            P a r a m e t e r     L i s t
     C*****************************************************************
     C*
     C           P0001     PLIST
     C                     PARM           BAT
     C                     PARM           RN0002
     C                     PARM           RN0001
     C                     PARM           ACT
     C                     PARM           OK
     C*
     C           P0002     PLIST
     C                     PARM           INTER
     C                     PARM           FL0005
     C                     PARM           CPYMNU
     C                     PARM           CPYOPT
     C                     PARM           TOUSER
     C                     PARM           YNSC9
     C*
     C           PMSGCL    PLIST
     C                     PARM           MSGACT  1
     C                     PARM           MSGID
     C                     PARM           MSGF   10
     C                     PARM           MSGFL  10
     C                     PARM           MSGDTA
     C*
     C           PHELP     PLIST
     C                     PARM           APPSET
     C                     PARM           APPTYP
     C                     PARM           APPPGM
     C                     PARM           APPSCR
     C                     PARM           APPROW
     C                     PARM           APPCOL
     C*****************************************************************
     C*                   K e y      L i s t
     C*****************************************************************
     C*
     C           K0001     KLIST
     C                     KFLD           KAUS01
     C*
     C           K0002     KLIST
     C                     KFLD           KAGU01
     C*
     C           K0003     KLIST
     C                     KFLD           KAGU01
     C                     KFLD           KBMN02
     C*
     C           K0004     KLIST
     C                     KFLD           KAGU01
     C                     KFLD           KBMN02
     C                     KFLD           KCOP03
     C*
     C           K0005     KLIST
     C                     KFLD           KCPG01
     C                     KFLD           KPSP02
     C*
     C           K0006     KLIST
     C                     KFLD           KBMN01
     C                     KFLD           KCOP02
     C                     KFLD           KDSE03
     C*
     C           K0007     KLIST
     C                     KFLD           KBUS01
     C*
     C           K0008     KLIST
     C                     KFLD           KBUS01
     C                     KFLD           KBMN02
     C*
     C           K0009     KLIST
     C                     KFLD           KCUS01
     C                     KFLD           KCMN02
     C*
     C           K0010     KLIST
     C                     KFLD           KCUS01
     C                     KFLD           KCMN02
     C                     KFLD           KCOP03
     C*
     C           K0011     KLIST
     C                     KFLD           KDMN01
     C                     KFLD           KDOP02
     C*
     C           K0012     KLIST
     C                     KFLD           KDMN01
     C                     KFLD           KDOP02
     C                     KFLD           KDSE03
     C*
     C           K0013     KLIST
     C                     KFLD           KPPG01
     C                     KFLD           KPSP02
     C*
     C*****************************************************************
     C*        V a r i a b l e s     D e c l a r a t i o n
     C*****************************************************************
     C           LRFLAG    IFNE 'N'
     C           *LIKE     DEFN MBUSER    WBUSER           User
     C           *LIKE     DEFN MCMNUC    WCMNUC           Menu
     C           *LIKE     DEFN MCUSER    WCUSER           User
     C           *LIKE     DEFN MPPGMD    WPPGMD           Program Description
     C           *LIKE     DEFN MPPGMN    WPPGMN           Program Name
     C           *LIKE     DEFN MPPGMT    WPPGMT           Program Type
     C           *LIKE     DEFN MPPRM1    WPPRM1           Parameter
     C           *LIKE     DEFN MPPRM2    WPPRM2           Parameter
     C           *LIKE     DEFN MPPRM3    WPPRM3           Parameter
     C           *LIKE     DEFN MPPRM4    WPPRM4           Parameter
     C           *LIKE     DEFN MPSPGM    WPSPGM           Secondary Program Nam
     C           *LIKE     DEFN MAUSER    WAUSER           User
     C           *LIKE     DEFN REC06     HRC06
     C           *LIKE     DEFN MPPGMN    HPPGMN
     C           *LIKE     DEFN MPSPGM    HPSPGM
     C           *LIKE     DEFN REC02     HRC02
     C           *LIKE     DEFN RN0005    HD0002
     C           *LIKE     DEFN MAUSER    HD0003
     C           *LIKE     DEFN REC03     HRC03
     C           *LIKE     DEFN MAUSER    HD0001
     C                     MOVE *BLANKS   AARG1 256        Alpha argument1
     C                     MOVE *ZEROS    NARG3  309       Numeric argumnt
     C                     MOVE *ZEROS    C1      30       Numeric wrk fld
     C                     MOVE *BLANKS   AARG2 256        Alpha argument2
     C                     MOVE *BLANKS   ARSLT 256        Alpha result
     C                     MOVE *ZEROS    ROW1    30
     C                     MOVE *ZEROS    COL1    30
     C                     MOVE *ZEROS    NARG1  309       Numer argument1
     C                     MOVE *ZEROS    NRSLT  309       Numeric result
     C                     MOVE *BLANKS   DATFMT  3        Date format
     C                     MOVE *ZEROS    SVDAT   60       Save date
     C                     MOVE *ZEROS    SVYY    20       Save year
     C                     MOVE *ZEROS    SVMM    20       Save month
     C                     MOVE *ZEROS    SVDD    20       Save days
     C                     MOVE *ZEROS    SVDAYS  30       Save days
     C                     MOVE *ZEROS    SVLEAP  10       If leap year
     C                     MOVE *ZEROS    FEB     20       NOD in feb/Leap
     C                     MOVE *ZEROS    SVCY    40       Save days
     C                     MOVE *ZEROS    SVCC    20       Save century
     C                     MOVE 1         CHKVAR  10       Perform Valid.
     C                     MOVE *BLANKS   ACT     1
     C                     MOVE *BLANKS   BAT     1
     C                     MOVE *BLANKS   CPYMNU  1
     C                     MOVE *BLANKS   CPYOPT  1
     C                     MOVE *ZEROS    Z1      30       Loop Counter . . . .S
     C                     MOVE *ZEROS    Z2      30       Loop Counter . . . .S
     C                     MOVE *ZEROS    Z3      30       Loop Counter . . . .S
     C                     MOVE *ZEROS    C07     30
     C                     MOVE *ZEROS    Z4      30       Loop Counter . . . .S
     C                     MOVE *ZEROS    Z5      30       Loop Counter . . . .S
     C                     MOVE *BLANKS   DELERR  1
     C                     MOVE *BLANKS   DELETE  1
     C                     MOVE *BLANKS   ENTER   1
     C                     MOVE *BLANKS   ERROR   1
     C                     MOVE *ZEROS    EXTSCR  10
     C                     MOVE *BLANKS   FIRST   1
     C                     MOVE *ZEROS    FL0001  10
     C                     MOVE *ZEROS    FL0002  10
     C                     MOVE *ZEROS    FL0003  10
     C                     MOVE *ZEROS    FL0004  10
     C                     MOVE *BLANKS   FL0005 10
     C                     MOVE *BLANKS   FL0006 10
     C                     MOVE *BLANKS   FL0007 10
     C                     MOVE *BLANKS   FL0008 25
     C                     MOVE *BLANKS   FL0009 25
     C                     MOVE *BLANKS   FL0010 25
     C                     MOVE *BLANKS   FST08  10
     C                     MOVE *BLANKS   FST10  10
     C                     MOVE *BLANKS   FST11  10
     C                     MOVE *BLANKS   F02001 10
     C                     MOVE *BLANKS   F10001 10
     C                     MOVE *BLANKS   F10002 10
     C                     MOVE *ZEROS    F12FLG  10
     C                     MOVE *BLANKS   F18    10
     C                     MOVE *BLANKS   INTER   1
     C                     MOVE *ZEROS    Z6      30       Loop Counter . . . .S
     C                     MOVE *ZEROS    Z7      30       Loop Counter . . . .S
     C                     MOVE *ZEROS    Z8      30       Loop Counter . . . .S
     C                     MOVE *ZEROS    Z9      30       Loop Counter . . . .S
     C                     MOVE *ZEROS    Y1      30       Loop Counter . . . .S
     C                     MOVE *ZEROS    LOOPCT  30
     C                     MOVE *BLANKS   LST08  10
     C                     MOVE *BLANKS   LST10  10
     C                     MOVE *BLANKS   LST11  10
     C                     MOVE *ZEROS    MNTFLG  10
     C                     MOVE *BLANKS   MODDSC  8
     C                     MOVE *ZEROS    MODE    10
     C                     MOVE *BLANKS   OK      1
     C                     MOVE *BLANKS   RN0001 10        Program Name
     C                     MOVE *ZEROS    POSFLG  10
     C                     MOVE *BLANKS   PRM001 10
     C                     MOVE *BLANKS   PS0101 10
     C                     MOVE *BLANKS   PS0301  5
     C                     MOVE *BLANKS   PS0501  5
     C                     MOVE *ZEROS    PS0701  50
     C                     MOVE *BLANKS   SVK001 10
     C                     MOVE *BLANKS   SVK002 10
     C                     MOVE *BLANKS   SVK003  5
     C                     MOVE *BLANKS   SVK004 10
     C                     MOVE *BLANKS   SVK005  5
     C                     MOVE *BLANKS   SVK006  5
     C                     MOVE *BLANKS   SVK007  5
     C                     MOVE *BLANKS   SVK008  5
     C                     MOVE *ZEROS    SVK009  50
     C                     MOVE *BLANKS   SVK010 10
     C                     MOVE *BLANKS   SVK08  10
     C                     MOVE *BLANKS   SVK10  10
     C                     MOVE *BLANKS   SVK11  10
     C                     MOVE *ZEROS    S08CNT  30
     C                     MOVE *ZEROS    S10CNT  30
     C                     MOVE *BLANKS   TOUSER 10
     C                     MOVE *ZEROS    UPDFLG  10
     C                     MOVE *BLANKS   RN0002 10        User Id
     C                     MOVE *ZEROS    WKCOL   30
     C                     MOVE *ZEROS    WKROW   30
     C                     MOVE *ZEROS    WKSEQN  50
     C                     MOVE *ZEROS    X       30
     C                     MOVE *BLANKS   YNSC9   1
     C                     MOVE *ZEROS    LCK04   10       File lock flag
     C                     MOVE *ZEROS    LCK07   10       File lock flag
     C                     MOVE *ZEROS    LCK05   10       File lock flag
     C                     MOVE *ZEROS    LCK06   10       File lock flag
     C                     MOVE *ZEROS    LCK01   10       File lock flag
     C                     MOVE *ZEROS    LCK03   10       File lock flag
     C                     MOVE *ZEROS    LCK02   10       File lock flag
     C                     MOVE *ZEROS    LCK08   10       File lock flag
     C                     MOVE 'N'       IOFLAG  1
     C                     MOVE *BLANKS   SCRNID  8        Scrn ID
     C                     MOVE *BLANKS   IN01   99        Save Ind
     C                     MOVE *BLANKS   IN02   99        Save Ind
     C                     MOVE *BLANKS   IN03   99        Save Ind
     C                     MOVE *BLANKS   IN04   99        Save Ind
     C                     MOVE *BLANKS   IN05   99        Save Ind
     C                     MOVE *BLANKS   IN06   99        Save Ind
     C                     MOVE *BLANKS   DSPLY   1        Display screen flag
     C                     MOVE *BLANKS   INS01  99        Savd.Ind
     C                     MOVE *BLANKS   SWRD01  1        RD STS
     C                     MOVE *BLANKS   SWRD04  1        RD STS
     C                     MOVE *BLANKS   SWRD05  1        RD STS
     C                     MOVE *BLANKS   SWRD07  1        RD STS
     C                     MOVE *BLANKS   SWRD06  1        RD STS
     C                     MOVE *BLANKS   SWRD03  1        RD STS
     C                     MOVE *BLANKS   KAUS01 10        MAUSER
     C                     MOVE *BLANKS   ARSLT0256
     C                     MOVE *BLANKS   KAGU01 10        MAGUSER
     C                     MOVE *BLANKS   KBMN02  5        MBMNUC
     C                     MOVE *BLANKS   INS02  99        Savd.Ind
     C                     MOVE *BLANKS   INS03  99        Savd.Ind
     C                     MOVE *BLANKS   KCOP03  5        MCOPTC
     C                     MOVE *BLANKS   KCPG01 10        MCPGMN
     C                     MOVE *BLANKS   KPSP02 10        MPSPGM
     C                     MOVE *BLANKS   INS04  99        Savd.Ind
     C                     MOVE *BLANKS   KBMN01  5        MBMNUC
     C                     MOVE *BLANKS   KCOP02  5        MCOPTC
     C                     MOVE *ZEROS    KDSE03  50       MDSEQN
     C                     MOVE 'N'       CMDKEY  1         Cmd key pressed flag
     C                     MOVE *BLANKS   SWRD02  1        RD STS          010
     C                     MOVE *BLANKS   KBUS01 10        MBUSER
     C                     MOVE *BLANKS   KCUS01 10        MCUSER
     C                     MOVE *BLANKS   KCMN02  5        MCMNUC
     C                     MOVE *BLANKS   KDMN01  5        MDMNUC
     C                     MOVE *BLANKS   KDOP02  5        MDOPTC
     C                     MOVE *BLANKS   KPPG01 10        MPPGMN
     C                     MOVE *ZEROS    VALIDF  10       Flag for validation S
     C                     MOVE *ZEROS    LISTF   10       List of value flag
     C                     MOVE *ZEROS    EXISTF  10       Existence chk flg
     C                     MOVE *ZEROS    RSLT01  10
     C                     MOVE *ZEROS    X1CDAT           Init DS/*DTA flds
     C                     MOVE 'N'       MSGFLG  1        Display Msg Flg
     C                     MOVE *BLANKS   APPSET 10
     C                     MOVE 'D'       APPTYP  1
     C                     MOVE *BLANKS   APPSCR 10
     C                     MOVE *ZEROS    APPROW  30
     C                     MOVE *ZEROS    APPCOL  30
     C                     MOVE *ZEROS    UERCNT  10
     C                     MOVE *BLANKS   URSUME  6
     C                     MOVE *ZEROS    T01001           Init DS/*DTA flds
     C                     MOVE *ZEROS    T01002           Init DS/*DTA flds
     C                     MOVE *ZEROS    T01003           Init DS/*DTA flds
     C                     MOVE *ZEROS    T01004           Init DS/*DTA flds
     C                     MOVE *ZEROS    T01005           Init DS/*DTA flds
     C                     MOVE *ZEROS    T04001           Init DS/*DTA flds
     C                     MOVE *ZEROS    T04002           Init DS/*DTA flds
     C                     MOVE *ZEROS    T04003           Init DS/*DTA flds
     C                     MOVE *ZEROS    T04004           Init DS/*DTA flds
     C                     MOVE *ZEROS    T04005           Init DS/*DTA flds
     C                     MOVEL'MENUDEV' APPSET
     C                     MOVELPGM       APPPGM 10
     C                     Z-ADD*ZEROS    X0      40       INDEX 0
     C                     Z-ADD*ZEROS    X1      30       INDEX 1
     C                     Z-ADD*ZEROS    OFFSET  40       OFFSET
     C                     Z-ADD*ZEROS    NRSLT  309       RESULT
     C                     Z-ADD*ZEROS    X0      40       INDEX 0
     C                     Z-ADD*ZEROS    SP      30       Stk ptr
     C                     Z-ADD*ZEROS    CT      30       Counter
     C                     Z-ADD*ZEROS    SRN01   40       Savd.Rrn
     C                     Z-ADD*ZEROS    DRN01   40       Dspl.Rrn
     C                     Z-ADD*ZEROS    ERN01   40       SFLEND +
     C                     Z-ADD*ZEROS    DAS001  50
     C                     Z-ADD*ZEROS    DAS002  50
     C                     Z-ADD*ZEROS    DAS003  50
     C                     Z-ADD*ZEROS    DAS004  50
     C                     Z-ADD*ZEROS    WCNTR   30       COUNTER
     C                     Z-ADD*ZEROS    WGETR   30       COUNTER
     C                     Z-ADD*ZEROS    NRSLT0 309
     C                     Z-ADD*ZEROS    SVS05   50       SV STS          01000
     C                     Z-ADD*ZEROS    SVS04   50       SV STS          01000
     C                     Z-ADD*ZEROS    SVS01   50       SV STS          01000
     C                     Z-ADD*ZEROS    SRN02   40       Savd.Rrn
     C                     Z-ADD*ZEROS    DRN02   40       Dspl.Rrn
     C                     Z-ADD*ZEROS    ERN02   40       SFLEND +
     C                     Z-ADD*ZEROS    SRN03   40       Savd.Rrn
     C                     Z-ADD*ZEROS    DRN03   40       Dspl.Rrn
     C                     Z-ADD*ZEROS    ERN03   40       SFLEND +
     C                     Z-ADD*ZEROS    SRN04   40       Savd.Rrn
     C                     Z-ADD*ZEROS    DRN04   40       Dspl.Rrn
     C                     Z-ADD*ZEROS    ERN04   40       SFLEND +
     C                     Z-ADD*ZEROS    WRRN01  30       WRK RRN
     C                     Z-ADD*ZEROS    WADJ01  30       WRK ADJ
     C                     Z-ADD*ZEROS    WLCNTR  50       LOOP CT
     C                     Z-ADD*ZEROS    WLGETR  50       LOOP CT
     C                     Z-ADD*ZEROS    SWEXBL  10       @EXITBLK
     C                     Z-ADD*ZEROS    SWSKPR  10       @SKIPREC
     C                     Z-ADD*ZEROS    NXTRRN  40       NXT RRNC
     C                     Z-ADD*ZEROS    WRRN02  30       WRK RRN
     C                     Z-ADD*ZEROS    WADJ02  30       WRK ADJ
     C                     Z-ADD*ZEROS    WRRN03  30       WRK RRN
     C                     Z-ADD*ZEROS    WADJ03  30       WRK ADJ
     C                     Z-ADD*ZEROS    WRRN04  30       WRK RRN
     C                     Z-ADD*ZEROS    WADJ04  30       WRK ADJ
     C                     Z-ADD*ZEROS    SVS07   50       SV STS
     C                     Z-ADD*ZEROS    SVS03   50       SV STS
     C                     Z-ADD*ZEROS    RN0006 309
     C                     Z-ADD*ZEROS    SVS06   50       SV STS
     C                     Z-ADD1         XYES    10       *YES keyword
     C                     Z-ADD1         CALLST  10       CALL STSword
     C                     Z-ADD*ZEROS    XNO     10       *NO keyword
     C                     Z-ADD*ZEROS    WFILE#  20       FILE#
     C                     END
     C                     MOVE *BLANK    LRFLAG  1
     C                     MOVE '0'       *IN60
     C*
     C           *NAMVAR   DEFN MNUCOMP   @DS001
     C           *NAMVAR   DEFN MNULEV1   @DS002
     C           *NAMVAR   DEFN MNULEV2   @DS003
     C           *NAMVAR   DEFN MNULEV3   @DS004
     C/EJECT
     C*****************************************************************
     C*        M a i n l i n e      R o u t i n e
     C*****************************************************************
     C                     EXSR SMAIN
     C*
     C/EJECT
     C*****************************************************************
     C* SMAIN - Main flow of the program.
     C*****************************************************************
     C           SMAIN     BEGSR
     C*
     C*
     C* Clear Message Subfile.
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C*      *------------------------------------------*
     C*      *  Process all screens.                    *
     C*      *------------------------------------------*
     C                     MOVEL'SC0001'  SCRNID
     C           *INLR     DOWEQ'0'
     C           SCRNID    CASEQ'SC0001'  S001
     C           SCRNID    CASEQ'SC0002'  S002
     C           SCRNID    CASEQ'SC0003'  S003
     C           SCRNID    CASEQ'SC0004'  S004
     C           SCRNID    CASEQ'SC0005'  S005
     C           SCRNID    CASEQ'SC0006'  S006
     C           SCRNID    CASEQ'SC0007'  S007
     C           SCRNID    CASEQ'SC0008'  S008
     C           SCRNID    CASEQ'SC0010'  S009
     C           SCRNID    CASEQ'SC0009'  S010
     C           SCRNID    CASEQ'SEND'    SEND
     C                     END
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SEND - END of program.
     C*****************************************************************
     C           SEND      BEGSR
     C*
     C           LRFLAG    IFEQ 'Y'
     C           LRFLAG    OREQ *BLANK
     C                     MOVE '1'       *INLR
     C                     END                             LRFLAG EQ 'Y'
     C                     MOVE *BLANK    SCRNID
     C                     RETRN
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* S001 - List Users
     C*****************************************************************
     C           S001      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'00100'   *IN,1
     C                     MOVEA'0'       *IN,64
     C                     MOVEA'1'       *IN,80
     C* ***  Clear list panel and start display on
     C* GETDTAA mnucomp
     C                     IN   @DS001                 93
     C                     Z-ADD0         DAS001
     C           *IN93     IFEQ '1'
     C                     Z-ADDUSTAT     DAS001
     C                     END
     C* GETDTAA mnulev1
     C                     IN   @DS002                 93
     C                     Z-ADD0         DAS002
     C           *IN93     IFEQ '1'
     C                     Z-ADDUSTAT     DAS002
     C                     END
     C* GETDTAA mnulev2
     C                     IN   @DS003                 93
     C                     Z-ADD0         DAS003
     C           *IN93     IFEQ '1'
     C                     Z-ADDUSTAT     DAS003
     C                     END
     C* GETDTAA mnulev3
     C                     IN   @DS004                 93
     C                     Z-ADD0         DAS004
     C           *IN93     IFEQ '1'
     C                     Z-ADDUSTAT     DAS004
     C                     END
     C*                                                               *
     C* IF zzlev1=*blanks
     C           ZZLEV1    IFEQ *BLANKS
     C* ZZLEV1 = 'Level 1'
     C                     MOVE *BLANKS   ZZLEV1
     C                     MOVEL'Level 1' ZZLEV1
     C* END                                                           *
     C                     END
     C* IF zzlev2=*blanks
     C           ZZLEV2    IFEQ *BLANKS
     C* ZZLEV2 = 'Level 2'
     C                     MOVE *BLANKS   ZZLEV2
     C                     MOVEL'Level 2' ZZLEV2
     C* END                                                           *
     C                     END
     C* IF zzlev3=*blanks
     C           ZZLEV3    IFEQ *BLANKS
     C* ZZLEV3 = 'Level 3'
     C                     MOVE *BLANKS   ZZLEV3
     C                     MOVEL'Level 3' ZZLEV3
     C* END                                                           *
     C                     END
     C* ***  first record in file. Performed only once
     C* ***  at start of program.
     C*                                                               *
     C* F12FLG = 0
     C                     Z-ADD*ZERO     F12FLG
     C* MAUSER = ' '
     C                     MOVEL*BLANKS   XAUSER
     C* MASURN = ' '
     C                     MOVEL*BLANKS   XASURN
     C* Set Key values to parms passed
     C* SVK001 = *blanks
     C                     MOVEL*BLANKS   SVK001
     C* Set Reposition values to parms passed
     C* PS0101 = *blank
     C                     MOVE *BLANKS   PS0101
     C                     MOVEL*BLANK    PS0101
     C* Set file for list to first record in file
     C* SETLL D.MENU,F.MNUUSR,SVK001
     C*
     C                     EXSR S011
     C* Fill list Panel
     C* EXSUBR S01FWD
     C                     EXSR S01FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN63
     C                     MOVE '1'       *IN65
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     WRITESCR001
     C* Turn off SFLDSP in case of empty subfile
     C           RRN01     IFLT 1
     C                     MOVE '0'       *IN64
     C                     ELSE
     C                     MOVE '1'       *IN64
     C                     END
     C           ERN01     IFEQ 1
     C                     MOVE '1'       *IN67
     C                     ELSE
     C                     MOVE '0'       *IN67
     C                     END
     C                     Z-ADDRRN01     DRN01
     C                     EXFMTSCR001C1
     C           SFLRRN    IFGT 0
     C           DRN01     ANDNE0
     C                     Z-ADDSFLRRN    RRN01
     C                     Z-ADDSFLRRN    DRN01
     C                     END
     C                     MOVEA'0'       *IN,1
     C                     MOVEA'1'       *IN,3
     C                     MOVEA'0'       *IN,5
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Exit
     C*
     C           *INKC     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Exit program on function key 3
     C*                                                               *
     C* EXTPGM                                                        *
     C                     MOVE 'Y'       LRFLAG
     C                     MOVE *BLANK    SCRNID
     C                     MOVEL'SEND'    SCRNID
     C                     GOTO $00199
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Exit program on function key 12
     C*                                                               *
     C* EXTPGM                                                        *
     C                     MOVE 'Y'       LRFLAG
     C                     MOVE *BLANK    SCRNID
     C                     MOVEL'SEND'    SCRNID
     C                     GOTO $00199
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C*
     C* Create
     C*
     C           *INKF     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Process ADD Request on function key 6
     C*                                                               *
     C* MODE = 6
     C                     Z-ADD6         MODE
     C* EXSCR SC0002
     C                     ADD  1         SP
     C                     MOVEL'SC0001  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN01
     C                     EXSR S002
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVEAIN01      *IN
     C                     MOVE '1'       *IN79
     C* SETLL D.MENU,F.MNUUSR,SVK001
     C*
     C                     EXSR S011
     C* EXSUBR S01FWD
     C                     EXSR S01FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Bkwd
     C*
     C           *INKG     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backward on function key 7
     C* **  1. Check for any selected records.
     C* EXSUBR S01EDT
     C                     EXSR S01EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C* **  2. Fill panel.
     C* EXSUBR S01BKW
     C                     EXSR S01BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *INKH     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forward on function key 8
     C* **  1. Check for selected records.
     C* EXSUBR S01EDT
     C                     EXSR S01EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C* **  2. Fill panel.
     C* EXSUBR S01FWD
     C                     EXSR S01FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Bkwd
     C*
     C           *IN62     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backwards
     C*     1. Check for any selected records.
     C* EXSUBR S01EDT
     C                     EXSR S01EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C*     2. Fill panel.
     C* EXSUBR S01BKW
     C                     EXSR S01BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *IN61     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forwards
     C*     1. Check for selected records.
     C* EXSUBR S01EDT
     C                     EXSR S01EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C*     2. Fill Panel.
     C* EXSUBR S01FWD
     C                     EXSR S01FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* *** Check for any selected records on post-enter.
     C*                                                               *
     C* POSFLG = 0
     C                     Z-ADD*ZERO     POSFLG
     C* EXSUBR S01EDT
     C                     EXSR S01EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C* *** Check for reposition
     C* IF PS0101<>' '
     C           PS0101    IFNE *BLANKS
     C* POSFLG = 1
     C                     Z-ADD1         POSFLG
     C* SVK001 = PS0101
     C                     MOVE PS0101    SVK001
     C* PS0101 = *blanks
     C                     MOVEL*BLANKS   PS0101
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Refresh screen if record selected or
     C* if reposition was selected.
     C* IF POSFLG=1 | updflg=1
     C           POSFLG    IFEQ 1
     C           UPDFLG    OREQ 1
     C*                                                               *
     C* Set pointer to file.
     C* SETLL D.MENU,F.MNUUSR,SVK001
     C*
     C                     EXSR S011
     C*                                                               *
     C* Fill Panel.
     C* EXSUBR S01FWD
     C                     EXSR S01FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C* END                                                           *
     C                     END
     C                     END
     C                     END
     C                     END
     C           $00199    ENDSR
     C/EJECT
     C*****************************************************************
     C* S002 - User Entry Screen
     C*****************************************************************
     C           S002      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'00000000'*IN,1
     C                     MOVEA'00'      *IN,9
     C                     MOVEA'1'       *IN,80
     C*                                                               *
     C* *** Check option is allowed
     C* BAT = 'I'
     C                     MOVE 'I'       BAT
     C* USER = *userid
     C                     MOVE *BLANKS   RN0002
     C                     MOVELUSER      RN0002
     C* PGM = 'MNU010C'
     C                     MOVE *BLANKS   RN0001
     C                     MOVEL'MNU010C' RN0001
     C* ACT = %ctc(Mode)
     C*  Convert To Character
     C                     MOVE *BLANK    ACT
     C                     MOVELMODE      ACT
     C* OK = ' '
     C                     MOVE *BLANKS   OK
     C* CALL 'MNU040C',bat,user,pgm,act,ok
     C                     Z-ADD1         CALLST
     C                     CALL 'MNU040C' P0001        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* IF ok = 'N'
     C           OK        IFEQ 'N'
     C* DSPERR *NONE,'MNU0006','MENUERR'
     C                     MOVEL'MNU0006' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C*                                                               *
     C* *** Clear detail screens, setup field attributes,
     C* *** and retrieve field values from files.
     C*                                                               *
     C* Set Default Text
     C* AR15 = zzlev1
     C                     MOVE *BLANKS   A02
     C                     MOVEAZZLEV1    A02
     C* EXSUBR levtxt
     C                     EXSR LEVTXT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C* FL0008 = %BCT('Default',ARLEV,1)
     C*  Concatenate with blanks inserted
     C                     MOVE *BLANKS   AARG1
     C                     MOVEL'Default' AARG1
     C                     MOVE *BLANKS   AARG2
     C                     MOVEAA01       AARG2
     C                     Z-ADD1         NARG3
     C                     EXSR SCON
     C                     MOVELARSLT     ARSLT0
     C                     MOVE *BLANKS   FL0008
     C                     MOVELARSLT0    FL0008
     C*                                                               *
     C* AR15 = zzlev2
     C                     MOVE *BLANKS   A02
     C                     MOVEAZZLEV2    A02
     C* EXSUBR levtxt
     C                     EXSR LEVTXT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C* FL0009 = %BCT('Default',ARLEV,1)
     C*  Concatenate with blanks inserted
     C                     MOVE *BLANKS   AARG1
     C                     MOVEL'Default' AARG1
     C                     MOVE *BLANKS   AARG2
     C                     MOVEAA01       AARG2
     C                     Z-ADD1         NARG3
     C                     EXSR SCON
     C                     MOVELARSLT     ARSLT0
     C                     MOVE *BLANKS   FL0009
     C                     MOVELARSLT0    FL0009
     C*                                                               *
     C* AR15 = zzlev3
     C                     MOVE *BLANKS   A02
     C                     MOVEAZZLEV3    A02
     C* EXSUBR levtxt
     C                     EXSR LEVTXT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C* FL0010 = %BCT('Default',ARLEV,1)
     C*  Concatenate with blanks inserted
     C                     MOVE *BLANKS   AARG1
     C                     MOVEL'Default' AARG1
     C                     MOVE *BLANKS   AARG2
     C                     MOVEAA01       AARG2
     C                     Z-ADD1         NARG3
     C                     EXSR SCON
     C                     MOVELARSLT     ARSLT0
     C                     MOVE *BLANKS   FL0010
     C                     MOVELARSLT0    FL0010
     C*                                                               *
     C* Refresh exit flag at start of detail
     C* EXTSCR = 0
     C                     Z-ADD*ZERO     EXTSCR
     C*                                                               *
     C* Process Edit, Delete, and Display action choices
     C* IF MODE=2 | MODE=4 | MODE=5
     C           MODE      IFEQ 2
     C           MODE      OREQ 4
     C           MODE      OREQ 5
     C*                                                               *
     C* Save Key values prior to clearing screens,
     C* otherwise, keys will be lost when screen is
     C* cleared.
     C* SVK001 = :0002
     C                     MOVE XAUSER    SVK001
     C* MAUSER = ' '
     C                     MOVEL*BLANKS   XAUSER
     C* MAFORN = ' '
     C                     MOVEL*BLANKS   XAFORN
     C* MASURN = ' '
     C                     MOVEL*BLANKS   XASURN
     C* MAGUSER = ' '
     C                     MOVEL*BLANKS   WK0001
     C* MASURN = ' '
     C                     MOVEL*BLANKS   WK0002
     C* MADFV1 = ' '
     C                     MOVEL*BLANKS   XADFV1
     C* MADFV2 = ' '
     C                     MOVEL*BLANKS   XADFV2
     C* MADFV3 = ' '
     C                     MOVEL*BLANKS   XADFV3
     C* MACHG = ' '
     C                     MOVE *BLANKS   XACHG
     C* MAUSER = SVK001
     C                     MOVE SVK001    XAUSER
     C*                                                               *
     C* Revise, Delete, and Display, protect
     C* key fields from being changed.
     C* FLDATR MENU.MNUUSR.MAUSER,*PR
     C                     MOVE 'X'       #PR
     C                     MOVEL'XAUSER  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* Get selected record for edit function.
     C* IF MODE=2
     C           MODE      IFEQ 2
     C* GETREC D.MENU,F.MNUUSR,*lock,*eq,SVK001
     C*
     C                     EXSR S012
     C*                                                               *
     C* If record locked, return to previous
     C* screen and display lock message from OS/400.
     C* IF %lock(D.MENU,F.MNUUSR)=*yes
     C*  Lock status on file
     C                     EXSR SLOCK
     C           LCK01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C*                                                               *
     C* If record not found, Display message
     C* and return.
     C* IF %sts(D.MENU,F.MNUUSR)=*no
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XNO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR *none,'Record not found for Edit'
     C                     MOVELC0001     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Get secondary records if any were selected.
     C* GETREC D.MENU,F.MNUUSR1,*eq,MAGUSER
     C*
     C                     EXSR S013
     C* MODDSC = 'CHANGE'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'CHANGE'  MODDSC
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C* Protect Data fields from being changed for
     C* delete and display action choices.
     C* GRPATR data,*pr
     C                     MOVE 'X'       #PR
     C                     MOVEL'DATA    'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* Get selected record for delete function.
     C* IF MODE=4
     C           MODE      IFEQ 4
     C* GETREC D.MENU,F.MNUUSR,*lock,*eq,SVK001
     C*
     C                     EXSR S012
     C*                                                               *
     C* If record locked, return to previous
     C* screen and display lock message from OS/400.
     C* IF %lock(D.MENU,F.MNUUSR)=*yes
     C*  Lock status on file
     C                     EXSR SLOCK
     C           LCK01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C*                                                               *
     C* If record not found, Display message
     C* and return.
     C* IF %sts(D.MENU,F.MNUUSR)=*no
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XNO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR *none,'Record not found for Delete'
     C                     MOVELC0002     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Get secondary records if any were selected.
     C* GETREC D.MENU,F.MNUUSR1,*eq,MAGUSER
     C*
     C                     EXSR S013
     C* MODDSC = 'DELETE'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'DELETE'  MODDSC
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C* Get selected record for display function.
     C* GETREC D.MENU,F.MNUUSR,*eq,SVK001
     C*
     C                     EXSR S014
     C*                                                               *
     C* If record not found, Display message
     C* and return.
     C* IF %sts(D.MENU,F.MNUUSR)=*no
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XNO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR *none,'Record not found for Display'
     C                     MOVELC0003     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Get secondary records if any were selected.
     C* GETREC D.MENU,F.MNUUSR1,*eq,MAGUSER
     C*
     C                     EXSR S013
     C* MODDSC = 'DISPLAY'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'DISPLAY' MODDSC
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C*                                                               *
     C* Clear screens for Add function.
     C* MAUSER = ' '
     C                     MOVEL*BLANKS   XAUSER
     C* MAFORN = ' '
     C                     MOVEL*BLANKS   XAFORN
     C* MASURN = ' '
     C                     MOVEL*BLANKS   XASURN
     C* MAGUSER = ' '
     C                     MOVEL*BLANKS   WK0001
     C* MASURN = ' '
     C                     MOVEL*BLANKS   WK0002
     C* MADFV1 = ' '
     C                     MOVEL*BLANKS   XADFV1
     C* MADFV2 = ' '
     C                     MOVEL*BLANKS   XADFV2
     C* MADFV3 = ' '
     C                     MOVEL*BLANKS   XADFV3
     C* MACHG = ' '
     C                     MOVE *BLANKS   XACHG
     C* MODDSC = 'ADD'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'ADD'     MODDSC
     C* END                                                           *
     C                     END
     C* F12FLG = 0
     C                     Z-ADD*ZERO     F12FLG
     C* IF mode = 6
     C           MODE      IFEQ 6
     C* GRPATR key,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'KEY     'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* GRPATR data,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'DATA    'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* IF mode = 2
     C           MODE      IFEQ 2
     C* GRPATR data,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'DATA    'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     EXFMTSCR002
     C                     MOVEA'000000'  *IN,4
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Prompt
     C*
     C           *INKD     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* ** Check for any prompt fields.
     C* UPDFLG = 0
     C                     Z-ADD*ZERO     UPDFLG
     C* IF mode = 2 | mode = 6
     C           MODE      IFEQ 2
     C           MODE      OREQ 6
     C*                                                               *
     C* IF %clf(MENU.MNUUSR.MAgUSER)
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'WK0001  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* F02001 = ' '
     C                     MOVEL*BLANKS   F02001
     C* EXSCR SC0008
     C                     ADD  1         SP
     C                     MOVEL'SC0002  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN02
     C                     EXSR S008
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C                     MOVEAIN02      *IN
     C                     MOVE '1'       *IN79
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* IF F02001<>' '
     C           F02001    IFNE *BLANKS
     C* MAGUSER = F02001
     C                     MOVE F02001    WK0001
     C* END                                                           *
     C                     END
     C* MASURN = ' '
     C                     MOVEL*BLANKS   WK0002
     C* GETREC D.MENU,F.MNUUSR1,*eq,MAgUSER
     C*
     C                     EXSR S013
     C* END                                                           *
     C                     END
     C*                                                               *
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ** If no fields processed for prompt
     C* ** (UPDFLG=0), display error.
     C* IF UPDFLG=0
     C           UPDFLG    IFEQ *ZERO
     C* DSPERR *none,'Invalid cursor loc for prompt'
     C                     MOVELC0004     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Return to list panel on function key 12
     C* Set exit flag to signal previous screen
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C*                                                               *
     C* Release record if edit or delete functions
     C* IF mode=2 | mode=4
     C           MODE      IFEQ 2
     C           MODE      OREQ 4
     C* RLSREC D.MENU,F.MNUUSR
     C*
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     UNLCKMNUUSR                 91  RLS LCK MNUUSR
     C* END                                                           *
     C                     END
     C*                                                               *
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Delete
     C*
     C           *INKN     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Perform delete on function key 14
     C* ** Delete
     C* IF MODE=4
     C           MODE      IFEQ 4
     C* DELETE D.MENU,F.MNUUSR,F.MNUHED,F.MNUOPT
     C*
     C                     EXSR S015
     C*                                                               *
     C* IF (%STS(D.MENU,F.MNUUSR) = *YES)
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* Process Screen Validation.
     C           CHKVAR    IFEQ 1
     C                     EXSR S002V
     C                     END
     C           VALIDF    IFEQ 1
     C           CHKVAR    OREQ 0
     C* *** Perform updates to file
     C* IF mode <> 4
     C           MODE      IFNE 4
     C* ERROR = 'N'
     C                     MOVE 'N'       ERROR
     C*                                                               *
     C* If no group F18 flag must be set
     C* IF maguser=*BLANK
     C           WK0001    IFEQ *BLANK
     C* IF (MACHG<>'Y') *AND (MACHG<>'N')
     C           XACHG     IFNE 'Y'
     C           XACHG     ANDNE'N'
     C* DSPERR MACHG,'MNU0016','MENUERR'
     C                     MOVEL'MNU0016' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'XACHG   'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* ERROR = 'Y'
     C                     MOVE 'Y'       ERROR
     C* END                                                           *
     C                     END
     C*                                                               *
     C* If group entered defaults & flag must be blank
     C* ELSE                                                          *
     C                     ELSE
     C* IF (MACHG<>*BLANKS)
     C           XACHG     IFNE *BLANKS
     C* DSPERR MACHG,'MNU0018','MENUERR'
     C                     MOVEL'MNU0018' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'XACHG   'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* ERROR = 'Y'
     C                     MOVE 'Y'       ERROR
     C* END                                                           *
     C                     END
     C* IF (MADFV1<>*BLANKS)
     C           XADFV1    IFNE *BLANKS
     C* DSPERR MADFV1,'MNU0018','MENUERR'
     C                     MOVEL'MNU0018' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'XADFV1  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* ERROR = 'Y'
     C                     MOVE 'Y'       ERROR
     C* END                                                           *
     C                     END
     C* IF (MADFV2<>*BLANKS)
     C           XADFV2    IFNE *BLANKS
     C* DSPERR MADFV2,'MNU0018','MENUERR'
     C                     MOVEL'MNU0018' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'XADFV2  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* ERROR = 'Y'
     C                     MOVE 'Y'       ERROR
     C* END                                                           *
     C                     END
     C* IF (MADFV3<>*BLANKS)
     C           XADFV3    IFNE *BLANKS
     C* DSPERR MADFV3,'MNU0018','MENUERR'
     C                     MOVEL'MNU0018' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'XADFV3  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* ERROR = 'Y'
     C                     MOVE 'Y'       ERROR
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ** Revise
     C* IF error='N'
     C           ERROR     IFEQ 'N'
     C* IF MODE=2
     C           MODE      IFEQ 2
     C* UPDATE D.MENU,F.MNUUSR
     C*
     C                     EXSR S016
     C* ELSE                                                          *
     C                     ELSE
     C* ** Create
     C* IF MODE=6
     C           MODE      IFEQ 6
     C* WRITE D.MENU,F.MNUUSR
     C*
     C                     EXSR S017
     C* ** Set keys for first record to display.
     C* SVK001 = :0002
     C                     MOVE XAUSER    SVK001
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF %STS(D.MENU,F.MNUUSR)=*YES
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* END  ; error = 'N'
     C                     END
     C                     END
     C                     END
     C                     END
     C           $00299    ENDSR
     C/EJECT
     C*****************************************************************
     C* S003 - Menu List Screen
     C*****************************************************************
     C           S003      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'0010'    *IN,1
     C                     MOVEA'0'       *IN,64
     C                     MOVEA'1'       *IN,80
     C*                                                               *
     C* Reset Key values, start at beginning of file
     C* SVK003 = PS0301
     C                     MOVE PS0301    SVK003
     C*                                                               *
     C* Set Keys to values from header file.
     C* MBUSER = :0002
     C                     MOVE XAUSER    WBUSER
     C* SVK002 = :0002
     C                     MOVE XAUSER    SVK002
     C*                                                               *
     C* F12FLG = 0
     C                     Z-ADD*ZERO     F12FLG
     C* ***  Start display on
     C* ***  first record in file.
     C* SETLL D.MENU,F.MNUHED,SVK002,SVK003
     C*
     C                     EXSR S018
     C*                                                               *
     C* Fill List panel.
     C* EXSUBR S03FWD
     C                     EXSR S03FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN63
     C                     MOVE '1'       *IN65
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     WRITESCR003
     C* Turn off SFLDSP in case of empty subfile
     C           RRN02     IFLT 1
     C                     MOVE '0'       *IN64
     C                     ELSE
     C                     MOVE '1'       *IN64
     C                     END
     C           ERN02     IFEQ 1
     C                     MOVE '1'       *IN67
     C                     ELSE
     C                     MOVE '0'       *IN67
     C                     END
     C                     Z-ADDRRN02     DRN02
     C                     EXFMTSCR003C1
     C           SFLRRN    IFGT 0
     C           DRN02     ANDNE0
     C                     Z-ADDSFLRRN    RRN02
     C                     Z-ADDSFLRRN    DRN02
     C                     END
     C                     MOVEA'0'       *IN,1
     C                     MOVEA'1'       *IN,3
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Exit
     C*
     C           *INKC     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Exit program on function key 3
     C*                                                               *
     C* EXTPGM                                                        *
     C                     MOVE 'Y'       LRFLAG
     C                     MOVE *BLANK    SCRNID
     C                     MOVEL'SEND'    SCRNID
     C                     GOTO $00399
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Return to previous screen
     C* *** on function key 12
     C* EXTSCR                                                        *
     C                     GOTO $00399
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C*
     C* Create
     C*
     C           *INKF     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Process ADD Request on function key 6
     C*                                                               *
     C* MODE = 6
     C                     Z-ADD6         MODE
     C* EXSCR SC0004
     C                     ADD  1         SP
     C                     MOVEL'SC0003  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN03
     C                     EXSR S004
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C                     MOVEAIN03      *IN
     C                     MOVE '1'       *IN79
     C* SETLL D.MENU,F.MNUHED,SVK002,SVK003
     C*
     C                     EXSR S018
     C* EXSUBR S03FWD
     C                     EXSR S03FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Bkwd
     C*
     C           *INKG     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backward on function key 7
     C* **  1. Check for any selected records.
     C* EXSUBR S03EDT
     C                     EXSR S03EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C* **  2. Fill panel.
     C* EXSUBR S03BKW
     C                     EXSR S03BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *INKH     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forward on function key 8
     C* **  1. Check for selected records.
     C* EXSUBR S03EDT
     C                     EXSR S03EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C* **  2. Fill panel.
     C* EXSUBR S03FWD
     C                     EXSR S03FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Bkwd
     C*
     C           *IN62     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backwards
     C*     1. Check for any selected records.
     C* EXSUBR S03EDT
     C                     EXSR S03EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C*     2. Fill panel.
     C* EXSUBR S03BKW
     C                     EXSR S03BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *IN61     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forwards
     C*     1. Check for selected records.
     C* EXSUBR S03EDT
     C                     EXSR S03EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C*     2. Fill Panel.
     C* EXSUBR S03FWD
     C                     EXSR S03FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* *** Check for any selected records on post-enter.
     C*                                                               *
     C* Reset reposition flag and check for any
     C* selected records.
     C* POSFLG = 0
     C                     Z-ADD*ZERO     POSFLG
     C* EXSUBR S03EDT
     C                     EXSR S03EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C* *** Check for reposition
     C* IF PS0301<>' '
     C           PS0301    IFNE *BLANKS
     C* POSFLG = 1
     C                     Z-ADD1         POSFLG
     C* SVK003 = PS0301
     C                     MOVE PS0301    SVK003
     C* PS0301 = ' '
     C                     MOVEL*BLANKS   PS0301
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Refresh screen if record selected or
     C* if reposition was selected.
     C* IF POSFLG=1 | updflg=1
     C           POSFLG    IFEQ 1
     C           UPDFLG    OREQ 1
     C* SETLL D.MENU,F.MNUHED,SVK002,SVK003
     C*
     C                     EXSR S018
     C* EXSUBR S03FWD
     C                     EXSR S03FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C* END                                                           *
     C                     END
     C                     END
     C                     END
     C                     END
     C           $00399    ENDSR
     C/EJECT
     C*****************************************************************
     C* S004 - Menu Detail Screen
     C*****************************************************************
     C           S004      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'000000'  *IN,1
     C                     MOVEA'1'       *IN,80
     C*                                                               *
     C* *** Check option is allowed
     C* BAT = 'I'
     C                     MOVE 'I'       BAT
     C* USER = *userid
     C                     MOVE *BLANKS   RN0002
     C                     MOVELUSER      RN0002
     C* PGM = 'MNU010C'
     C                     MOVE *BLANKS   RN0001
     C                     MOVEL'MNU010C' RN0001
     C* ACT = %ctc(Mode)
     C*  Convert To Character
     C                     MOVE *BLANK    ACT
     C                     MOVELMODE      ACT
     C* OK = ' '
     C                     MOVE *BLANKS   OK
     C* CALL 'MNU040C',bat,user,pgm,act,ok
     C                     Z-ADD1         CALLST
     C                     CALL 'MNU040C' P0001        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* IF ok = 'N'
     C           OK        IFEQ 'N'
     C* DSPERR *NONE,'MNU0006','MENUERR'
     C                     MOVEL'MNU0006' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR                                                        *
     C                     GOTO $00499
     C* END                                                           *
     C                     END
     C*                                                               *
     C* *** Clear detail screens, setup field attributes,
     C* *** and retrieve field values from files.
     C*                                                               *
     C* Refresh exit flag at start of detail
     C* EXTSCR = 0
     C                     Z-ADD*ZERO     EXTSCR
     C*                                                               *
     C* Process Edit, Delete, and Display action choices
     C* IF MODE=2 | MODE=4 | MODE=5
     C           MODE      IFEQ 2
     C           MODE      OREQ 4
     C           MODE      OREQ 5
     C*                                                               *
     C* Save Key values prior to clearing screens,
     C* otherwise, keys will be lost when screen is
     C* cleared.
     C* SVK002 = MBUSER
     C                     MOVE WBUSER    SVK002
     C* SVK003 = MBMNUC
     C                     MOVE XBMNUC    SVK003
     C* MBMNUC = ' '
     C                     MOVEL*BLANKS   XBMNUC
     C* MBMNUD = ' '
     C                     MOVEL*BLANKS   XBMNUD
     C* MBUSER = SVK002
     C                     MOVE SVK002    WBUSER
     C* MBMNUC = SVK003
     C                     MOVE SVK003    XBMNUC
     C*                                                               *
     C* Revise, Delete, and Display, protect
     C* key fields from being changed.
     C* FLDATR MENU.MNUHED.MBMNUC,*PR
     C                     MOVE 'X'       #PR
     C                     MOVEL'XBMNUC  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0004  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* Get selected record for edit function.
     C* IF MODE=2
     C           MODE      IFEQ 2
     C* GETREC D.MENU,F.MNUHED,*lock,*eq,SVK002,SVK003
     C*
     C                     EXSR S019
     C*                                                               *
     C* If record locked, return to previous
     C* screen and display lock message from OS/400.
     C* IF %lock(D.MENU,F.MNUHED)=*yes
     C*  Lock status on file
     C                     EXSR SLOCK
     C           LCK04     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00499
     C* END                                                           *
     C                     END
     C*                                                               *
     C* If record not found, Display message
     C* and return.
     C* IF %sts(D.MENU,F.MNUHED)=*no
     C*  Status of last file I/O
     C           STS04     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XNO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR *none,'Record not found for Edit'
     C                     MOVELC0001     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00499
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Get secondary records if any were selected.
     C* MODDSC = 'CHANGE'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'CHANGE'  MODDSC
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C* Protect Data fields from being changed for
     C* delete and display action choices.
     C* FLDATR MENU.MNUHED.MBMNUD,*pr
     C                     MOVE 'X'       #PR
     C                     MOVEL'XBMNUD  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0004  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* Get selected record for delete function.
     C* IF MODE=4
     C           MODE      IFEQ 4
     C* GETREC D.MENU,F.MNUHED,*lock,*eq,SVK002,SVK003
     C*
     C                     EXSR S019
     C*                                                               *
     C* If record locked, return to previous
     C* screen and display lock message from OS/400.
     C* IF %lock(D.MENU,F.MNUHED)=*yes
     C*  Lock status on file
     C                     EXSR SLOCK
     C           LCK04     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00499
     C* END                                                           *
     C                     END
     C*                                                               *
     C* If record not found, Display message
     C* and return.
     C* IF %sts(D.MENU,F.MNUHED)=*no
     C*  Status of last file I/O
     C           STS04     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XNO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR *none,'Record not found for Delete'
     C                     MOVELC0002     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00499
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Get secondary records if any were selected.
     C* MODDSC = 'DELETE'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'DELETE'  MODDSC
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C* Get selected record for display function.
     C* GETREC D.MENU,F.MNUHED,*eq,SVK002,SVK003
     C*
     C                     EXSR S020
     C*                                                               *
     C* If record not found, Display message
     C* and return.
     C* IF %sts(D.MENU,F.MNUHED)=*no
     C*  Status of last file I/O
     C           STS04     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XNO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR *none,'Record not found for Display'
     C                     MOVELC0003     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00499
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Get secondary records if any were selected.
     C* MODDSC = 'DISPLAY'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'DISPLAY' MODDSC
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C*                                                               *
     C* Clear screens for Add function.
     C* MBMNUC = ' '
     C                     MOVEL*BLANKS   XBMNUC
     C* MBMNUD = ' '
     C                     MOVEL*BLANKS   XBMNUD
     C* MBUSER = :0002
     C                     MOVE XAUSER    WBUSER
     C* SVK002 = :0002
     C                     MOVE XAUSER    SVK002
     C* MODDSC = 'ADD'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'ADD'     MODDSC
     C* END                                                           *
     C                     END
     C* F12FLG = 0
     C                     Z-ADD*ZERO     F12FLG
     C* IF mode = 6
     C           MODE      IFEQ 6
     C* GRPATR key,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'GROUP002'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0004  'FLDSCR
     C                     EXSR SATRIB
     C* GRPATR data,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'GROUP001'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0004  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* IF mode = 2
     C           MODE      IFEQ 2
     C* GRPATR data,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'GROUP001'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0004  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     EXFMTSCR004
     C                     MOVEA'0'       *IN,3
     C                     MOVEA'0'       *IN,5
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Return to list panel on function key 12
     C* Set exit flag to signal previous screen
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C*                                                               *
     C* Release record if edit or delete functions
     C* IF mode=2 | mode=4
     C           MODE      IFEQ 2
     C           MODE      OREQ 4
     C* RLSREC D.MENU,F.MNUHED
     C*
     C                     Z-ADD4         WFILE#           SET FILE#
     C                     UNLCKMNUHED                 91  RLS LCK MNUHED
     C* END                                                           *
     C                     END
     C*                                                               *
     C* EXTSCR                                                        *
     C                     GOTO $00499
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Delete
     C*
     C           *INKN     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Perform delete on function key 14
     C* ** Delete
     C* IF MODE=4
     C           MODE      IFEQ 4
     C* DELETE D.MENU,F.MNUHED,F.MNUOPT
     C*
     C                     EXSR S021
     C* IF (%STS(D.MENU,F.MNUHED)=*YES)
     C*  Status of last file I/O
     C           STS04     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR                                                        *
     C                     GOTO $00499
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* Process Screen Validation.
     C           CHKVAR    IFEQ 1
     C                     EXSR S004V
     C                     END
     C           VALIDF    IFEQ 1
     C           CHKVAR    OREQ 0
     C* *** Perform updates to file on function key 14
     C* IF mode <> 4
     C           MODE      IFNE 4
     C*                                                               *
     C* ** Revise
     C* IF MODE=2
     C           MODE      IFEQ 2
     C* UPDATE D.MENU,F.MNUHED
     C*
     C                     EXSR S022
     C* ELSE                                                          *
     C                     ELSE
     C* ** Create
     C* IF MODE=6
     C           MODE      IFEQ 6
     C* WRITE D.MENU,F.MNUHED
     C*
     C                     EXSR S023
     C* ** Set keys for first record to display.
     C* SVK002 = MBUSER
     C                     MOVE WBUSER    SVK002
     C* SVK003 = MBMNUC
     C                     MOVE XBMNUC    SVK003
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* IF %STS(D.MENU,F.MNUHED)=*YES
     C*  Status of last file I/O
     C           STS04     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR                                                        *
     C                     GOTO $00499
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C                     END
     C                     END
     C                     END
     C           $00499    ENDSR
     C/EJECT
     C*****************************************************************
     C* S005 - Options List Screen
     C*****************************************************************
     C           S005      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'0010'    *IN,1
     C                     MOVEA'0'       *IN,64
     C                     MOVEA'1'       *IN,80
     C*                                                               *
     C* Reset Key values, start at beginning of file
     C* SVK006 = PS0501
     C                     MOVE PS0501    SVK006
     C*                                                               *
     C* Set Keys to values from header file.
     C* MCUSER = MBUSER
     C                     MOVE WBUSER    WCUSER
     C* MCMNUC = MBMNUC
     C                     MOVE XBMNUC    WCMNUC
     C* SVK004 = MBUSER
     C                     MOVE WBUSER    SVK004
     C* SVK005 = MBMNUC
     C                     MOVE XBMNUC    SVK005
     C*                                                               *
     C* F12FLG = 0
     C                     Z-ADD*ZERO     F12FLG
     C* ***  Start display on
     C* ***  first record in file.
     C* SETLL D.MENU,F.MNUOPT,SVK004,SVK005,SVK006
     C*
     C                     EXSR S024
     C*                                                               *
     C* Fill List panel.
     C* EXSUBR S05FWD
     C                     EXSR S05FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00599
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN63
     C                     MOVE '1'       *IN65
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     WRITESCR005
     C* Turn off SFLDSP in case of empty subfile
     C           RRN03     IFLT 1
     C                     MOVE '0'       *IN64
     C                     ELSE
     C                     MOVE '1'       *IN64
     C                     END
     C           ERN03     IFEQ 1
     C                     MOVE '1'       *IN67
     C                     ELSE
     C                     MOVE '0'       *IN67
     C                     END
     C                     Z-ADDRRN03     DRN03
     C                     EXFMTSCR005C1
     C           SFLRRN    IFGT 0
     C           DRN03     ANDNE0
     C                     Z-ADDSFLRRN    RRN03
     C                     Z-ADDSFLRRN    DRN03
     C                     END
     C                     MOVEA'0'       *IN,1
     C                     MOVEA'1'       *IN,3
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Exit
     C*
     C           *INKC     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Exit program on function key 3
     C*                                                               *
     C* EXTPGM                                                        *
     C                     MOVE 'Y'       LRFLAG
     C                     MOVE *BLANK    SCRNID
     C                     MOVEL'SEND'    SCRNID
     C                     GOTO $00599
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Return to previous screen
     C* *** on function key 12
     C* EXTSCR                                                        *
     C                     GOTO $00599
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C*
     C* Create
     C*
     C           *INKF     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Process ADD Request on function key 6
     C*                                                               *
     C* MODE = 6
     C                     Z-ADD6         MODE
     C* EXSCR SC0006
     C                     ADD  1         SP
     C                     MOVEL'SC0005  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN04
     C                     EXSR S006
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00599
     C                     END
     C                     MOVEAIN04      *IN
     C                     MOVE '1'       *IN79
     C* SETLL D.MENU,F.MNUOPT,SVK004,SVK005,SVK006
     C*
     C                     EXSR S024
     C* EXSUBR S05FWD
     C                     EXSR S05FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00599
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Bkwd
     C*
     C           *INKG     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backward on function key 7
     C* **  1. Check for any selected records.
     C* EXSUBR S05EDT
     C                     EXSR S05EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00599
     C                     END
     C* **  2. Fill panel.
     C* EXSUBR S05BKW
     C                     EXSR S05BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00599
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *INKH     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forward on function key 8
     C* **  1. Check for selected records.
     C* EXSUBR S05EDT
     C                     EXSR S05EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00599
     C                     END
     C* **  2. Fill panel.
     C* EXSUBR S05FWD
     C                     EXSR S05FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00599
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Bkwd
     C*
     C           *IN62     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backwards
     C*     1. Check for any selected records.
     C* EXSUBR S05EDT
     C                     EXSR S05EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00599
     C                     END
     C*     2. Fill panel.
     C* EXSUBR S05BKW
     C                     EXSR S05BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00599
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *IN61     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forwards
     C*     1. Check for selected records.
     C* EXSUBR S05EDT
     C                     EXSR S05EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00599
     C                     END
     C*     2. Fill Panel.
     C* EXSUBR S05FWD
     C                     EXSR S05FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00599
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* *** Check for any selected records on post-enter.
     C*                                                               *
     C* Reset reposition flag and check for any
     C* selected records.
     C* POSFLG = 0
     C                     Z-ADD*ZERO     POSFLG
     C* EXSUBR S05EDT
     C                     EXSR S05EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00599
     C                     END
     C* *** Check for reposition
     C* IF PS0501<>' '
     C           PS0501    IFNE *BLANKS
     C* POSFLG = 1
     C                     Z-ADD1         POSFLG
     C* SVK006 = PS0501
     C                     MOVE PS0501    SVK006
     C* PS0501 = ' '
     C                     MOVEL*BLANKS   PS0501
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Refresh screen if record selected or
     C* if reposition was selected.
     C* IF POSFLG=1 | updflg=1
     C           POSFLG    IFEQ 1
     C           UPDFLG    OREQ 1
     C* SETLL D.MENU,F.MNUOPT,SVK004,SVK005,SVK006
     C*
     C                     EXSR S024
     C* EXSUBR S05FWD
     C                     EXSR S05FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00599
     C                     END
     C* END                                                           *
     C                     END
     C                     END
     C                     END
     C                     END
     C           $00599    ENDSR
     C/EJECT
     C*****************************************************************
     C* S006 - Options Detail Screen
     C*****************************************************************
     C           S006      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'00000000'*IN,1
     C                     MOVEA'0000'    *IN,9
     C                     MOVEA'1'       *IN,80
     C*                                                               *
     C* *** Check option is allowed
     C* BAT = 'I'
     C                     MOVE 'I'       BAT
     C* USER = *userid
     C                     MOVE *BLANKS   RN0002
     C                     MOVELUSER      RN0002
     C* PGM = 'MNU010C'
     C                     MOVE *BLANKS   RN0001
     C                     MOVEL'MNU010C' RN0001
     C* ACT = %ctc(Mode)
     C*  Convert To Character
     C                     MOVE *BLANK    ACT
     C                     MOVELMODE      ACT
     C* OK = ' '
     C                     MOVE *BLANKS   OK
     C* CALL 'MNU040C',bat,user,pgm,act,ok
     C                     Z-ADD1         CALLST
     C                     CALL 'MNU040C' P0001        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* IF ok = 'N'
     C           OK        IFEQ 'N'
     C* DSPERR *NONE,'MNU0006','MENUERR'
     C                     MOVEL'MNU0006' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR                                                        *
     C                     GOTO $00699
     C* END                                                           *
     C                     END
     C*                                                               *
     C* *** Clear detail screens, setup field attributes,
     C* *** and retrieve field values from files.
     C*                                                               *
     C* Refresh exit flag at start of detail
     C* EXTSCR = 0
     C                     Z-ADD*ZERO     EXTSCR
     C*                                                               *
     C* Process Edit, Delete, and Display action choices
     C* IF MODE=2 | MODE=4 | MODE=5
     C           MODE      IFEQ 2
     C           MODE      OREQ 4
     C           MODE      OREQ 5
     C*                                                               *
     C* Save Key values prior to clearing screens,
     C* otherwise, keys will be lost when screen is
     C* cleared.
     C* SVK004 = MCUSER
     C                     MOVE WCUSER    SVK004
     C* SVK005 = MCMNUC
     C                     MOVE WCMNUC    SVK005
     C* SVK006 = MCOPTC
     C                     MOVE XCOPTC    SVK006
     C* MCOPTC = ' '
     C                     MOVEL*BLANKS   XCOPTC
     C* MCOPTD = ' '
     C                     MOVEL*BLANKS   XCOPTD
     C* MCPGMN = ' '
     C                     MOVEL*BLANKS   XCPGMN
     C* MCSPGM = ' '
     C                     MOVEL*BLANKS   XCSPGM
     C* MCPGMT = ' '
     C                     MOVE *BLANKS   XCPGMT
     C* MCPRM1 = ' '
     C                     MOVEL*BLANKS   XCPRM1
     C* MCPRM2 = ' '
     C                     MOVEL*BLANKS   XCPRM2
     C* MCPRM3 = ' '
     C                     MOVEL*BLANKS   XCPRM3
     C* MCPRM4 = ' '
     C                     MOVEL*BLANKS   XCPRM4
     C* MCACTR = ' '
     C                     MOVE *BLANKS   XCACTR
     C* MCACTD = ' '
     C                     MOVE *BLANKS   XCACTD
     C* MCACTA = ' '
     C                     MOVE *BLANKS   XCACTA
     C* MCUSER = SVK004
     C                     MOVE SVK004    WCUSER
     C* MCMNUC = SVK005
     C                     MOVE SVK005    WCMNUC
     C* MCOPTC = SVK006
     C                     MOVE SVK006    XCOPTC
     C*                                                               *
     C* Revise, Delete, and Display, protect
     C* key fields from being changed.
     C* GRPATR key,*PR
     C                     MOVE 'X'       #PR
     C                     MOVEL'GROUP004'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0006  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* Get selected record for edit function.
     C* IF MODE=2
     C           MODE      IFEQ 2
     C* GETREC D.MENU,F.MNUOPT,*lock,*eq,SVK004,SVK005,SVK006
     C*
     C                     EXSR S025
     C*                                                               *
     C* If record locked, return to previous
     C* screen and display lock message from OS/400.
     C* IF %lock(D.MENU,F.MNUOPT)=*yes
     C*  Lock status on file
     C                     EXSR SLOCK
     C           LCK05     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00699
     C* END                                                           *
     C                     END
     C*                                                               *
     C* If record not found, Display message
     C* and return.
     C* IF %sts(D.MENU,F.MNUOPT)=*no
     C*  Status of last file I/O
     C           STS05     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XNO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR *none,'Record not found for Edit'
     C                     MOVELC0001     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00699
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Get secondary records if any were selected.
     C* MODDSC = 'CHANGE'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'CHANGE'  MODDSC
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C* Protect Data fields from being changed for
     C* delete and display action choices.
     C* GRPATR data,*pr
     C                     MOVE 'X'       #PR
     C                     MOVEL'GROUP003'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0006  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* Get selected record for delete function.
     C* IF MODE=4
     C           MODE      IFEQ 4
     C* GETREC D.MENU,F.MNUOPT,*lock,*eq,SVK004,SVK005,SVK006
     C*
     C                     EXSR S025
     C*                                                               *
     C* If record locked, return to previous
     C* screen and display lock message from OS/400.
     C* IF %lock(D.MENU,F.MNUOPT)=*yes
     C*  Lock status on file
     C                     EXSR SLOCK
     C           LCK05     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00699
     C* END                                                           *
     C                     END
     C*                                                               *
     C* If record not found, Display message
     C* and return.
     C* IF %sts(D.MENU,F.MNUOPT)=*no
     C*  Status of last file I/O
     C           STS05     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XNO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR *none,'Record not found for Delete'
     C                     MOVELC0002     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00699
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Get secondary records if any were selected.
     C* MODDSC = 'DELETE'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'DELETE'  MODDSC
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C* Get selected record for display function.
     C* GETREC D.MENU,F.MNUOPT,*eq,SVK004,SVK005,SVK006
     C*
     C                     EXSR S026
     C*                                                               *
     C* If record not found, Display message
     C* and return.
     C* IF %sts(D.MENU,F.MNUOPT)=*no
     C*  Status of last file I/O
     C           STS05     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XNO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR *none,'Record not found for Display'
     C                     MOVELC0003     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C* EXTSCR                                                        *
     C                     GOTO $00699
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Get secondary records if any were selected.
     C* MODDSC = 'DISPLAY'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'DISPLAY' MODDSC
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C*                                                               *
     C* Clear screens for Add function.
     C* MCOPTC = ' '
     C                     MOVEL*BLANKS   XCOPTC
     C* MCOPTD = ' '
     C                     MOVEL*BLANKS   XCOPTD
     C* MCPGMN = ' '
     C                     MOVEL*BLANKS   XCPGMN
     C* MCSPGM = ' '
     C                     MOVEL*BLANKS   XCSPGM
     C* MCPGMT = ' '
     C                     MOVE *BLANKS   XCPGMT
     C* MCPRM1 = ' '
     C                     MOVEL*BLANKS   XCPRM1
     C* MCPRM2 = ' '
     C                     MOVEL*BLANKS   XCPRM2
     C* MCPRM3 = ' '
     C                     MOVEL*BLANKS   XCPRM3
     C* MCPRM4 = ' '
     C                     MOVEL*BLANKS   XCPRM4
     C* MCACTR = ' '
     C                     MOVE *BLANKS   XCACTR
     C* MCACTD = ' '
     C                     MOVE *BLANKS   XCACTD
     C* MCACTA = ' '
     C                     MOVE *BLANKS   XCACTA
     C* MCUSER = MBUSER
     C                     MOVE WBUSER    WCUSER
     C* MCMNUC = MBMNUC
     C                     MOVE XBMNUC    WCMNUC
     C* SVK004 = MBUSER
     C                     MOVE WBUSER    SVK004
     C* SVK005 = MBMNUC
     C                     MOVE XBMNUC    SVK005
     C* MODDSC = 'ADD'
     C                     MOVE *BLANKS   MODDSC
     C                     MOVEL'ADD'     MODDSC
     C* END                                                           *
     C                     END
     C* F12FLG = 0
     C                     Z-ADD*ZERO     F12FLG
     C* IF mode = 6
     C           MODE      IFEQ 6
     C* GRPATR key,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'GROUP004'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0006  'FLDSCR
     C                     EXSR SATRIB
     C* GRPATR data,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'GROUP003'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0006  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* IF mode = 2
     C           MODE      IFEQ 2
     C* GRPATR data,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'GROUP003'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0006  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     EXFMTSCR006
     C                     MOVEA'00000000'*IN,5
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Prompt
     C*
     C           *INKD     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* ** Check for any prompt fields.
     C* UPDFLG = 0
     C                     Z-ADD*ZERO     UPDFLG
     C* IF mode = 2 | mode = 6
     C           MODE      IFEQ 2
     C           MODE      OREQ 6
     C*                                                               *
     C* IF %clf(MENU.MNUOPT.MCPGMN)
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'XCPGMN  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0006  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* F10001 = ' '
     C                     MOVEL*BLANKS   F10001
     C* F10002 = ' '
     C                     MOVEL*BLANKS   F10002
     C* EXSCR SC0010
     C                     ADD  1         SP
     C                     MOVEL'SC0006  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN05
     C                     EXSR S009
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00699
     C                     END
     C                     MOVEAIN05      *IN
     C                     MOVE '1'       *IN79
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* IF F10001<>' '
     C           F10001    IFNE *BLANKS
     C* MCPGMN = F10001
     C                     MOVE F10001    XCPGMN
     C* MCSPGM = f10002
     C                     MOVE F10002    XCSPGM
     C* MCOPTD = ' '
     C                     MOVEL*BLANKS   XCOPTD
     C* GETREC D.MENU,F.MNUpgm,*eq,MCPGMN,MCSPGM
     C*
     C                     EXSR S027
     C* MCPRM1 = mpprm1
     C                     MOVE WPPRM1    XCPRM1
     C* MCPRM2 = mpprm2
     C                     MOVE WPPRM2    XCPRM2
     C* MCPRM3 = mpprm3
     C                     MOVE WPPRM3    XCPRM3
     C* MCPRM4 = mpprm4
     C                     MOVE WPPRM4    XCPRM4
     C* MCPGMT = mppgmt
     C                     MOVE WPPGMT    XCPGMT
     C* MCOPTD = mppgmd
     C                     MOVE WPPGMD    XCOPTD
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ** If no fields processed for prompt
     C* ** (UPDFLG=0), display error.
     C* IF UPDFLG=0
     C           UPDFLG    IFEQ *ZERO
     C* DSPERR *none,'Invalid cursor loc for prompt'
     C                     MOVELC0004     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Return to list panel on function key 12
     C* Set exit flag to signal previous screen
     C* EXTSCR = 1
     C                     Z-ADD1         EXTSCR
     C*                                                               *
     C* Release record if edit or delete functions
     C* IF mode=2 | mode=4
     C           MODE      IFEQ 2
     C           MODE      OREQ 4
     C* RLSREC D.MENU,F.MNUOPT
     C*
     C                     Z-ADD5         WFILE#           SET FILE#
     C                     UNLCKMNUOPT                 91  RLS LCK MNUOPT
     C* END                                                           *
     C                     END
     C*                                                               *
     C* EXTSCR                                                        *
     C                     GOTO $00699
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Delete
     C*
     C           *INKN     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Perform delete on function key 14
     C* ** Delete
     C* IF MODE=4
     C           MODE      IFEQ 4
     C* DELETE D.MENU,F.MNUOPT
     C*
     C                     EXSR S028
     C* IF %STS(D.MENU,F.MNUOPT)=*YES
     C*  Status of last file I/O
     C           STS05     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR                                                        *
     C                     GOTO $00699
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* Process Screen Validation.
     C           CHKVAR    IFEQ 1
     C                     EXSR S006V
     C                     END
     C           VALIDF    IFEQ 1
     C           CHKVAR    OREQ 0
     C* *** Perform updates to file on function key 14
     C* IF mode <> 4
     C           MODE      IFNE 4
     C* ERROR = 'N'
     C                     MOVE 'N'       ERROR
     C*                                                               *
     C* IF mcpgmt = 'R'
     C           XCPGMT    IFEQ 'R'
     C* GETREC D.MENU,F.MNUPGM,*EQ,MCPGMN,MCSPGM
     C*
     C                     EXSR S027
     C* IF %sts(d.menu,f.mnupgm) = *No
     C*  Status of last file I/O
     C           STS06     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XNO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR MCPGMN,'MNU0011','MENUERR'
     C                     MOVEL'MNU0011' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'XCPGMN  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0006  'FLDSCR
     C                     EXSR SATRIB
     C* DSPERR MCSPGM,'MNU0011','MENUERR'
     C                     MOVEL'MNU0011' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'XCSPGM  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0006  'FLDSCR
     C                     EXSR SATRIB
     C* ERROR = 'Y'
     C                     MOVE 'Y'       ERROR
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ** Revise
     C* IF error = 'N'
     C           ERROR     IFEQ 'N'
     C* IF MODE=2
     C           MODE      IFEQ 2
     C* UPDATE D.MENU,F.MNUOPT
     C*
     C                     EXSR S029
     C* ELSE                                                          *
     C                     ELSE
     C* ** Create
     C* IF MODE=6
     C           MODE      IFEQ 6
     C* WRITE D.MENU,F.MNUOPT
     C*
     C                     EXSR S030
     C* ** Set keys for first record to display.
     C* SVK004 = MCUSER
     C                     MOVE WCUSER    SVK004
     C* SVK005 = MCMNUC
     C                     MOVE WCMNUC    SVK005
     C* SVK006 = MCOPTC
     C                     MOVE XCOPTC    SVK006
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* IF %STS(D.MENU,F.MNUOPT)=*YES
     C*  Status of last file I/O
     C           STS05     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* EXTSCR                                                        *
     C                     GOTO $00699
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C                     END
     C                     END
     C                     END
     C           $00699    ENDSR
     C/EJECT
     C*****************************************************************
     C* S007 - Help Details
     C*****************************************************************
     C           S007      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'00000000'*IN,1
     C                     MOVEA'0'       *IN,64
     C                     MOVEA'1'       *IN,80
     C*                                                               *
     C* Reset Key values, start at beginning of file
     C* POSCUR 0,0
     C                     Z-ADD*ZERO     LIN
     C                     Z-ADD*ZERO     POS
     C                     MOVE '1'       *IN79
     C* SVK009 = PS0701
     C                     Z-ADDPS0701    SVK009
     C*                                                               *
     C* DELETE = 'N'
     C                     MOVE 'N'       DELETE
     C* ENTER = 'Y'
     C                     MOVE 'Y'       ENTER
     C* F18 = 'F18=Insert'
     C                     MOVE *BLANKS   F18
     C                     MOVELC0005     F18
     C* Set Keys to values from header file.
     C* MDMNUC = MCMNUC
     C                     MOVE WCMNUC    XDMNUC
     C* MDOPTC = MCOPTC
     C                     MOVE XCOPTC    XDOPTC
     C* SVK007 = MCMNUC
     C                     MOVE WCMNUC    SVK007
     C* SVK008 = MCOPTC
     C                     MOVE XCOPTC    SVK008
     C*                                                               *
     C* F12FLG = 0
     C                     Z-ADD*ZERO     F12FLG
     C* ***  Start display on
     C* ***  first record in file.
     C* SETLL D.MENU,F.MNUHLP,SVK007,SVK008,SVK009
     C*
     C                     EXSR S031
     C*                                                               *
     C* Fill List panel.
     C* EXSUBR S07FWD
     C                     EXSR S07FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN63
     C                     MOVE '1'       *IN65
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     WRITESCR007
     C* Turn off SFLDSP in case of empty subfile
     C           RRN04     IFLT 1
     C                     MOVE '0'       *IN64
     C                     ELSE
     C                     MOVE '1'       *IN64
     C                     END
     C           ERN04     IFEQ 1
     C                     MOVE '1'       *IN67
     C                     ELSE
     C                     MOVE '0'       *IN67
     C                     END
     C                     Z-ADDRRN04     DRN04
     C                     EXFMTSCR007C1
     C           SFLRRN    IFGT 0
     C           DRN04     ANDNE0
     C                     Z-ADDSFLRRN    RRN04
     C                     Z-ADDSFLRRN    DRN04
     C                     END
     C                     MOVEA'0'       *IN,1
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Exit
     C*
     C           *INKC     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Exit program on function key 3
     C*                                                               *
     C* EXTPGM                                                        *
     C                     MOVE 'Y'       LRFLAG
     C                     MOVE *BLANK    SCRNID
     C                     MOVEL'SEND'    SCRNID
     C                     GOTO $00799
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Return to previous screen
     C* *** on function key 12
     C* POSCUR 0,0
     C                     Z-ADD*ZERO     LIN
     C                     Z-ADD*ZERO     POS
     C                     MOVE '1'       *IN79
     C* IF delete = 'Y'
     C           DELETE    IFEQ 'Y'
     C* DELETE = 'N'
     C                     MOVE 'N'       DELETE
     C* SETLL D.MENU,F.MNUHLP,SVK007,SVK008,svk009
     C*
     C                     EXSR S031
     C* EXSUBR s07fwd
     C                     EXSR S07FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C* ELSE                                                          *
     C                     ELSE
     C* EXTSCR                                                        *
     C                     GOTO $00799
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Allow Delt
     C*
     C           *INKN     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Allow delete on Function key 14
     C* IF delete <> 'Y'
     C           DELETE    IFNE 'Y'
     C* DELETE = 'Y'
     C                     MOVE 'Y'       DELETE
     C* SETLL D.MENU,F.MNUHLP,SVK007,SVK008,svk009
     C*
     C                     EXSR S031
     C* EXSUBR s07fwd
     C                     EXSR S07FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C* END                                                           *
     C                     END
     C* POSCUR 0,0
     C                     Z-ADD*ZERO     LIN
     C                     Z-ADD*ZERO     POS
     C                     MOVE '1'       *IN79
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Add/Insert
     C*
     C           *INKS     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Toggle between insert and add mode
     C* IF delete = 'Y'
     C           DELETE    IFEQ 'Y'
     C* DELETE = 'N'
     C                     MOVE 'N'       DELETE
     C* END                                                           *
     C                     END
     C* IF enter = 'Y'
     C           ENTER     IFEQ 'Y'
     C* ENTER = 'N'
     C                     MOVE 'N'       ENTER
     C* F18 = 'F18=Add   '
     C                     MOVE *BLANKS   F18
     C                     MOVELC0006     F18
     C* ELSE                                                          *
     C                     ELSE
     C* ENTER = 'Y'
     C                     MOVE 'Y'       ENTER
     C* F18 = 'F18=Insert'
     C                     MOVE *BLANKS   F18
     C                     MOVELC0005     F18
     C* END                                                           *
     C                     END
     C* SETLL D.MENU,F.MNUHLP,SVK007,SVK008,svk009
     C*
     C                     EXSR S031
     C* EXSUBR s07fwd
     C                     EXSR S07FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C*
     C* Bkwd
     C*
     C           *INKG     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backward on function key 7
     C* **  1. Check for any selected records.
     C* EXSUBR S07EDT
     C                     EXSR S07EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C* **  2. Fill panel.
     C* EXSUBR S07BKW
     C                     EXSR S07BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C* POSCUR 0,0
     C                     Z-ADD*ZERO     LIN
     C                     Z-ADD*ZERO     POS
     C                     MOVE '1'       *IN79
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *INKH     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forward on function key 8
     C* **  1. Check for selected records.
     C* EXSUBR S07EDT
     C                     EXSR S07EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C* **  2. Fill panel.
     C* EXSUBR S07FWD
     C                     EXSR S07FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C* POSCUR 0,0
     C                     Z-ADD*ZERO     LIN
     C                     Z-ADD*ZERO     POS
     C                     MOVE '1'       *IN79
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Bkwd
     C*
     C           *IN62     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backwards
     C*     1. Check for any selected records.
     C* EXSUBR S07EDT
     C                     EXSR S07EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C*     2. Fill panel.
     C* EXSUBR S07BKW
     C                     EXSR S07BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C* POSCUR 0,0
     C                     Z-ADD*ZERO     LIN
     C                     Z-ADD*ZERO     POS
     C                     MOVE '1'       *IN79
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *IN61     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forwards
     C*     1. Check for selected records.
     C* EXSUBR S07EDT
     C                     EXSR S07EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C*     2. Fill Panel.
     C* EXSUBR S07FWD
     C                     EXSR S07FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C* POSCUR 0,0
     C                     Z-ADD*ZERO     LIN
     C                     Z-ADD*ZERO     POS
     C                     MOVE '1'       *IN79
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* *** Check for any selected records on post-enter.
     C*                                                               *
     C* WKROW = *row
     C                     Z-ADD0         HALFWD
     C                     MOVE ROW       BYTE2
     C                     MOVE HALFWD    ROW1
     C                     Z-ADDROW1      WKROW
     C* WKCOL = *col
     C                     Z-ADD0         HALFWD
     C                     MOVE COL       BYTE2
     C                     MOVE HALFWD    COL1
     C                     Z-ADDCOL1      WKCOL
     C* Reset reposition flag and check for any
     C* selected records.
     C* POSFLG = 0
     C                     Z-ADD*ZERO     POSFLG
     C* EXSUBR S07EDT
     C                     EXSR S07EDT
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C* *** Check for reposition
     C*                                                               *
     C* IF PS0701<>0
     C           PS0701    IFNE *ZERO
     C* POSFLG = 1
     C                     Z-ADD1         POSFLG
     C* SVK009 = PS0701
     C                     Z-ADDPS0701    SVK009
     C* PS0701 = 0
     C                     Z-ADD*ZERO     PS0701
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Refresh screen if record selected or
     C* if reposition was selected.
     C* IF POSFLG=1 | updflg=1
     C           POSFLG    IFEQ 1
     C           UPDFLG    OREQ 1
     C* SETLL D.MENU,F.MNUHLP,SVK007,SVK008,SVK009
     C*
     C                     EXSR S031
     C* EXSUBR S07FWD
     C                     EXSR S07FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00799
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* POSCUR wkrow,wkcol
     C                     Z-ADDWKROW     LIN
     C                     Z-ADDWKCOL     POS
     C                     END
     C                     END
     C                     END
     C           $00799    ENDSR
     C/EJECT
     C*****************************************************************
     C* S008 - List of Users
     C*****************************************************************
     C           S008      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'00000000'*IN,1
     C                     MOVEA'00'      *IN,9
     C                     MOVEA'1'       *IN,80
     C* FST08 = ' '
     C                     MOVEL*BLANKS   FST08
     C* LST08 = ' '
     C                     MOVEL*BLANKS   LST08
     C* SVK08 = ' '
     C                     MOVEL*BLANKS   SVK08
     C* ** set prompt file keys to values
     C* ** from header file.
     C* S08CNT = 005
     C                     Z-ADD005       S08CNT
     C* ** Array forward read.
     C* EXSUBR S08AFR
     C                     EXSR S08AFR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00899
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     EXFMTSCR008
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Return to previous screen
     C* *** on function key 12
     C* EXTSCR                                                        *
     C                     GOTO $00899
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C*
     C* Bkwd
     C*
     C           *INKG     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backward on function key 7
     C* SVK08 = FST08
     C                     MOVE FST08     SVK08
     C* ** Array Backwards read.
     C* EXSUBR S08ABR
     C                     EXSR S08ABR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00899
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *INKH     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forward on function key 8
     C* SVK08 = LST08
     C                     MOVE LST08     SVK08
     C* ** Array Forward read.
     C* EXSUBR S08AFR
     C                     EXSR S08AFR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00899
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Bkwd
     C*
     C           *IN62     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backwards
     C* SVK08 = FST08
     C                     MOVE FST08     SVK08
     C* ** Array Backwards read.
     C* EXSUBR S08ABR
     C                     EXSR S08ABR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00899
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *IN61     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forwards
     C* SVK08 = LST08
     C                     MOVE LST08     SVK08
     C* ** Array Forward Read.
     C* EXSUBR S08AFR
     C                     EXSR S08AFR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00899
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* ** Check for any selected records.
     C*    1. Check each array element that
     C*       was loaded in load routine.
     C* I08 = 1
     C                     Z-ADD1         Z9
     C* DOW (I08<=C08)&(T01(I08)<>1)
     C           Z9        DOWLEZ4
     C           T01,Z9    ANDNE1
     C* I08 = I08+1
     C           Z9        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z9
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ** If value was found, fill prompt work
     C* ** field, get screen values, and return.
     C* IF (I08<=C08)&(T01(I08)=1)
     C           Z9        IFLE Z4
     C           T01,Z9    ANDEQ1
     C* F02001 = B01(I08)
     C                     MOVE B01,Z9    F02001
     C* EXTSCR                                                        *
     C                     GOTO $00899
     C* END                                                           *
     C                     END
     C                     END
     C                     END
     C                     END
     C           $00899    ENDSR
     C/EJECT
     C*****************************************************************
     C* S009 - List of Programs
     C*****************************************************************
     C           S009      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'00000000'*IN,1
     C                     MOVEA'00'      *IN,9
     C                     MOVEA'1'       *IN,80
     C* FST10 = ' '
     C                     MOVEL*BLANKS   FST10
     C* LST10 = ' '
     C                     MOVEL*BLANKS   LST10
     C* SVK10 = ' '
     C                     MOVEL*BLANKS   SVK10
     C* FST11 = ' '
     C                     MOVEL*BLANKS   FST11
     C* LST11 = ' '
     C                     MOVEL*BLANKS   LST11
     C* SVK11 = ' '
     C                     MOVEL*BLANKS   SVK11
     C* ** set prompt file keys to values
     C* ** from header file.
     C* S10CNT = 005
     C                     Z-ADD005       S10CNT
     C* ** Array forward read.
     C* EXSUBR S10AFR
     C                     EXSR S10AFR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00999
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     EXFMTSCR009
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Return to previous screen
     C* *** on function key 12
     C* EXTSCR                                                        *
     C                     GOTO $00999
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C*
     C* Bkwd
     C*
     C           *INKG     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backward on function key 7
     C* SVK10 = FST10
     C                     MOVE FST10     SVK10
     C* SVK11 = FST11
     C                     MOVE FST11     SVK11
     C* ** Array Backwards read.
     C* EXSUBR S10ABR
     C                     EXSR S10ABR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00999
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *INKH     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forward on function key 8
     C* SVK10 = LST10
     C                     MOVE LST10     SVK10
     C* SVK11 = LST11
     C                     MOVE LST11     SVK11
     C* ** Array Forward read.
     C* EXSUBR S10AFR
     C                     EXSR S10AFR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00999
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Bkwd
     C*
     C           *IN62     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backwards
     C* SVK10 = FST10
     C                     MOVE FST10     SVK10
     C* SVK11 = FST11
     C                     MOVE FST11     SVK11
     C* ** Array Backwards read.
     C* EXSUBR S10ABR
     C                     EXSR S10ABR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00999
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *IN61     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forwards
     C* SVK10 = LST10
     C                     MOVE LST10     SVK10
     C* SVK11 = LST11
     C                     MOVE LST11     SVK11
     C* ** Array Forward Read.
     C* EXSUBR S10AFR
     C                     EXSR S10AFR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00999
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* ** Check for any selected records.
     C*    1. Check each array element that
     C*       was loaded in load routine.
     C* I10 = 1
     C                     Z-ADD1         Y1
     C* DOW (I10<=C10)&(T04(I10)<>1)
     C           Y1        DOWLEZ5
     C           T04,Y1    ANDNE1
     C* I10 = I10+1
     C           Y1        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Y1
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ** If value was found, fill prompt work
     C* ** field, get screen values, and return.
     C* IF (I10<=C10)&(T04(I10)=1)
     C           Y1        IFLE Z5
     C           T04,Y1    ANDEQ1
     C* F10001 = B02(I10)
     C                     MOVE B02,Y1    F10001
     C* F10002 = B03(I10)
     C                     MOVE B03,Y1    F10002
     C* EXTSCR                                                        *
     C                     GOTO $00999
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Position To
     C* IF (fl0006 <> *blanks) | (fl0007 <> *blanks)
     C           FL0006    IFNE *BLANKS
     C           FL0007    ORNE *BLANKS
     C* SVK10 = fl0006
     C                     MOVE FL0006    SVK10
     C* SVK11 = fl0007
     C                     MOVE FL0007    SVK11
     C* FL0006 = *blanks
     C                     MOVEL*BLANKS   FL0006
     C* FL0007 = *blanks
     C                     MOVEL*BLANKS   FL0007
     C* EXSUBR s10afr
     C                     EXSR S10AFR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00999
     C                     END
     C* END                                                           *
     C                     END
     C                     END
     C                     END
     C                     END
     C           $00999    ENDSR
     C/EJECT
     C*****************************************************************
     C* S010 - Copy Users
     C*****************************************************************
     C           S010      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'00101'   *IN,1
     C                     MOVEA'1'       *IN,80
     C*                                                               *
     C* ** Default Copy Flags to Yes
     C* CPYMNU = 'Y'
     C                     MOVE 'Y'       CPYMNU
     C* CPYOPT = 'Y'
     C                     MOVE 'Y'       CPYOPT
     C*                                                               *
     C* FL0005 = MAUSER
     C                     MOVE XAUSER    FL0005
     C* TOUSER = ' '
     C                     MOVEL*BLANKS   TOUSER
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     EXFMTSCR010
     C                     MOVEA'00101'   *IN,1
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Prompt
     C*
     C           *INKD     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* ** Check for any prompt fields.
     C* WKROW = *row
     C                     Z-ADD0         HALFWD
     C                     MOVE ROW       BYTE2
     C                     MOVE HALFWD    ROW1
     C                     Z-ADDROW1      WKROW
     C* WKCOL = *col
     C                     Z-ADD0         HALFWD
     C                     MOVE COL       BYTE2
     C                     MOVE HALFWD    COL1
     C                     Z-ADDCOL1      WKCOL
     C* UPDFLG = 0
     C                     Z-ADD*ZERO     UPDFLG
     C*                                                               *
     C* IF %CLF(TOUSER)
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'TOUSER  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0009  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* F02001 = ' '
     C                     MOVEL*BLANKS   F02001
     C* EXSCR SC0008
     C                     ADD  1         SP
     C                     MOVEL'SC0009  'SID,SP
     C                     MOVE 'W'       STY,SP
     C                     MOVEA*IN       IN06
     C                     EXSR S008
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C                     EXSR SREDSP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $01099
     C                     END
     C                     MOVEAIN06      *IN
     C                     MOVE '1'       *IN79
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* IF F02001<>' '
     C           F02001    IFNE *BLANKS
     C* TOUSER = F02001
     C                     MOVE F02001    TOUSER
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* POSCUR wkrow,wkcol
     C                     Z-ADDWKROW     LIN
     C                     Z-ADDWKCOL     POS
     C*                                                               *
     C* ** If no fields processed for prompt
     C* ** (UPDFLG=0), display error.
     C* IF UPDFLG=0
     C           UPDFLG    IFEQ *ZERO
     C* DSPERR *none,'Invalid cursor loc for prompt'
     C                     MOVELC0004     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Return to previous screen
     C* *** on function key 12
     C* EXTSCR                                                        *
     C                     GOTO $01099
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* Process Screen Validation.
     C           CHKVAR    IFEQ 1
     C                     EXSR S010V
     C                     END
     C           VALIDF    IFEQ 1
     C           CHKVAR    OREQ 0
     C* *** Display next detail panel on post-enter
     C* POSCUR 0,0
     C                     Z-ADD*ZERO     LIN
     C                     Z-ADD*ZERO     POS
     C                     MOVE '1'       *IN79
     C*                                                               *
     C* ERROR = 'N'
     C                     MOVE 'N'       ERROR
     C* IF fl0005 = touser
     C           FL0005    IFEQ TOUSER
     C* DSPERR touser,'mnu0007','menuerr'
     C                     MOVEL'mnu0007' MSGID
     C                     MOVEL'menuerr' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'TOUSER  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0009  'FLDSCR
     C                     EXSR SATRIB
     C* ERROR = 'Y'
     C                     MOVE 'Y'       ERROR
     C* END                                                           *
     C                     END
     C*                                                               *
     C* *** If No Errors Copy Details
     C* IF error <> 'Y'
     C           ERROR     IFNE 'Y'
     C* INTER = 'I'
     C                     MOVE 'I'       INTER
     C* CALL 'MNU030C',INTER,FL0005,CPYMNU,CPYOPT,touser,YNSC9
     C                     Z-ADD1         CALLST
     C                     CALL 'MNU030C' P0002        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* *** exit screen if copy OK
     C* IF YNSC9='Y'
     C           YNSC9     IFEQ 'Y'
     C* POSCUR 0,0
     C                     Z-ADD*ZERO     LIN
     C                     Z-ADD*ZERO     POS
     C                     MOVE '1'       *IN79
     C* EXTSCR                                                        *
     C                     GOTO $01099
     C*                                                               *
     C* ELSE                                                          *
     C                     ELSE
     C* DSPERR *NONE,'MNU0009','MENUERR'
     C                     MOVEL'MNU0009' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C                     END
     C                     END
     C                     END
     C           $01099    ENDSR
     C/EJECT
     C*****************************************************************
     C* SREDSP -  Redisplay Windows within stack.
     C*****************************************************************
     C           SREDSP    BEGSR
     C*
     C                     Z-ADDSP        CT
     C           CT        DOWGT1
     C           STY,CT    ANDNE'F'
     C                     SUB  1         CT
     C                     END
     C*
     C*  Redisplay Windows within stack.
     C*
     C           CT        DOWLESP
     C           CT        ANDGT0
     C*
     C           SID,CT    IFEQ 'SC0001'
     C                     MOVEAIN01      *IN
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR001
     C                     WRITESCR001C1
     C                     ELSE
     C           SID,CT    IFEQ 'SC0002'
     C                     MOVEAIN02      *IN
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR002
     C                     ELSE
     C           SID,CT    IFEQ 'SC0003'
     C                     MOVEAIN03      *IN
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR003
     C                     WRITESCR003C1
     C                     ELSE
     C           SID,CT    IFEQ 'SC0004'
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR004
     C                     ELSE
     C           SID,CT    IFEQ 'SC0005'
     C                     MOVEAIN04      *IN
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR005
     C                     WRITESCR005C1
     C                     ELSE
     C           SID,CT    IFEQ 'SC0006'
     C                     MOVEAIN05      *IN
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR006
     C                     ELSE
     C           SID,CT    IFEQ 'SC0007'
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR007
     C                     WRITESCR007C1
     C                     ELSE
     C           SID,CT    IFEQ 'SC0008'
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR008
     C                     ELSE
     C           SID,CT    IFEQ 'SC0010'
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR009
     C                     ELSE
     C           SID,CT    IFEQ 'SC0009'
     C                     MOVEAIN06      *IN
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR010
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C*
     C                     ADD  1         CT
     C                     END
     C*
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* LEVTXT - Set Default Text
     C*****************************************************************
     C           LEVTXT    BEGSR
     C*
     C*                                                               *
     C* Move Description over . . .
     C* ARLEV = '. . . . . . . . .'
     C                     MOVE *BLANKS   A01
     C                     MOVEAC0007     A01
     C* X = 1
     C                     Z-ADD1         X
     C* DOW x<=15 *and ar15(x)<>*blanks
     C           X         DOWLE15
     C           A02,X     ANDNE*BLANKS
     C* ARLEV(X) = ar15(X)
     C                     MOVE *BLANKS   A01,X
     C                     MOVE A02,X     A01,X
     C* X = x + 1
     C           X         ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    X
     C* END                                                           *
     C                     END
     C* ARLEV(X) = ' '
     C                     MOVE *BLANKS   A01,X
     C*
     C           $LEVTX    ENDSR
     C/EJECT
     C*****************************************************************
     C* S01BKW - SCRN SUB
     C*****************************************************************
     C           S01BKW    BEGSR
     C*
     C* ***  Scroll information backward
     C*                                                               *
     C* C01 = 0
     C                     Z-ADD*ZERO     Z1
     C* ** Clear hidden key arrays used for record
     C* ** retrieval.
     C* A001 = ' '
     C                     MOVEA*BLANKS   A03
     C* FLDATR fl0001,*pr,*nd
     C                     MOVE 'X'       #PR
     C                     MOVE 'X'       #ND
     C                     MOVEL'FL0001  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* GETBLK D.MENU,F.MNUUSR,*PV
     C*
     C                     EXSR S032
     C*
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADD11        WLCNTR           INIT LOOP CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Initialize subfile    SCR001S1
     C*          ---------------------------------------------------------------
     C                     MOVEA'0000'    *IN,63           SFLCLR,DSP,NXTCHG,INZ
     C                     WRITESCR001C1                   CLEAR SUBFILE
     C                     Z-ADD0         RRN01
     C*
     C                     Z-ADD1         XRN01            Init Next RRN
     C                     Z-ADDXRN01     SRN01
     C                     MOVEA'1110'    *IN,63           DSP,DSPCTL,NXTCHG
     C                     MOVEA*IN       INS01
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD01    DOUNE'Y'                        RD.SW.MNUUSR    MNUUS
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     Z-ADD*ZEROS    FL0001
     C                     MOVEL*BLANKS   XAUSER
     C                     MOVEL*BLANKS   XASURN
     C                     MOVEL*BLANKS   WK0001
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     READ MNUUSR              N  9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     Z-ADD*ZERO     HRC01            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     END
     C*
     C           SWRD01    IFEQ 'Y'                        RD.SW.MNUUSR    MNUUS
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C*
     C* FLDATR fl0001,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'FL0001  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* C01 = C01+1
     C           Z1        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z1
     C* ** Save key values in key arrays.
     C* A001(C01) = :0002
     C                     MOVE *BLANKS   A03,Z1
     C                     MOVE XAUSER    A03,Z1
     C* ENDBLK                                                        *
     C           SWEXBL    IFEQ *ZERO
     C           SWSKPR    ANDEQ*ZERO
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     Z-ADDWCNTR     WRRN01
     C                     MOVEA*IN       INSAV1
     C                     ADD  1         RRN01            INCREMENT RRN
     C                     WRITESCR001S1               90
     C                     ADD  1         XRN01            Incr NEXT RRN
     C                     END
     C                     END
     C                     END
     C                     Z-ADDRRN01     NXTRRN
     C                     Z-ADD*ZEROS    FL0001
     C                     MOVEL*BLANKS   XAUSER
     C                     MOVEL*BLANKS   XASURN
     C                     MOVEL*BLANKS   WK0001
     C                     MOVEAINS01     *IN
     C                     MOVE '0'       *IN65
     C                     MOVEA*IN       INSAV1
     C                     Z-ADDWCNTR     WGETR
     C           WGETR     DOWLTWLCNTR
     C                     ADD  1         RRN01            INCREMENT RRN
     C                     WRITESCR001S1               90
     C                     ADD  1         XRN01            Incr NEXT RRN
     C                     ADD  1         WGETR            INCREMENT CNTR
     C                     END
     C           NXTRRN    IFGT 0
     C           NXTRRN    CHAINSCR001S1             90
     C                     MOVEAINSAV1    *IN
     C                     UPDATSCR001S1               90
     C                     MOVEAINS01     *IN
     C                     END
     C           RRN01     IFGT SRN01
     C                     Z-ADDSRN01     RRN01
     C                     END
     C                     EXSR S034                       CHK EOF
     C*
     C           $S01BK    ENDSR
     C/EJECT
     C*****************************************************************
     C* S01EDT - SCRN SUB
     C*****************************************************************
     C           S01EDT    BEGSR
     C*
     C* ** Process Maintenance on Detail Panel (MB)
     C* **   1. Check for any selected records, If record
     C* **      selected, display detail panel.
     C* UPDFLG = 0
     C                     Z-ADD*ZERO     UPDFLG
     C* I01 = 0
     C                     Z-ADD*ZERO     Z6
     C* DOBLK D.MENU
     C*
     C                     Z-ADDRRN01     SRN01            Save RRN
     C                     Z-ADD1         RRN01            INIT RRN
     C                     MOVEA'00'      *IN,90
     C                     MOVEA*IN       INS01
     C                     Z-ADD*ZERO     SWEXBL
     C           *IN90     DOUEQ'1'
     C           *IN91     OREQ '1'
     C           *IN64     OREQ '0'
     C           SWEXBL    ORNE *ZERO
     C                     READCSCR001S1               9190
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C                     MOVEAINSAV1    *IN
     C                     MOVE '1'       *IN65
     C                     MOVEA'0'       *IN,1
     C                     MOVEA'1'       *IN,3
     C                     MOVEA'0'       *IN,5
     C* I01 = I01+1
     C           Z6        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z6
     C*                                                               *
     C* ** display detail screen
     C* IF (FL0001=2)|(FL0001=4)|(FL0001=5)
     C           FL0001    IFEQ 2
     C           FL0001    OREQ 4
     C           FL0001    OREQ 5
     C* MODE = FL0001
     C                     Z-ADDFL0001    MODE
     C* ** set keys from hidden key arrays.
     C* :0002 = A001(I01)
     C                     MOVE A03,Z6    XAUSER
     C*                                                               *
     C* Display error if user is used as a group by another user
     C* DELERR = 'N'
     C                     MOVE 'N'       DELERR
     C* IF mode = 4
     C           MODE      IFEQ 4
     C* GETREC d.mnuusr2,f.mnuusr2,*eq,menu.mnuusr.mauser
     C*
     C                     EXSR S035
     C* IF %sts(d.mnuusr2,f.mnuusr2) = *yes
     C*  Status of last file I/O
     C           STS02     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* DSPERR FL0001,'MNU0013','MENUERR',*LIBL
     C                     MOVEL'MNU0013' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVEL'*LIBL'   MSGFL
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'FL0001  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* DELERR = 'Y'
     C                     MOVE 'Y'       DELERR
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ** Get record and any secondary records.
     C* IF delerr = 'N'
     C           DELERR    IFEQ 'N'
     C* GETREC D.MENU,F.MNUUSR,F.MNUUSR1,*EQ,:0002
     C*
     C                     EXSR S036
     C* ** Display Screen.
     C* EXSCR SC0002
     C                     ADD  1         SP
     C                     MOVEL'SC0001  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN01
     C                     UPDATSCR001S1               90
     C                     EXSR S002
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S01ED
     C                     END
     C           RRN01     CHAINSCR001S1             9091
     C                     MOVEAIN01      *IN
     C                     MOVE '1'       *IN79
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* FL0001 = 0
     C                     Z-ADD*ZERO     FL0001
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* ** Process any optional action codes.
     C*    1. Set keys from hidden key arrays.
     C*    2. Get record and any secondary records.
     C*    3. Display Screen.
     C*                                                               *
     C* IF FL0001=06
     C           FL0001    IFEQ 06
     C* MODE = FL0001
     C                     Z-ADDFL0001    MODE
     C* :0002 = A001(I01)
     C                     MOVE A03,Z6    XAUSER
     C* SVK001 = A001(I01)
     C                     MOVE A03,Z6    SVK001
     C* GETREC D.MENU,F.MNUUSR,*EQ,:0002
     C*
     C                     EXSR S037
     C* EXSCR SC0003
     C                     ADD  1         SP
     C                     MOVEL'SC0001  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN01
     C                     UPDATSCR001S1               90
     C                     EXSR S003
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S01ED
     C                     END
     C           RRN01     CHAINSCR001S1             9091
     C                     MOVEAIN01      *IN
     C                     MOVE '1'       *IN79
     C* FL0001 = 0
     C                     Z-ADD*ZERO     FL0001
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* END                                                           *
     C                     END
     C*                                                               *
     C* *** copy
     C* IF fl0001 =3
     C           FL0001    IFEQ 3
     C* FL0001 = 0
     C                     Z-ADD*ZERO     FL0001
     C* MAUSER = A001(I01)
     C                     MOVE A03,Z6    XAUSER
     C* YNSC9 = 'N'
     C                     MOVE 'N'       YNSC9
     C* EXSCR SC0009
     C                     ADD  1         SP
     C                     MOVEL'SC0001  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN01
     C                     UPDATSCR001S1               90
     C                     EXSR S010
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S01ED
     C                     END
     C           RRN01     CHAINSCR001S1             9091
     C                     MOVEAIN01      *IN
     C                     MOVE '1'       *IN79
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* END                                                           *
     C                     END
     C*                                                               *
     C*                                                               *
     C* ** If the action choice is not
     C* ** one of the allowed values,
     C* ** display error message.
     C* IF (FL0001<>0)&(UPDFLG=0)
     C           FL0001    IFNE *ZERO
     C           UPDFLG    ANDEQ*ZERO
     C* DSPERR FL0001,'Invalid action choice'
     C                     MOVELC0008     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'FL0001  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     MOVEA'00'      *IN,90
     C                     MOVEA*IN       INSAV1
     C                     UPDATSCR001S1               90
     C                     MOVEA'0'       *IN,1
     C                     MOVEA'1'       *IN,3
     C                     MOVEA'0'       *IN,5
     C                     END
     C                     END
     C*
     C                     Z-ADDSRN01     RRN01
     C                     MOVEAINS01     *IN
     C*
     C*
     C*
     C           $S01ED    ENDSR
     C/EJECT
     C*****************************************************************
     C* S01FWD - SCRN SUB
     C*****************************************************************
     C           S01FWD    BEGSR
     C*
     C* *** Scroll information forward
     C*                                                               *
     C* C01 = 0
     C                     Z-ADD*ZERO     Z1
     C* ** Clear Hidden key arrays used for later
     C* ** record retrieval.
     C* A001 = ' '
     C                     MOVEA*BLANKS   A03
     C* FLDATR fl0001,*pr,*nd
     C                     MOVE 'X'       #PR
     C                     MOVE 'X'       #ND
     C                     MOVEL'FL0001  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* GETBLK D.MENU,F.MNUUSR,*NX
     C*
     C*
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADD11        WLCNTR           INIT LOOP CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Initialize subfile    SCR001S1
     C*          ---------------------------------------------------------------
     C                     MOVEA'0000'    *IN,63           SFLCLR,DSP,NXTCHG,INZ
     C                     WRITESCR001C1                   CLEAR SUBFILE
     C                     Z-ADD0         RRN01
     C*
     C                     Z-ADD1         XRN01            Init Next RRN
     C                     Z-ADDXRN01     SRN01
     C                     MOVEA'1110'    *IN,63           DSP,DSPCTL,NXTCHG
     C                     MOVEA*IN       INS01
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD01    DOUNE'Y'                        RD.SW.MNUUSR    MNUUS
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     Z-ADD*ZEROS    FL0001
     C                     MOVEL*BLANKS   XAUSER
     C                     MOVEL*BLANKS   XASURN
     C                     MOVEL*BLANKS   WK0001
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     READ MNUUSR              N  9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     Z-ADD*ZERO     HRC01            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     END
     C*
     C           SWRD01    IFEQ 'Y'                        RD.SW.MNUUSR    MNUUS
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C* FLDATR fl0001,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'FL0001  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* C01 = C01+1
     C           Z1        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z1
     C* ** Save key information in key arrays.
     C* A001(C01) = :0002
     C                     MOVE *BLANKS   A03,Z1
     C                     MOVE XAUSER    A03,Z1
     C* ENDBLK                                                        *
     C           SWEXBL    IFEQ *ZERO
     C           SWSKPR    ANDEQ*ZERO
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     Z-ADDWCNTR     WRRN01
     C                     MOVEA*IN       INSAV1
     C                     ADD  1         RRN01            INCREMENT RRN
     C                     WRITESCR001S1               90
     C                     ADD  1         XRN01            Incr NEXT RRN
     C                     END
     C                     END
     C                     END
     C                     Z-ADDRRN01     NXTRRN
     C                     Z-ADD*ZEROS    FL0001
     C                     MOVEL*BLANKS   XAUSER
     C                     MOVEL*BLANKS   XASURN
     C                     MOVEL*BLANKS   WK0001
     C                     MOVEAINS01     *IN
     C                     MOVE '0'       *IN65
     C                     MOVEA*IN       INSAV1
     C                     Z-ADDWCNTR     WGETR
     C           WGETR     DOWLTWLCNTR
     C                     ADD  1         RRN01            INCREMENT RRN
     C                     WRITESCR001S1               90
     C                     ADD  1         XRN01            Incr NEXT RRN
     C                     ADD  1         WGETR            INCREMENT CNTR
     C                     END
     C           NXTRRN    IFGT 0
     C           NXTRRN    CHAINSCR001S1             90
     C                     MOVEAINSAV1    *IN
     C                     UPDATSCR001S1               90
     C                     MOVEAINS01     *IN
     C                     END
     C           RRN01     IFGT SRN01
     C                     Z-ADDSRN01     RRN01
     C                     END
     C                     EXSR S034                       RESET FP
     C* IF c01 = 0
     C           Z1        IFEQ *ZERO
     C* EXSUBR s01bkw
     C                     EXSR S01BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S01FW
     C                     END
     C* END                                                           *
     C                     END
     C*
     C           $S01FW    ENDSR
     C/EJECT
     C*****************************************************************
     C* S03BKW - SCRN SUB
     C*****************************************************************
     C           S03BKW    BEGSR
     C*
     C* ***  Scroll information backward
     C*                                                               *
     C* C03 = 0
     C                     Z-ADD*ZERO     Z2
     C* A002 = ' '
     C                     MOVEA*BLANKS   A04
     C* A003 = ' '
     C                     MOVEA*BLANKS   A05
     C* FLDATR fl0002,*pr,*nd
     C                     MOVE 'X'       #PR
     C                     MOVE 'X'       #ND
     C                     MOVEL'FL0002  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0003  'FLDSCR
     C                     EXSR SATRIB
     C* GETBLK D.MENU,F.MNUHED,*PV,SVK002
     C*
     C                     EXSR S038
     C*
     C                     MOVEL*BLANK    KBUS01
     C                     MOVELSVK002    KBUS01
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADD10        WLCNTR           INIT LOOP CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Initialize subfile    SCR003S1
     C*          ---------------------------------------------------------------
     C                     MOVEA'0000'    *IN,63           SFLCLR,DSP,NXTCHG,INZ
     C                     WRITESCR003C1                   CLEAR SUBFILE
     C                     Z-ADD0         RRN02
     C*
     C                     Z-ADD1         XRN02            Init Next RRN
     C                     Z-ADDXRN02     SRN02
     C                     MOVEA'1110'    *IN,63           DSP,DSPCTL,NXTCHG
     C                     MOVEA*IN       INS02
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD04    DOUNE'Y'                        RD.SW.MNUHED    MNUOP
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     Z-ADD*ZEROS    FL0002
     C                     MOVEL*BLANKS   XBMNUC
     C                     MOVEL*BLANKS   XBMNUD
     C                     Z-ADD4         WFILE#           SET FILE#
     C           K0007     READEMNUHED              N  9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     Z-ADD*ZERO     HRC04            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     END
     C*
     C           SWRD04    IFEQ 'Y'                        RD.SW.MNUHED    MNUOP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C*
     C* FLDATR fl0002,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'FL0002  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0003  'FLDSCR
     C                     EXSR SATRIB
     C* C03 = C03+1
     C           Z2        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z2
     C* A002(C03) = MBUSER
     C                     MOVE *BLANKS   A04,Z2
     C                     MOVE WBUSER    A04,Z2
     C* A003(C03) = MBMNUC
     C                     MOVE *BLANKS   A05,Z2
     C                     MOVE XBMNUC    A05,Z2
     C* ENDBLK                                                        *
     C           SWEXBL    IFEQ *ZERO
     C           SWSKPR    ANDEQ*ZERO
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     Z-ADDWCNTR     WRRN02
     C                     MOVEA*IN       INSAV1
     C                     ADD  1         RRN02            INCREMENT RRN
     C                     WRITESCR003S1               90
     C                     ADD  1         XRN02            Incr NEXT RRN
     C                     END
     C                     END
     C                     END
     C                     Z-ADDRRN02     NXTRRN
     C                     Z-ADD*ZEROS    FL0002
     C                     MOVEL*BLANKS   XBMNUC
     C                     MOVEL*BLANKS   XBMNUD
     C                     MOVEAINS02     *IN
     C                     MOVE '0'       *IN65
     C                     MOVEA*IN       INSAV1
     C                     Z-ADDWCNTR     WGETR
     C           WGETR     DOWLTWLCNTR
     C                     ADD  1         RRN02            INCREMENT RRN
     C                     WRITESCR003S1               90
     C                     ADD  1         XRN02            Incr NEXT RRN
     C                     ADD  1         WGETR            INCREMENT CNTR
     C                     END
     C           NXTRRN    IFGT 0
     C           NXTRRN    CHAINSCR003S1             90
     C                     MOVEAINSAV1    *IN
     C                     UPDATSCR003S1               90
     C                     MOVEAINS02     *IN
     C                     END
     C           RRN02     IFGT SRN02
     C                     Z-ADDSRN02     RRN02
     C                     END
     C                     EXSR S040                       CHK EOF
     C*
     C           $S03BK    ENDSR
     C/EJECT
     C*****************************************************************
     C* S03EDT - SCRN SUB
     C*****************************************************************
     C           S03EDT    BEGSR
     C*
     C* ** Process Maintenance on Detail Panel (MB)
     C* **   1. Check for any selected records, If record
     C* **      selected, display detail panel.
     C* UPDFLG = 0
     C                     Z-ADD*ZERO     UPDFLG
     C* I03 = 0
     C                     Z-ADD*ZERO     Z7
     C* DOBLK D.MENU
     C*
     C                     Z-ADDRRN02     SRN02            Save RRN
     C                     Z-ADD1         RRN02            INIT RRN
     C                     MOVEA'00'      *IN,90
     C                     MOVEA*IN       INS02
     C                     Z-ADD*ZERO     SWEXBL
     C           *IN90     DOUEQ'1'
     C           *IN91     OREQ '1'
     C           *IN64     OREQ '0'
     C           SWEXBL    ORNE *ZERO
     C                     READCSCR003S1               9190
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C                     MOVEAINSAV1    *IN
     C                     MOVE '1'       *IN65
     C                     MOVEA'0'       *IN,1
     C                     MOVEA'1'       *IN,3
     C* I03 = I03+1
     C           Z7        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z7
     C*                                                               *
     C* ** display detail screen
     C* IF (FL0002=2)|(FL0002=4)|(FL0002=5)
     C           FL0002    IFEQ 2
     C           FL0002    OREQ 4
     C           FL0002    OREQ 5
     C* MODE = FL0002
     C                     Z-ADDFL0002    MODE
     C* ** set keys from hidden key arrays.
     C* MBUSER = A002(I03)
     C                     MOVE A04,Z7    WBUSER
     C* MBMNUC = A003(I03)
     C                     MOVE A05,Z7    XBMNUC
     C* ** Get record and any secondary records.
     C* GETREC D.MENU,F.MNUHED,*EQ,MBUSER,MBMNUC
     C*
     C                     EXSR S041
     C* ** Display Screen.
     C* EXSCR SC0004
     C                     ADD  1         SP
     C                     MOVEL'SC0003  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN03
     C                     UPDATSCR003S1               90
     C                     EXSR S004
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S03ED
     C                     END
     C           RRN02     CHAINSCR003S1             9091
     C                     MOVEAIN03      *IN
     C                     MOVE '1'       *IN79
     C* FL0002 = 0
     C                     Z-ADD*ZERO     FL0002
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* END                                                           *
     C                     END
     C* ** Otions
     C* IF FL0002=06
     C           FL0002    IFEQ 06
     C* MBUSER = A002(I03)
     C                     MOVE A04,Z7    WBUSER
     C* MBMNUC = A003(I03)
     C                     MOVE A05,Z7    XBMNUC
     C* SVK003 = A003(I03)
     C                     MOVE A05,Z7    SVK003
     C* GETREC D.MENU,F.MNUHED,*EQ,MBUSER,MBMNUC
     C*
     C                     EXSR S041
     C* EXSCR SC0005
     C                     ADD  1         SP
     C                     MOVEL'SC0003  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN03
     C                     UPDATSCR003S1               90
     C                     EXSR S005
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S03ED
     C                     END
     C           RRN02     CHAINSCR003S1             9091
     C                     MOVEAIN03      *IN
     C                     MOVE '1'       *IN79
     C* FL0002 = 0
     C                     Z-ADD*ZERO     FL0002
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* END                                                           *
     C                     END
     C* ** Help
     C* IF FL0002=07
     C           FL0002    IFEQ 07
     C* MBUSER = A002(I03)
     C                     MOVE A04,Z7    WBUSER
     C* MBMNUC = A003(I03)
     C                     MOVE A05,Z7    XBMNUC
     C* SVK003 = A003(I03)
     C                     MOVE A05,Z7    SVK003
     C* GETREC D.MENU,F.MNUHED,*EQ,MBUSER,MBMNUC
     C*
     C                     EXSR S041
     C* MCMNUC = mbmnuc
     C                     MOVE XBMNUC    WCMNUC
     C* MCOPTC = *blank
     C                     MOVE *BLANKS   XCOPTC
     C                     MOVEL*BLANK    XCOPTC
     C* EXSCR SC0007
     C                     ADD  1         SP
     C                     MOVEL'SC0003  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN03
     C                     UPDATSCR003S1               90
     C                     EXSR S007
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S03ED
     C                     END
     C           RRN02     CHAINSCR003S1             9091
     C                     MOVEAIN03      *IN
     C                     MOVE '1'       *IN79
     C* FL0002 = 0
     C                     Z-ADD*ZERO     FL0002
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* END                                                           *
     C                     END
     C*                                                               *
     C*                                                               *
     C* ** If the action choice is not
     C* ** one of the allowed values,
     C* ** display error message.
     C* IF (FL0002<>0)&(UPDFLG=0)
     C           FL0002    IFNE *ZERO
     C           UPDFLG    ANDEQ*ZERO
     C* DSPERR FL0002,'Invalid action choice'
     C                     MOVELC0008     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'FL0002  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0003  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     MOVEA'00'      *IN,90
     C                     MOVEA*IN       INSAV1
     C                     UPDATSCR003S1               90
     C                     MOVEA'0'       *IN,1
     C                     MOVEA'1'       *IN,3
     C                     END
     C                     END
     C*
     C                     Z-ADDSRN02     RRN02
     C                     MOVEAINS02     *IN
     C*
     C*
     C*
     C           $S03ED    ENDSR
     C/EJECT
     C*****************************************************************
     C* S03FWD - SCRN SUB
     C*****************************************************************
     C           S03FWD    BEGSR
     C*
     C* *** Scroll information forward
     C*                                                               *
     C* C03 = 0
     C                     Z-ADD*ZERO     Z2
     C* A002 = ' '
     C                     MOVEA*BLANKS   A04
     C* A003 = ' '
     C                     MOVEA*BLANKS   A05
     C* FLDATR fl0002,*pr,*nd
     C                     MOVE 'X'       #PR
     C                     MOVE 'X'       #ND
     C                     MOVEL'FL0002  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0003  'FLDSCR
     C                     EXSR SATRIB
     C* GETBLK D.MENU,F.MNUHED,*NE,SVK002
     C*
     C*
     C                     MOVEL*BLANK    KBUS01
     C                     MOVELSVK002    KBUS01
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADD10        WLCNTR           INIT LOOP CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Initialize subfile    SCR003S1
     C*          ---------------------------------------------------------------
     C                     MOVEA'0000'    *IN,63           SFLCLR,DSP,NXTCHG,INZ
     C                     WRITESCR003C1                   CLEAR SUBFILE
     C                     Z-ADD0         RRN02
     C*
     C                     Z-ADD1         XRN02            Init Next RRN
     C                     Z-ADDXRN02     SRN02
     C                     MOVEA'1110'    *IN,63           DSP,DSPCTL,NXTCHG
     C                     MOVEA*IN       INS02
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD04    DOUNE'Y'                        RD.SW.MNUHED    MNUOP
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     Z-ADD*ZEROS    FL0002
     C                     MOVEL*BLANKS   XBMNUC
     C                     MOVEL*BLANKS   XBMNUD
     C                     Z-ADD4         WFILE#           SET FILE#
     C           K0007     READEMNUHED              N  9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     Z-ADD*ZERO     HRC04            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     END
     C*
     C           SWRD04    IFEQ 'Y'                        RD.SW.MNUHED    MNUOP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C* FLDATR fl0002,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'FL0002  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0003  'FLDSCR
     C                     EXSR SATRIB
     C* C03 = C03+1
     C           Z2        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z2
     C* A002(C03) = MBUSER
     C                     MOVE *BLANKS   A04,Z2
     C                     MOVE WBUSER    A04,Z2
     C* A003(C03) = MBMNUC
     C                     MOVE *BLANKS   A05,Z2
     C                     MOVE XBMNUC    A05,Z2
     C* ENDBLK                                                        *
     C           SWEXBL    IFEQ *ZERO
     C           SWSKPR    ANDEQ*ZERO
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     Z-ADDWCNTR     WRRN02
     C                     MOVEA*IN       INSAV1
     C                     ADD  1         RRN02            INCREMENT RRN
     C                     WRITESCR003S1               90
     C                     ADD  1         XRN02            Incr NEXT RRN
     C                     END
     C                     END
     C                     END
     C                     Z-ADDRRN02     NXTRRN
     C                     Z-ADD*ZEROS    FL0002
     C                     MOVEL*BLANKS   XBMNUC
     C                     MOVEL*BLANKS   XBMNUD
     C                     MOVEAINS02     *IN
     C                     MOVE '0'       *IN65
     C                     MOVEA*IN       INSAV1
     C                     Z-ADDWCNTR     WGETR
     C           WGETR     DOWLTWLCNTR
     C                     ADD  1         RRN02            INCREMENT RRN
     C                     WRITESCR003S1               90
     C                     ADD  1         XRN02            Incr NEXT RRN
     C                     ADD  1         WGETR            INCREMENT CNTR
     C                     END
     C           NXTRRN    IFGT 0
     C           NXTRRN    CHAINSCR003S1             90
     C                     MOVEAINSAV1    *IN
     C                     UPDATSCR003S1               90
     C                     MOVEAINS02     *IN
     C                     END
     C           RRN02     IFGT SRN02
     C                     Z-ADDSRN02     RRN02
     C                     END
     C                     EXSR S040                       RESET FP
     C* IF c03 = 0
     C           Z2        IFEQ *ZERO
     C* EXSUBR s03bkw
     C                     EXSR S03BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S03FW
     C                     END
     C* END                                                           *
     C                     END
     C*
     C           $S03FW    ENDSR
     C/EJECT
     C*****************************************************************
     C* S05BKW - SCRN SUB
     C*****************************************************************
     C           S05BKW    BEGSR
     C*
     C* ***  Scroll information backward
     C*                                                               *
     C* C05 = 0
     C                     Z-ADD*ZERO     Z3
     C* A004 = ' '
     C                     MOVEA*BLANKS   A06
     C* A005 = ' '
     C                     MOVEA*BLANKS   A07
     C* A006 = ' '
     C                     MOVEA*BLANKS   A08
     C* FLDATR fl0003,*pr,*nd
     C                     MOVE 'X'       #PR
     C                     MOVE 'X'       #ND
     C                     MOVEL'FL0003  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0005  'FLDSCR
     C                     EXSR SATRIB
     C* GETBLK D.MENU,F.MNUOPT,*PV,SVK004,SVK005
     C*
     C                     EXSR S042
     C*
     C                     MOVEL*BLANK    KCUS01
     C                     MOVELSVK004    KCUS01
     C                     MOVEL*BLANK    KCMN02
     C                     MOVELSVK005    KCMN02
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADD9         WLCNTR           INIT LOOP CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Initialize subfile    SCR005S1
     C*          ---------------------------------------------------------------
     C                     MOVEA'0000'    *IN,63           SFLCLR,DSP,NXTCHG,INZ
     C                     WRITESCR005C1                   CLEAR SUBFILE
     C                     Z-ADD0         RRN03
     C*
     C                     Z-ADD1         XRN03            Init Next RRN
     C                     Z-ADDXRN03     SRN03
     C                     MOVEA'1110'    *IN,63           DSP,DSPCTL,NXTCHG
     C                     MOVEA*IN       INS03
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD05    DOUNE'Y'                        RD.SW.MNUOPT    MNUPG
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     Z-ADD*ZEROS    FL0003
     C                     MOVEL*BLANKS   XCOPTC
     C                     MOVEL*BLANKS   XCOPTD
     C                     Z-ADD5         WFILE#           SET FILE#
     C           K0009     READEMNUOPT              N  9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     Z-ADD*ZERO     HRC05            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     END
     C*
     C           SWRD05    IFEQ 'Y'                        RD.SW.MNUOPT    MNUPG
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C*
     C* FLDATR fl0003,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'FL0003  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0005  'FLDSCR
     C                     EXSR SATRIB
     C* C05 = C05+1
     C           Z3        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z3
     C* A004(C05) = MCUSER
     C                     MOVE *BLANKS   A06,Z3
     C                     MOVE WCUSER    A06,Z3
     C* A005(C05) = MCMNUC
     C                     MOVE *BLANKS   A07,Z3
     C                     MOVE WCMNUC    A07,Z3
     C* A006(C05) = MCOPTC
     C                     MOVE *BLANKS   A08,Z3
     C                     MOVE XCOPTC    A08,Z3
     C* ENDBLK                                                        *
     C           SWEXBL    IFEQ *ZERO
     C           SWSKPR    ANDEQ*ZERO
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     Z-ADDWCNTR     WRRN03
     C                     MOVEA*IN       INSAV1
     C                     ADD  1         RRN03            INCREMENT RRN
     C                     WRITESCR005S1               90
     C                     ADD  1         XRN03            Incr NEXT RRN
     C                     END
     C                     END
     C                     END
     C                     Z-ADDRRN03     NXTRRN
     C                     Z-ADD*ZEROS    FL0003
     C                     MOVEL*BLANKS   XCOPTC
     C                     MOVEL*BLANKS   XCOPTD
     C                     MOVEAINS03     *IN
     C                     MOVE '0'       *IN65
     C                     MOVEA*IN       INSAV1
     C                     Z-ADDWCNTR     WGETR
     C           WGETR     DOWLTWLCNTR
     C                     ADD  1         RRN03            INCREMENT RRN
     C                     WRITESCR005S1               90
     C                     ADD  1         XRN03            Incr NEXT RRN
     C                     ADD  1         WGETR            INCREMENT CNTR
     C                     END
     C           NXTRRN    IFGT 0
     C           NXTRRN    CHAINSCR005S1             90
     C                     MOVEAINSAV1    *IN
     C                     UPDATSCR005S1               90
     C                     MOVEAINS03     *IN
     C                     END
     C           RRN03     IFGT SRN03
     C                     Z-ADDSRN03     RRN03
     C                     END
     C                     EXSR S044                       CHK EOF
     C*
     C           $S05BK    ENDSR
     C/EJECT
     C*****************************************************************
     C* S05EDT - SCRN SUB
     C*****************************************************************
     C           S05EDT    BEGSR
     C*
     C* ** Process Maintenance on Detail Panel (MB)
     C* **   1. Check for any selected records, If record
     C* **      selected, display detail panel.
     C* UPDFLG = 0
     C                     Z-ADD*ZERO     UPDFLG
     C* I05 = 0
     C                     Z-ADD*ZERO     Z8
     C* DOBLK D.MENU
     C*
     C                     Z-ADDRRN03     SRN03            Save RRN
     C                     Z-ADD1         RRN03            INIT RRN
     C                     MOVEA'00'      *IN,90
     C                     MOVEA*IN       INS03
     C                     Z-ADD*ZERO     SWEXBL
     C           *IN90     DOUEQ'1'
     C           *IN91     OREQ '1'
     C           *IN64     OREQ '0'
     C           SWEXBL    ORNE *ZERO
     C                     READCSCR005S1               9190
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C                     MOVEAINSAV1    *IN
     C                     MOVE '1'       *IN65
     C                     MOVEA'0'       *IN,1
     C                     MOVEA'1'       *IN,3
     C* I05 = I05+1
     C           Z8        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z8
     C*                                                               *
     C* ** display detail screen
     C* IF (FL0003=2)|(FL0003=4)|(FL0003=5)
     C           FL0003    IFEQ 2
     C           FL0003    OREQ 4
     C           FL0003    OREQ 5
     C* MODE = FL0003
     C                     Z-ADDFL0003    MODE
     C* ** set keys from hidden key arrays.
     C* MCUSER = A004(I05)
     C                     MOVE A06,Z8    WCUSER
     C* MCMNUC = A005(I05)
     C                     MOVE A07,Z8    WCMNUC
     C* MCOPTC = A006(I05)
     C                     MOVE A08,Z8    XCOPTC
     C* ** Get record and any secondary records.
     C* GETREC D.MENU,F.MNUOPT,*EQ,MCUSER,MCMNUC,MCOPTC
     C*
     C                     EXSR S045
     C* ** Display Screen.
     C* EXSCR SC0006
     C                     ADD  1         SP
     C                     MOVEL'SC0005  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN04
     C                     UPDATSCR005S1               90
     C                     EXSR S006
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S05ED
     C                     END
     C           RRN03     CHAINSCR005S1             9091
     C                     MOVEAIN04      *IN
     C                     MOVE '1'       *IN79
     C* FL0003 = 0
     C                     Z-ADD*ZERO     FL0003
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* END                                                           *
     C                     END
     C* ** Process any optional action codes.
     C*    1. Set keys from hidden key arrays.
     C*    2. Get record and any secondary records.
     C*    3. Display Screen.
     C*                                                               *
     C* IF FL0003=06
     C           FL0003    IFEQ 06
     C* MODE = FL0003
     C                     Z-ADDFL0003    MODE
     C* MCUSER = A004(I05)
     C                     MOVE A06,Z8    WCUSER
     C* MCMNUC = A005(I05)
     C                     MOVE A07,Z8    WCMNUC
     C* MCOPTC = A006(I05)
     C                     MOVE A08,Z8    XCOPTC
     C* SVK006 = A006(I05)
     C                     MOVE A08,Z8    SVK006
     C* GETREC D.MENU,F.MNUOPT,*EQ,MCUSER,MCMNUC,MCOPTC
     C*
     C                     EXSR S045
     C* EXSCR SC0007
     C                     ADD  1         SP
     C                     MOVEL'SC0005  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN04
     C                     UPDATSCR005S1               90
     C                     EXSR S007
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S05ED
     C                     END
     C           RRN03     CHAINSCR005S1             9091
     C                     MOVEAIN04      *IN
     C                     MOVE '1'       *IN79
     C* FL0003 = 0
     C                     Z-ADD*ZERO     FL0003
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* END                                                           *
     C                     END
     C*                                                               *
     C*                                                               *
     C* ** If the action choice is not
     C* ** one of the allowed values,
     C* ** display error message.
     C* IF (FL0003<>0)&(UPDFLG=0)
     C           FL0003    IFNE *ZERO
     C           UPDFLG    ANDEQ*ZERO
     C* DSPERR FL0003,'Invalid action choice'
     C                     MOVELC0008     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'FL0003  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0005  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     MOVEA'00'      *IN,90
     C                     MOVEA*IN       INSAV1
     C                     UPDATSCR005S1               90
     C                     MOVEA'0'       *IN,1
     C                     MOVEA'1'       *IN,3
     C                     END
     C                     END
     C*
     C                     Z-ADDSRN03     RRN03
     C                     MOVEAINS03     *IN
     C*
     C*
     C*
     C           $S05ED    ENDSR
     C/EJECT
     C*****************************************************************
     C* S05FWD - SCRN SUB
     C*****************************************************************
     C           S05FWD    BEGSR
     C*
     C* *** Scroll information forward
     C*                                                               *
     C* C05 = 0
     C                     Z-ADD*ZERO     Z3
     C* A004 = ' '
     C                     MOVEA*BLANKS   A06
     C* A005 = ' '
     C                     MOVEA*BLANKS   A07
     C* A006 = ' '
     C                     MOVEA*BLANKS   A08
     C* FLDATR fl0003,*pr,*nd
     C                     MOVE 'X'       #PR
     C                     MOVE 'X'       #ND
     C                     MOVEL'FL0003  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0005  'FLDSCR
     C                     EXSR SATRIB
     C* GETBLK D.MENU,F.MNUOPT,*NE,SVK004,SVK005
     C*
     C*
     C                     MOVEL*BLANK    KCUS01
     C                     MOVELSVK004    KCUS01
     C                     MOVEL*BLANK    KCMN02
     C                     MOVELSVK005    KCMN02
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADD9         WLCNTR           INIT LOOP CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Initialize subfile    SCR005S1
     C*          ---------------------------------------------------------------
     C                     MOVEA'0000'    *IN,63           SFLCLR,DSP,NXTCHG,INZ
     C                     WRITESCR005C1                   CLEAR SUBFILE
     C                     Z-ADD0         RRN03
     C*
     C                     Z-ADD1         XRN03            Init Next RRN
     C                     Z-ADDXRN03     SRN03
     C                     MOVEA'1110'    *IN,63           DSP,DSPCTL,NXTCHG
     C                     MOVEA*IN       INS03
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD05    DOUNE'Y'                        RD.SW.MNUOPT    MNUPG
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     Z-ADD*ZEROS    FL0003
     C                     MOVEL*BLANKS   XCOPTC
     C                     MOVEL*BLANKS   XCOPTD
     C                     Z-ADD5         WFILE#           SET FILE#
     C           K0009     READEMNUOPT              N  9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     Z-ADD*ZERO     HRC05            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     END
     C*
     C           SWRD05    IFEQ 'Y'                        RD.SW.MNUOPT    MNUPG
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C* FLDATR fl0003,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'FL0003  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0005  'FLDSCR
     C                     EXSR SATRIB
     C* C05 = C05+1
     C           Z3        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z3
     C* A004(C05) = MCUSER
     C                     MOVE *BLANKS   A06,Z3
     C                     MOVE WCUSER    A06,Z3
     C* A005(C05) = MCMNUC
     C                     MOVE *BLANKS   A07,Z3
     C                     MOVE WCMNUC    A07,Z3
     C* A006(C05) = MCOPTC
     C                     MOVE *BLANKS   A08,Z3
     C                     MOVE XCOPTC    A08,Z3
     C* ENDBLK                                                        *
     C           SWEXBL    IFEQ *ZERO
     C           SWSKPR    ANDEQ*ZERO
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     Z-ADDWCNTR     WRRN03
     C                     MOVEA*IN       INSAV1
     C                     ADD  1         RRN03            INCREMENT RRN
     C                     WRITESCR005S1               90
     C                     ADD  1         XRN03            Incr NEXT RRN
     C                     END
     C                     END
     C                     END
     C                     Z-ADDRRN03     NXTRRN
     C                     Z-ADD*ZEROS    FL0003
     C                     MOVEL*BLANKS   XCOPTC
     C                     MOVEL*BLANKS   XCOPTD
     C                     MOVEAINS03     *IN
     C                     MOVE '0'       *IN65
     C                     MOVEA*IN       INSAV1
     C                     Z-ADDWCNTR     WGETR
     C           WGETR     DOWLTWLCNTR
     C                     ADD  1         RRN03            INCREMENT RRN
     C                     WRITESCR005S1               90
     C                     ADD  1         XRN03            Incr NEXT RRN
     C                     ADD  1         WGETR            INCREMENT CNTR
     C                     END
     C           NXTRRN    IFGT 0
     C           NXTRRN    CHAINSCR005S1             90
     C                     MOVEAINSAV1    *IN
     C                     UPDATSCR005S1               90
     C                     MOVEAINS03     *IN
     C                     END
     C           RRN03     IFGT SRN03
     C                     Z-ADDSRN03     RRN03
     C                     END
     C                     EXSR S044                       RESET FP
     C* IF c05 = 0
     C           Z3        IFEQ *ZERO
     C* EXSUBR s05bkw
     C                     EXSR S05BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S05FW
     C                     END
     C* END                                                           *
     C                     END
     C*
     C           $S05FW    ENDSR
     C/EJECT
     C*****************************************************************
     C* S07BKW - SCRN SUB
     C*****************************************************************
     C           S07BKW    BEGSR
     C*
     C* ***  Scroll information backward
     C*                                                               *
     C* C07 = 0
     C                     Z-ADD*ZERO     C07
     C* GRPATR grpdel,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'GRPDEL  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR fl0004,*pr
     C                     MOVE 'X'       #PR
     C                     MOVEL'FL0004  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR mdseqn,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'XDSEQN  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR mdtext,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'XDTEXT  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* IF delete = 'Y'
     C           DELETE    IFEQ 'Y'
     C* FLDATR mdseqn,*pr
     C                     MOVE 'X'       #PR
     C                     MOVEL'XDSEQN  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR mdtext,*pr
     C                     MOVE 'X'       #PR
     C                     MOVEL'XDTEXT  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* ELSE                                                          *
     C                     ELSE
     C* GRPATR grpdel,*nd
     C                     MOVE 'X'       #ND
     C                     MOVEL'GRPDEL  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR mdtext,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'XDTEXT  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* IF enter = 'Y'
     C           ENTER     IFEQ 'Y'
     C* FLDATR mdseqn,*pr
     C                     MOVE 'X'       #PR
     C                     MOVEL'XDSEQN  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* ELSE                                                          *
     C                     ELSE
     C* FLDATR mdseqn,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'XDSEQN  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* GETBLK D.MENU,F.MNUHLP,*PV,SVK007,SVK008,*changed
     C*
     C                     EXSR S046
     C*
     C                     MOVEL*BLANK    KDMN01
     C                     MOVELSVK007    KDMN01
     C                     MOVEL*BLANK    KDOP02
     C                     MOVELSVK008    KDOP02
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADD8         WLCNTR           INIT LOOP CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Initialize subfile    SCR007S1
     C*          ---------------------------------------------------------------
     C                     MOVEA'0000'    *IN,63           SFLCLR,DSP,NXTCHG,INZ
     C                     WRITESCR007C1                   CLEAR SUBFILE
     C                     Z-ADD0         RRN04
     C*
     C                     Z-ADD1         XRN04            Init Next RRN
     C                     Z-ADDXRN04     SRN04
     C                     MOVEA'1100'    *IN,63           DSP,DSPCTL
     C                     MOVEA*IN       INS04
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD07    DOUNE'Y'                        RD.SW.MNUHLP
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     MOVEL*BLANKS   XDOPTC
     C                     MOVEL*BLANKS   XDMNUC
     C                     Z-ADD*ZEROS    FL0004
     C                     Z-ADD*ZEROS    XDSEQN
     C                     MOVEL*BLANKS   XDTEXT
     C                     Z-ADD7         WFILE#           SET FILE#
     C           K0011     READEMNUHLP                 9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD07           RD.SW.MNUHLP
     C                     Z-ADD*ZERO     HRC07            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD07           RD.SW.MNUHLP
     C                     END
     C*
     C           SWRD07    IFEQ 'Y'                        RD.SW.MNUHLP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C*
     C* IF delete = 'Y'
     C           DELETE    IFEQ 'Y'
     C* FLDATR fl0004,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'FL0004  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR fl0004,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'FL0004  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* IF c07 = 0
     C           C07       IFEQ *ZERO
     C* SVK009 = mdseqn
     C                     Z-ADDXDSEQN    SVK009
     C* END                                                           *
     C                     END
     C* C07 = 1
     C                     Z-ADD1         C07
     C* ENDBLK                                                        *
     C           SWEXBL    IFEQ *ZERO
     C           SWSKPR    ANDEQ*ZERO
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     Z-ADDWCNTR     WRRN04
     C                     MOVEA*IN       INSAV1
     C                     ADD  1         RRN04            INCREMENT RRN
     C                     WRITESCR007S1               90
     C                     ADD  1         XRN04            Incr NEXT RRN
     C                     END
     C                     END
     C                     END
     C                     Z-ADDRRN04     NXTRRN
     C                     MOVEL*BLANKS   XDOPTC
     C                     MOVEL*BLANKS   XDMNUC
     C                     Z-ADD*ZEROS    FL0004
     C                     Z-ADD*ZEROS    XDSEQN
     C                     MOVEL*BLANKS   XDTEXT
     C                     MOVEAINS04     *IN
     C                     MOVE '0'       *IN65
     C                     MOVEA*IN       INSAV1
     C                     Z-ADDWCNTR     WGETR
     C           WGETR     DOWLTWLCNTR
     C                     ADD  1         RRN04            INCREMENT RRN
     C                     WRITESCR007S1               90
     C                     ADD  1         XRN04            Incr NEXT RRN
     C                     ADD  1         WGETR            INCREMENT CNTR
     C                     END
     C           NXTRRN    IFGT 0
     C           NXTRRN    CHAINSCR007S1             90
     C                     MOVEAINSAV1    *IN
     C                     UPDATSCR007S1               90
     C                     MOVEAINS04     *IN
     C                     END
     C           RRN04     IFGT SRN04
     C                     Z-ADDSRN04     RRN04
     C                     END
     C                     EXSR S048                       CHK EOF
     C*
     C           $S07BK    ENDSR
     C/EJECT
     C*****************************************************************
     C* S07EDT - SCRN SUB
     C*****************************************************************
     C           S07EDT    BEGSR
     C*
     C* **   Process Maintenance List Panel (ML)
     C* **   1. Check for any selected records,
     C* UPDFLG = 0
     C                     Z-ADD*ZERO     UPDFLG
     C* DOBLK D.MENU
     C*
     C                     Z-ADDRRN04     SRN04            Save RRN
     C                     Z-ADD1         RRN04            INIT RRN
     C                     MOVEA'00'      *IN,90
     C                     MOVEA*IN       INS04
     C                     Z-ADD*ZERO     SWEXBL
     C           *IN90     DOUEQ'1'
     C           *IN91     OREQ '1'
     C           *IN64     OREQ '0'
     C           SWEXBL    ORNE *ZERO
     C                     READCSCR007S1               9190
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C                     MOVEAINSAV1    *IN
     C                     MOVE '1'       *IN65
     C                     MOVEA'0'       *IN,1
     C*                                                               *
     C* IF delete = 'Y'
     C           DELETE    IFEQ 'Y'
     C* IF FL0004=4
     C           FL0004    IFEQ 4
     C* DELETE D.MENU,F.MNUHLP
     C*
     C                     EXSR S049
     C* FL0004 = 0
     C                     Z-ADD*ZERO     FL0004
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ELSE  ; delete = 'N'
     C                     ELSE
     C* UPDFLG = 1
     C                     Z-ADD1         UPDFLG
     C* SETLL D.MENU,F.MNUHLP,mdmnuc,mdoptc,mdseqn
     C*
     C                     EXSR S050
     C* IF %sts(D.menu,f.mnuhlp)=*yes
     C*  Status of last file I/O
     C           STS07     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* UPDATE D.menu,F.mnuhlp
     C*
     C                     EXSR S051
     C* ELSE                                                          *
     C                     ELSE
     C* WKSEQN = mdseqn
     C                     Z-ADDXDSEQN    WKSEQN
     C* MDMNUC = mcmnuc
     C                     MOVE WCMNUC    XDMNUC
     C* MDOPTC = mcoptc
     C                     MOVE XCOPTC    XDOPTC
     C* WRITE D.menu,f.mnuhlp
     C*
     C                     EXSR S052
     C* If sequence number entered use it
     C* IF wkseqn <> 0
     C           WKSEQN    IFNE *ZERO
     C* GETREC D.MENU,F.MNUHLP,*eq,mdmnuc,mdoptc,mdseqn
     C*
     C                     EXSR S053
     C* MDSEQN = wkseqn
     C                     Z-ADDWKSEQN    XDSEQN
     C* UPDATE D.menu,f.mnuhlp
     C*
     C                     EXSR S051
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ** If the action choice is not
     C* ** one of the allowed values,
     C* ** display error message.
     C* IF (FL0004<>0)&(UPDFLG=0)
     C           FL0004    IFNE *ZERO
     C           UPDFLG    ANDEQ*ZERO
     C* DSPERR FL0004,'Invalid action choice'
     C                     MOVELC0008     MSGDTA
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'FL0004  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     MOVEA'00'      *IN,90
     C                     MOVEA*IN       INSAV1
     C                     UPDATSCR007S1               90
     C                     MOVEA'0'       *IN,1
     C                     END
     C                     END
     C*
     C                     Z-ADDSRN04     RRN04
     C                     MOVEAINS04     *IN
     C*
     C*
     C*
     C           $S07ED    ENDSR
     C/EJECT
     C*****************************************************************
     C* S07FWD - SCRN SUB
     C*****************************************************************
     C           S07FWD    BEGSR
     C*
     C* ***  Scroll information forwards
     C*                                                               *
     C* FIRST = 'Y'
     C                     MOVE 'Y'       FIRST
     C* TAG :start
     C           START     TAG
     C* C07 = 0
     C                     Z-ADD*ZERO     C07
     C* GRPATR grpdel,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'GRPDEL  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR fl0004,*pr
     C                     MOVE 'X'       #PR
     C                     MOVEL'FL0004  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR mdseqn,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'XDSEQN  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR mdtext,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'XDTEXT  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* IF delete = 'Y'
     C           DELETE    IFEQ 'Y'
     C* FLDATR mdseqn,*pr
     C                     MOVE 'X'       #PR
     C                     MOVEL'XDSEQN  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR mdtext,*pr
     C                     MOVE 'X'       #PR
     C                     MOVEL'XDTEXT  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* ELSE                                                          *
     C                     ELSE
     C* GRPATR grpdel,*nd
     C                     MOVE 'X'       #ND
     C                     MOVEL'GRPDEL  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR mdtext,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'XDTEXT  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* IF enter = 'Y'
     C           ENTER     IFEQ 'Y'
     C* FLDATR mdseqn,*pr
     C                     MOVE 'X'       #PR
     C                     MOVEL'XDSEQN  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* ELSE                                                          *
     C                     ELSE
     C* FLDATR mdseqn,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'XDSEQN  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* GETBLK D.MENU,F.MNUHLP,*ne,SVK007,SVK008,*changed
     C*
     C*
     C                     MOVEL*BLANK    KDMN01
     C                     MOVELSVK007    KDMN01
     C                     MOVEL*BLANK    KDOP02
     C                     MOVELSVK008    KDOP02
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADD8         WLCNTR           INIT LOOP CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Initialize subfile    SCR007S1
     C*          ---------------------------------------------------------------
     C                     MOVEA'0000'    *IN,63           SFLCLR,DSP,NXTCHG,INZ
     C                     WRITESCR007C1                   CLEAR SUBFILE
     C                     Z-ADD0         RRN04
     C*
     C                     Z-ADD1         XRN04            Init Next RRN
     C                     Z-ADDXRN04     SRN04
     C                     MOVEA'1100'    *IN,63           DSP,DSPCTL
     C                     MOVEA*IN       INS04
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD07    DOUNE'Y'                        RD.SW.MNUHLP
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     MOVEL*BLANKS   XDOPTC
     C                     MOVEL*BLANKS   XDMNUC
     C                     Z-ADD*ZEROS    FL0004
     C                     Z-ADD*ZEROS    XDSEQN
     C                     MOVEL*BLANKS   XDTEXT
     C                     Z-ADD7         WFILE#           SET FILE#
     C           K0011     READEMNUHLP                 9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD07           RD.SW.MNUHLP
     C                     Z-ADD*ZERO     HRC07            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD07           RD.SW.MNUHLP
     C                     END
     C*
     C           SWRD07    IFEQ 'Y'                        RD.SW.MNUHLP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C* IF delete = 'Y'
     C           DELETE    IFEQ 'Y'
     C* FLDATR fl0004,*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'FL0004  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR fl0004,*ul
     C                     MOVE 'X'       #UL
     C                     MOVEL'FL0004  'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0007  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* IF c07 = 0
     C           C07       IFEQ *ZERO
     C* SVK009 = mdseqn
     C                     Z-ADDXDSEQN    SVK009
     C* END                                                           *
     C                     END
     C* C07 = c07 + 1
     C           C07       ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    C07
     C* WKSEQN = mdseqn
     C                     Z-ADDXDSEQN    WKSEQN
     C* ENDBLK                                                        *
     C           SWEXBL    IFEQ *ZERO
     C           SWSKPR    ANDEQ*ZERO
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     Z-ADDWCNTR     WRRN04
     C                     MOVEA*IN       INSAV1
     C                     ADD  1         RRN04            INCREMENT RRN
     C                     WRITESCR007S1               90
     C                     ADD  1         XRN04            Incr NEXT RRN
     C                     END
     C                     END
     C                     END
     C                     Z-ADDRRN04     NXTRRN
     C                     MOVEL*BLANKS   XDOPTC
     C                     MOVEL*BLANKS   XDMNUC
     C                     Z-ADD*ZEROS    FL0004
     C                     Z-ADD*ZEROS    XDSEQN
     C                     MOVEL*BLANKS   XDTEXT
     C                     MOVEAINS04     *IN
     C                     MOVE '0'       *IN65
     C                     MOVEA*IN       INSAV1
     C                     Z-ADDWCNTR     WGETR
     C           WGETR     DOWLTWLCNTR
     C                     ADD  1         RRN04            INCREMENT RRN
     C                     WRITESCR007S1               90
     C                     ADD  1         XRN04            Incr NEXT RRN
     C                     ADD  1         WGETR            INCREMENT CNTR
     C                     END
     C           NXTRRN    IFGT 0
     C           NXTRRN    CHAINSCR007S1             90
     C                     MOVEAINSAV1    *IN
     C                     UPDATSCR007S1               90
     C                     MOVEAINS04     *IN
     C                     END
     C           RRN04     IFGT SRN04
     C                     Z-ADDSRN04     RRN04
     C                     END
     C                     EXSR S048                       RESET FP
     C* *** Scroll information forward
     C*                                                               *
     C* IF C07 = 0 & first = 'Y'
     C           C07       IFEQ *ZERO
     C           FIRST     ANDEQ'Y'
     C* SETLL D.MENU,F.MNUHLP,SVK007,SVK008,wkseqn
     C*
     C                     EXSR S054
     C* FIRST = 'N'
     C                     MOVE 'N'       FIRST
     C* GOTO :start
     C                     GOTO START
     C* END                                                           *
     C                     END
     C*
     C           $S07FW    ENDSR
     C/EJECT
     C*****************************************************************
     C* S08ABR - SCRN SUB
     C*****************************************************************
     C           S08ABR    BEGSR
     C*
     C* ** Array backwards read.
     C* C08 = 0
     C                     Z-ADD*ZERO     Z4
     C* ** Set pointer to first record on screen.
     C* SETLL D.MENU,F.MNUUSR1,SVK08
     C*
     C                     EXSR S055
     C* ** Read backwards until number
     C* ** elements reached, or beginning
     C* ** of file.
     C* GETREC D.MENU,F.MNUUSR1,*PV,
     C*
     C                     EXSR S056
     C* DOW (C08<S08CNT)&%STS(D.MENU,F.MNUUSR1)=*YES
     C           Z4        IFLT S08CNT
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C*  Status of last file I/O
     C           STS03     IFEQ *ZERO
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C           RN0006    IFEQ XYES
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C           NRSLT0    IFEQ 1
     C           RN0006    ANDEQ1
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C                     Z-ADDNRSLT0    RSLT01
     C           RSLT01    DOWEQ1
     C* C08 = C08+1
     C           Z4        ADD  1         RN0006
     C                     Z-ADDRN0006    Z4
     C* GETREC D.MENU,F.MNUUSR1,*PV,
     C*
     C                     EXSR S056
     C* END                                                           *
     C           Z4        IFLT S08CNT
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C*  Status of last file I/O
     C           STS03     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           RN0006    IFEQ 1
     C           NRSLT0    ANDEQ1
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C                     Z-ADDRN0006    RSLT01
     C                     END
     C* ** Load arrays from this point.
     C* EXSUBR S08ALD
     C                     EXSR S08ALD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S08AB
     C                     END
     C*
     C           $S08AB    ENDSR
     C/EJECT
     C*****************************************************************
     C* S08AFR - SCRN SUB
     C*****************************************************************
     C           S08AFR    BEGSR
     C*
     C* ** Set pointer to last record on screen.
     C* SETLL D.MENU,F.MNUUSR1,SVK08
     C*
     C                     EXSR S055
     C* ** Load arrays from this point.
     C* EXSUBR S08ALD
     C                     EXSR S08ALD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S08AF
     C                     END
     C*
     C           $S08AF    ENDSR
     C/EJECT
     C*****************************************************************
     C* S08ALD - SCRN SUB
     C*****************************************************************
     C           S08ALD    BEGSR
     C*
     C* ** load arrays from file
     C* ** clear arrays
     C* T01 = 0
     C                     Z-ADD*ZERO     T01
     C* B01 = ' '
     C                     MOVEA*BLANKS   B01
     C* T02 = ' '
     C                     MOVEA*BLANKS   T02
     C* T03 = ' '
     C                     MOVEA*BLANKS   T03
     C* C08 = 0
     C                     Z-ADD*ZERO     Z4
     C* ** protect select field
     C* DOW C08<S08CNT
     C           Z4        DOWLTS08CNT
     C* C08 = C08+1
     C           Z4        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z4
     C* FLDATR T01(C08),*ND,*PR
     C                     MOVE 'X'       #ND
     C                     MOVE 'X'       #PR
     C                     MOVEL'T01     'FLDNAM
     C                     Z-ADDZ4        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0008  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* ** Read file and load to arrays.
     C* C08 = 0
     C                     Z-ADD*ZERO     Z4
     C* GETREC D.MENU,F.MNUUSR1,*NX,
     C*
     C                     EXSR S058
     C* DOW (C08<S08CNT)&%STS(D.MENU,F.MNUUSR1)=*YES
     C           Z4        IFLT S08CNT
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C*  Status of last file I/O
     C           STS03     IFEQ *ZERO
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C           RN0006    IFEQ XYES
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C           NRSLT0    IFEQ 1
     C           RN0006    ANDEQ1
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C                     Z-ADDNRSLT0    RSLT01
     C           RSLT01    DOWEQ1
     C* C08 = C08+1
     C           Z4        ADD  1         RN0006
     C                     Z-ADDRN0006    Z4
     C* ** Unprotect select field.
     C* FLDATR T01(C08),*DS
     C                     MOVE 'X'       #DS
     C                     MOVEL'T01     'FLDNAM
     C                     Z-ADDZ4        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0008  'FLDSCR
     C                     EXSR SATRIB
     C* ** Save field being prompted for.
     C* B01(C08) = MENU.MNUUSR1.MAUSER
     C                     MOVE *BLANKS   B01,Z4
     C                     MOVE WAUSER    B01,Z4
     C* ** load screen array.
     C* T02(C08) = MENU.MNUUSR1.MAUSER
     C                     MOVE *BLANKS   T02,Z4
     C                     MOVE WAUSER    T02,Z4
     C* T03(C08) = MENU.MNUUSR1.MASURN
     C                     MOVE *BLANKS   T03,Z4
     C                     MOVE WK0002    T03,Z4
     C* ** Save first record on screen.
     C* IF C08=1
     C           Z4        IFEQ 1
     C* FST08 = B01(C08)
     C                     MOVE B01,Z4    FST08
     C* END                                                           *
     C                     END
     C* IF C08<S08CNT
     C           Z4        IFLT S08CNT
     C* GETREC D.MENU,F.MNUUSR1,*NX,
     C*
     C                     EXSR S058
     C* END                                                           *
     C                     END
     C* END                                                           *
     C           Z4        IFLT S08CNT
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C*  Status of last file I/O
     C           STS03     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           RN0006    IFEQ 1
     C           NRSLT0    ANDEQ1
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C                     Z-ADDRN0006    RSLT01
     C                     END
     C* ** Save last record on screen.
     C* IF C08>0
     C           Z4        IFGT *ZERO
     C* LST08 = B01(C08)
     C                     MOVE B01,Z4    LST08
     C* END                                                           *
     C                     END
     C*
     C           $S08AL    ENDSR
     C/EJECT
     C*****************************************************************
     C* S10ABR - SCRN SUB
     C*****************************************************************
     C           S10ABR    BEGSR
     C*
     C* ** Array backwards read.
     C* C10 = 0
     C                     Z-ADD*ZERO     Z5
     C* ** Set pointer to first record on screen.
     C* SETLL D.MENU,F.MNUPGM,SVK10,svk11
     C*
     C                     EXSR S060
     C* ** Read backwards until number
     C* ** elements reached, or beginning
     C* ** of file.
     C* GETREC D.MENU,F.MNUPGM,*PV,
     C*
     C                     EXSR S061
     C* DOW (C10<S10CNT)&%STS(D.MENU,F.MNUPGM)=*YES
     C           Z5        IFLT S10CNT
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C*  Status of last file I/O
     C           STS06     IFEQ *ZERO
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C           RN0006    IFEQ XYES
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C           NRSLT0    IFEQ 1
     C           RN0006    ANDEQ1
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C                     Z-ADDNRSLT0    RSLT01
     C           RSLT01    DOWEQ1
     C* C10 = C10+1
     C           Z5        ADD  1         RN0006
     C                     Z-ADDRN0006    Z5
     C* GETREC D.MENU,F.MNUPGM,*PV,
     C*
     C                     EXSR S061
     C* END                                                           *
     C           Z5        IFLT S10CNT
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C*  Status of last file I/O
     C           STS06     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           RN0006    IFEQ 1
     C           NRSLT0    ANDEQ1
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C                     Z-ADDRN0006    RSLT01
     C                     END
     C* ** Load arrays from this point.
     C* EXSUBR S10ALD
     C                     EXSR S10ALD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S10AB
     C                     END
     C*
     C           $S10AB    ENDSR
     C/EJECT
     C*****************************************************************
     C* S10AFR - SCRN SUB
     C*****************************************************************
     C           S10AFR    BEGSR
     C*
     C* ** Set pointer to last record on screen.
     C* SETLL D.MENU,F.MNUPGM,SVK10,svk11
     C*
     C                     EXSR S060
     C* ** Load arrays from this point.
     C* EXSUBR S10ALD
     C                     EXSR S10ALD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S10AF
     C                     END
     C*
     C           $S10AF    ENDSR
     C/EJECT
     C*****************************************************************
     C* S10ALD - SCRN SUB
     C*****************************************************************
     C           S10ALD    BEGSR
     C*
     C* ** load arrays from file
     C* ** clear arrays
     C* T04 = 0
     C                     Z-ADD*ZERO     T04
     C* B02 = ' '
     C                     MOVEA*BLANKS   B02
     C* B03 = ' '
     C                     MOVEA*BLANKS   B03
     C* T05 = ' '
     C                     MOVEA*BLANKS   T05
     C* T06 = ' '
     C                     MOVEA*BLANKS   T06
     C* T07 = ' '
     C                     MOVEA*BLANKS   T07
     C* C10 = 0
     C                     Z-ADD*ZERO     Z5
     C* ** protect select field
     C* DOW C10<S10CNT
     C           Z5        DOWLTS10CNT
     C* C10 = C10+1
     C           Z5        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z5
     C* FLDATR T04(C10),*ND,*PR
     C                     MOVE 'X'       #ND
     C                     MOVE 'X'       #PR
     C                     MOVEL'T04     'FLDNAM
     C                     Z-ADDZ5        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0010  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* ** Read file and load to arrays.
     C* C10 = 0
     C                     Z-ADD*ZERO     Z5
     C* GETREC D.MENU,F.MNUPGM,*NX,
     C*
     C                     EXSR S063
     C* DOW (C10<S10CNT)&%STS(D.MENU,F.MNUPGM)=*YES
     C           Z5        IFLT S10CNT
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C*  Status of last file I/O
     C           STS06     IFEQ *ZERO
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C           RN0006    IFEQ XYES
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C           NRSLT0    IFEQ 1
     C           RN0006    ANDEQ1
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C                     Z-ADDNRSLT0    RSLT01
     C           RSLT01    DOWEQ1
     C* C10 = C10+1
     C           Z5        ADD  1         RN0006
     C                     Z-ADDRN0006    Z5
     C* ** Unprotect select field.
     C* FLDATR T04(C10),*DS
     C                     MOVE 'X'       #DS
     C                     MOVEL'T04     'FLDNAM
     C                     Z-ADDZ5        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0010  'FLDSCR
     C                     EXSR SATRIB
     C* ** Save field being prompted for.
     C* B02(C10) = MENU.MNUPGM.MPPGMN
     C                     MOVE *BLANKS   B02,Z5
     C                     MOVE WPPGMN    B02,Z5
     C* B03(C10) = menu.mnupgm.mpspgm
     C                     MOVE *BLANKS   B03,Z5
     C                     MOVE WPSPGM    B03,Z5
     C* ** load screen array.
     C* T05(C10) = MENU.MNUPGM.MPPGMN
     C                     MOVE *BLANKS   T05,Z5
     C                     MOVE WPPGMN    T05,Z5
     C* T06(C10) = MENU.MNUPGM.MPPGMD
     C                     MOVE *BLANKS   T06,Z5
     C                     MOVE WPPGMD    T06,Z5
     C* T07(C10) = menu.mnupgm.mpspgm
     C                     MOVE *BLANKS   T07,Z5
     C                     MOVE WPSPGM    T07,Z5
     C* ** Save first record on screen.
     C* IF C10=1
     C           Z5        IFEQ 1
     C* FST10 = B02(C10)
     C                     MOVE B02,Z5    FST10
     C* FST11 = B03(C10)
     C                     MOVE B03,Z5    FST11
     C* END                                                           *
     C                     END
     C* IF C10<S10CNT
     C           Z5        IFLT S10CNT
     C* GETREC D.MENU,F.MNUPGM,*NX,
     C*
     C                     EXSR S063
     C* END                                                           *
     C                     END
     C* END                                                           *
     C           Z5        IFLT S10CNT
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C*  Status of last file I/O
     C           STS06     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           RN0006    IFEQ 1
     C           NRSLT0    ANDEQ1
     C                     Z-ADD1         RN0006
     C                     ELSE
     C                     Z-ADD0         RN0006
     C                     END
     C                     Z-ADDRN0006    RSLT01
     C                     END
     C* ** Save last record on screen.
     C* IF C10>0
     C           Z5        IFGT *ZERO
     C* LST10 = B02(C10)
     C                     MOVE B02,Z5    LST10
     C* LST11 = B03(C10)
     C                     MOVE B03,Z5    LST11
     C* END                                                           *
     C                     END
     C*
     C           $S10AL    ENDSR
     C/EJECT
     C*****************************************************************
     C* SCON - Concatenates two character strings
     C*        by appending the second string to the end of the
     C*        first string, leaving blank spaces between two
     C*        strings specified by the third argument.
     C*
     C* FUNCTION:    CONCATENATE (ALPHA1, ALPHA2, NUMERIC)
     C*****************************************************************
     C           SCON      BEGSR
     C*
     C                     Z-ADDNARG3     C1
     C                     MOVE *BLANK    ARSLT
     C           AARG1     CAT  AARG2:C1  ARSLT
     C*
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SMSG - calls message handling program to either clear, add, or
     C*        remove messages from message subfile or extracts
     C*        messages from message files.
     C*****************************************************************
     C           SMSG      BEGSR
     C*
     C* Add message to message subfile
     C*
     C           MSGACT    IFEQ 'A'
     C           MSGACT    OREQ 'R'
     C                     MOVE 'Y'       MSGFLG
     C                     ELSE
     C* Clear message subfile or extract message from message file.
     C*
     C           MSGACT    IFEQ 'C'
     C           MSGACT    OREQ 'E'
     C                     MOVE 'N'       MSGFLG
     C                     END
     C                     END
     C*
     C           MSGACT    IFEQ 'C'
     C           MSGACT    OREQ 'A'
     C           MSGACT    OREQ 'E'
     C                     CALL 'CLMSG'   PMSGCL
     C                     MOVE *BLANK    MSGID
     C                     MOVE *BLANK    MSGF
     C                     MOVE *BLANK    MSGFL
     C* Do not clear the message data field if message is extracted
     C* from message file
     C           MSGACT    IFNE 'E'
     C                     MOVE *BLANK    MSGDTA
     C                     END
     C                     END
     C*
     C                     ENDSR
     C/EJECT
     C**************************************************************************
     C* S011   - SETLL D.MENU,F.MNUUSR,SVK001
     C**************************************************************************
     C           S011      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     MOVE 'N'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     MOVE 'N'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     MOVE 'N'       SWRD06           RD.SW.MNUPGM    MNUHL
     C                     MOVE 'N'       SWRD07           RD.SW.MNUHLP
     C*
     C                     MOVELSVK001    KAUS01
     C                     MOVELSVK001    HAUSER           User
     C                     MOVELSVK001    MAUSER           User
     C*
     C           K0001     SETLLMNUUSR                   90
     C           *IN90     IFEQ '0'                        REC NOT MATCH
     C                     Z-ADD12        STS01            SYMUL NOT FND
     C                     END                             *IN90=0
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S012   - GETREC D.MENU,F.MNUUSR,*lock,*eq,SVK001
     C**************************************************************************
     C           S012      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAUS01
     C                     MOVELSVK001    KAUS01
     C           K0001     CHAINMNUUSR               9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C*
     C           *IN91     IFEQ '1'                        RCK LOCK
     C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
     C                     END
     C*
     C                     MOVE 'N'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     Z-ADD*ZERO     HRC01            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S013   - GETREC D.MENU,F.MNUUSR1,*eq,MAGUSER
     C**************************************************************************
     C           S013      BEGSR
     C                     Z-ADD3         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAUS01
     C                     MOVELWK0001    KAUS01
     C           K0001     CHAINMNUUSR1              9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     Z-ADD*ZERO     HRC03            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S014   - GETREC D.MENU,F.MNUUSR,*eq,SVK001
     C**************************************************************************
     C           S014      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAUS01
     C                     MOVELSVK001    KAUS01
     C           K0001     CHAINMNUUSR              N9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     Z-ADD*ZERO     HRC01            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S015   - DELETE D.MENU,F.MNUUSR,F.MNUHED,F.MNUOPT
     C**************************************************************************
     C           S015      BEGSR
     C                     MOVEA'00'      *IN,90
     C                     MOVE *HIVAL    SVS01
     C                     MOVEL*BLANK    KAUS01
     C                     MOVELXAUSER    KAUS01
     C           K0001     SETLLMNUUSR                     SETLL  MNUUSR
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Delete Record - MNUUSR
     C*          ---------------------------------------------------------------
     C           *IN90     DOUEQ'1'
     C           *IN91     OREQ '1'
     C*
     C                     Z-ADD1         WFILE#           SET FILE#
     C           K0001     READEMNUUSR                 9190READE  MNUUSR
     C*
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C                     MOVE *HIVAL    SVS04
     C                     MOVEL*BLANK    KAGU01
     C                     MOVELMAUSER    KAGU01
     C           K0002     SETLLMNUHED                     SETLL  MNUHED
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Delete Record - MNUHED
     C*          ---------------------------------------------------------------
     C           *IN90     DOUEQ'1'
     C           *IN91     OREQ '1'
     C*
     C                     Z-ADD4         WFILE#           SET FILE#
     C           K0002     READEMNUHED                 9190READE  MNUHED
     C*
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C                     MOVE *HIVAL    SVS05
     C                     MOVEL*BLANK    KAGU01
     C                     MOVELMBUSER    KAGU01
     C                     MOVEL*BLANK    KBMN02
     C                     MOVELMBMNUC    KBMN02
     C           K0003     SETLLMNUOPT                     SETLL  MNUOPT
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Delete Record - MNUOPT
     C*          ---------------------------------------------------------------
     C           *IN90     DOUEQ'1'
     C           *IN91     OREQ '1'
     C*
     C                     Z-ADD5         WFILE#           SET FILE#
     C           K0003     READEMNUOPT                 9190READE  MNUOPT
     C*
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C                     DELETMNUOPT                 91  DELETE MNUOPT
     C                     Z-ADDSTS05     SVS05            SAVE FILE STS
     C*          ---------------------------------------------------------------
     C*          | Send Message To Indicate Delete Status
     C*          ---------------------------------------------------------------
     C*
     C                     ELSE                            ELSE-READ-FILE
     C           *IN90     IFEQ '1'                        NO RCD FOUND
     C                     ELSE
     C                     MOVE 'Y'       MSGFLG           SET ON ERROR FLAG
     C                     END                             READ KEY FILE FAIL
     C*
     C                     END                             END-READ KEY FILE
     C                     END                             EMD-DOUNE LOOP
     C                     MOVEA'00'      *IN,90
     C                     DELETMNUHED                 91  DELETE MNUHED
     C                     Z-ADDSTS04     SVS04            SAVE FILE STS
     C*          ---------------------------------------------------------------
     C*          | Send Message To Indicate Delete Status
     C*          ---------------------------------------------------------------
     C*
     C                     ELSE                            ELSE-READ-FILE
     C           *IN90     IFEQ '1'                        NO RCD FOUND
     C                     ELSE
     C                     MOVE 'Y'       MSGFLG           SET ON ERROR FLAG
     C                     END                             READ KEY FILE FAIL
     C*
     C                     END                             END-READ KEY FILE
     C                     END                             EMD-DOUNE LOOP
     C                     MOVEA'00'      *IN,90
     C                     DELETMNUUSR                 91  DELETE MNUUSR
     C                     Z-ADDSTS01     SVS01            SAVE FILE STS
     C*          ---------------------------------------------------------------
     C*          | Send Message To Indicate Delete Status
     C*          ---------------------------------------------------------------
     C*
     C                     ELSE                            ELSE-READ-FILE
     C           *IN90     IFEQ '1'                        NO RCD FOUND
     C                     ELSE
     C                     MOVE 'Y'       MSGFLG           SET ON ERROR FLAG
     C                     END                             READ KEY FILE FAIL
     C*
     C                     END                             END-READ KEY FILE
     C                     END                             EMD-DOUNE LOOP
     C                     MOVEA'00'      *IN,90
     C*
     C           K0001     SETLLMNUUSR                     RESUME FILE POINTER
     C                     Z-ADDSVS01     STS01            RESTORE FILE STS
     C*
     C           K0002     SETLLMNUHED                     RESUME FILE POINTER
     C                     Z-ADDSVS04     STS04            RESTORE FILE STS
     C*
     C           K0003     SETLLMNUOPT                     RESUME FILE POINTER
     C                     Z-ADDSVS05     STS05            RESTORE FILE STS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S016   - UPDATE D.MENU,F.MNUUSR
     C**************************************************************************
     C           S016      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAUS01           User
     C                     MOVELHAUSER    KAUS01
     C           K0001     CHAINMNUUSR               9091  CHAIN  MNUUSR
     C*
     C           *IN91     IFEQ '1'                        RCK LOCK
     C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
     C                     END
     C*
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C           MACHG     IFEQ XACHG
     C           MADFV1    ANDEQXADFV1
     C           MADFV2    ANDEQXADFV2
     C           MADFV3    ANDEQXADFV3
     C           MAFORN    ANDEQXAFORN
     C           RN0003    ANDEQWK0001
     C           MASURN    ANDEQXASURN
     C           MAUSER    ANDEQXAUSER
     C                     UNLCKMNUUSR                 91  RLS LCK MNUUSR
     C                     ELSE
     C                     EXSR SMVTOF                     MOVE FLD TO FILE
     C                     UPDATMNUUSRF                90  UPDATE MNUUSR
     C           *IN90     IFEQ '0'                        REC UPDATED
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END                             END-UPDATE STATUS
     C                     END                             END-FLD COMPARE
     C*
     C*
     C                     ELSE
     C                     END                             END-STATUS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S017   - WRITE D.MENU,F.MNUUSR
     C**************************************************************************
     C           S017      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     MOVEL*BLANKS   MAACTA           Add
     C                     MOVEL*BLANKS   MAACTD           Delete
     C                     MOVEL*BLANKS   MAACTR           Revise
     C                     EXSR SMVTOF                     MOVE FLD TO FILE
     C                     WRITEMNUUSRF                90  ADD REC TO MNUUSR
     C*
     C           *IN90     IFEQ *ZERO                      RECORD ADDED
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     ELSE
     C                     END                             END-STATUS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S018   - SETLL D.MENU,F.MNUHED,SVK002,SVK003
     C**************************************************************************
     C           S018      BEGSR
     C                     Z-ADD3         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     MOVE 'N'       SWRD06           RD.SW.MNUPGM    MNUHL
     C                     MOVE 'N'       SWRD07           RD.SW.MNUHLP
     C                     MOVEL*LOVAL    HBMNUC           Menu
     C*
     C                     MOVELSVK002    KAGU01
     C                     MOVELSVK002    HBUSER           User
     C                     MOVELSVK002    MBUSER           User
     C                     MOVELSVK003    KBMN02
     C                     MOVELSVK003    HBMNUC           Menu
     C                     MOVELSVK003    MBMNUC           Menu
     C*
     C           K0003     SETLLMNUHED                   90
     C           *IN90     IFEQ '0'                        REC NOT MATCH
     C                     Z-ADD12        STS04            SYMUL NOT FND
     C                     END                             *IN90=0
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S019   - GETREC D.MENU,F.MNUHED,*lock,*eq,SVK002,SVK003
     C**************************************************************************
     C           S019      BEGSR
     C                     Z-ADD4         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAGU01
     C                     MOVELSVK002    KAGU01
     C                     MOVEL*BLANK    KBMN02
     C                     MOVELSVK003    KBMN02
     C           K0003     CHAINMNUHED               9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C*
     C           *IN91     IFEQ '1'                        RCK LOCK
     C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
     C                     END
     C*
     C                     MOVE 'N'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     Z-ADD*ZERO     HRC04            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S020   - GETREC D.MENU,F.MNUHED,*eq,SVK002,SVK003
     C**************************************************************************
     C           S020      BEGSR
     C                     Z-ADD4         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAGU01
     C                     MOVELSVK002    KAGU01
     C                     MOVEL*BLANK    KBMN02
     C                     MOVELSVK003    KBMN02
     C           K0003     CHAINMNUHED              N9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     Z-ADD*ZERO     HRC04            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S021   - DELETE D.MENU,F.MNUHED,F.MNUOPT
     C**************************************************************************
     C           S021      BEGSR
     C                     MOVEA'00'      *IN,90
     C                     MOVE *HIVAL    SVS04
     C                     MOVEL*BLANK    KAGU01
     C                     MOVELWBUSER    KAGU01
     C                     MOVEL*BLANK    KBMN02
     C                     MOVELXBMNUC    KBMN02
     C           K0003     SETLLMNUHED                     SETLL  MNUHED
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Delete Record - MNUHED
     C*          ---------------------------------------------------------------
     C           *IN90     DOUEQ'1'
     C           *IN91     OREQ '1'
     C*
     C                     Z-ADD4         WFILE#           SET FILE#
     C           K0003     READEMNUHED                 9190READE  MNUHED
     C*
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C                     MOVE *HIVAL    SVS05
     C                     MOVEL*BLANK    KAGU01
     C                     MOVELMBUSER    KAGU01
     C                     MOVEL*BLANK    KBMN02
     C                     MOVELMBMNUC    KBMN02
     C           K0003     SETLLMNUOPT                     SETLL  MNUOPT
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Delete Record - MNUOPT
     C*          ---------------------------------------------------------------
     C           *IN90     DOUEQ'1'
     C           *IN91     OREQ '1'
     C*
     C                     Z-ADD5         WFILE#           SET FILE#
     C           K0003     READEMNUOPT                 9190READE  MNUOPT
     C*
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C                     DELETMNUOPT                 91  DELETE MNUOPT
     C                     Z-ADDSTS05     SVS05            SAVE FILE STS
     C*          ---------------------------------------------------------------
     C*          | Send Message To Indicate Delete Status
     C*          ---------------------------------------------------------------
     C*
     C                     ELSE                            ELSE-READ-FILE
     C           *IN90     IFEQ '1'                        NO RCD FOUND
     C                     ELSE
     C                     MOVE 'Y'       MSGFLG           SET ON ERROR FLAG
     C                     END                             READ KEY FILE FAIL
     C*
     C                     END                             END-READ KEY FILE
     C                     END                             EMD-DOUNE LOOP
     C                     MOVEA'00'      *IN,90
     C                     DELETMNUHED                 91  DELETE MNUHED
     C                     Z-ADDSTS04     SVS04            SAVE FILE STS
     C*          ---------------------------------------------------------------
     C*          | Send Message To Indicate Delete Status
     C*          ---------------------------------------------------------------
     C*
     C                     ELSE                            ELSE-READ-FILE
     C           *IN90     IFEQ '1'                        NO RCD FOUND
     C                     ELSE
     C                     MOVE 'Y'       MSGFLG           SET ON ERROR FLAG
     C                     END                             READ KEY FILE FAIL
     C*
     C                     END                             END-READ KEY FILE
     C                     END                             EMD-DOUNE LOOP
     C                     MOVEA'00'      *IN,90
     C*
     C           K0003     SETLLMNUHED                     RESUME FILE POINTER
     C                     Z-ADDSVS04     STS04            RESTORE FILE STS
     C*
     C           K0003     SETLLMNUOPT                     RESUME FILE POINTER
     C                     Z-ADDSVS05     STS05            RESTORE FILE STS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S022   - UPDATE D.MENU,F.MNUHED
     C**************************************************************************
     C           S022      BEGSR
     C                     Z-ADD4         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAGU01           User
     C                     MOVELHBUSER    KAGU01
     C                     MOVEL*BLANK    KBMN02           Menu
     C                     MOVELHBMNUC    KBMN02
     C           K0003     CHAINMNUHED               9091  CHAIN  MNUHED
     C*
     C           *IN91     IFEQ '1'                        RCK LOCK
     C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
     C                     END
     C*
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C           MBMNUC    IFEQ XBMNUC
     C           MBMNUD    ANDEQXBMNUD
     C           MBUSER    ANDEQWBUSER
     C                     UNLCKMNUHED                 91  RLS LCK MNUHED
     C                     ELSE
     C                     EXSR SMVTOF                     MOVE FLD TO FILE
     C                     UPDATMNUHEDF                90  UPDATE MNUHED
     C           *IN90     IFEQ '0'                        REC UPDATED
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END                             END-UPDATE STATUS
     C                     END                             END-FLD COMPARE
     C*
     C*
     C                     ELSE
     C                     END                             END-STATUS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S023   - WRITE D.MENU,F.MNUHED
     C**************************************************************************
     C           S023      BEGSR
     C                     Z-ADD4         WFILE#           SET FILE#
     C                     EXSR SMVTOF                     MOVE FLD TO FILE
     C                     WRITEMNUHEDF                90  ADD REC TO MNUHED
     C*
     C           *IN90     IFEQ *ZERO                      RECORD ADDED
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     ELSE
     C                     END                             END-STATUS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S024   - SETLL D.MENU,F.MNUOPT,SVK004,SVK005,SVK006
     C**************************************************************************
     C           S024      BEGSR
     C                     Z-ADD4         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     MOVE 'N'       SWRD06           RD.SW.MNUPGM    MNUHL
     C                     MOVE 'N'       SWRD07           RD.SW.MNUHLP
     C                     MOVEL*LOVAL    HCOPTC           Option
     C*
     C                     MOVELSVK004    KAGU01
     C                     MOVELSVK004    HCUSER           User
     C                     MOVELSVK004    MCUSER           User
     C                     MOVELSVK005    KBMN02
     C                     MOVELSVK005    HCMNUC           Menu
     C                     MOVELSVK005    MCMNUC           Menu
     C                     MOVELSVK006    KCOP03
     C                     MOVELSVK006    HCOPTC           Option
     C                     MOVELSVK006    MCOPTC           Option
     C*
     C           K0004     SETLLMNUOPT                   90
     C           *IN90     IFEQ '0'                        REC NOT MATCH
     C                     Z-ADD12        STS05            SYMUL NOT FND
     C                     END                             *IN90=0
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S025   - GETREC D.MENU,F.MNUOPT,*lock,*eq,SVK004,SVK005,SVK006
     C**************************************************************************
     C           S025      BEGSR
     C                     Z-ADD5         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAGU01
     C                     MOVELSVK004    KAGU01
     C                     MOVEL*BLANK    KBMN02
     C                     MOVELSVK005    KBMN02
     C                     MOVEL*BLANK    KCOP03
     C                     MOVELSVK006    KCOP03
     C           K0004     CHAINMNUOPT               9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C*
     C           *IN91     IFEQ '1'                        RCK LOCK
     C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
     C                     END
     C*
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     Z-ADD*ZERO     HRC05            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S026   - GETREC D.MENU,F.MNUOPT,*eq,SVK004,SVK005,SVK006
     C**************************************************************************
     C           S026      BEGSR
     C                     Z-ADD5         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAGU01
     C                     MOVELSVK004    KAGU01
     C                     MOVEL*BLANK    KBMN02
     C                     MOVELSVK005    KBMN02
     C                     MOVEL*BLANK    KCOP03
     C                     MOVELSVK006    KCOP03
     C           K0004     CHAINMNUOPT              N9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     Z-ADD*ZERO     HRC05            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S027   - GETREC D.MENU,F.MNUpgm,*eq,MCPGMN,MCSPGM
     C**************************************************************************
     C           S027      BEGSR
     C                     Z-ADD6         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KCPG01
     C                     MOVELXCPGMN    KCPG01
     C                     MOVEL*BLANK    KPSP02
     C                     MOVELXCSPGM    KPSP02
     C           K0005     CHAINMNUPGM               9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD06           RD.SW.MNUPGM    MNUHL
     C                     Z-ADD*ZERO     HRC06            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD06           RD.SW.MNUPGM    MNUHL
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S028   - DELETE D.MENU,F.MNUOPT
     C**************************************************************************
     C           S028      BEGSR
     C                     MOVEA'00'      *IN,90
     C                     MOVE *HIVAL    SVS05
     C                     MOVEL*BLANK    KAGU01
     C                     MOVELWCUSER    KAGU01
     C                     MOVEL*BLANK    KBMN02
     C                     MOVELWCMNUC    KBMN02
     C                     MOVEL*BLANK    KCOP03
     C                     MOVELXCOPTC    KCOP03
     C           K0004     SETLLMNUOPT                     SETLL  MNUOPT
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Delete Record - MNUOPT
     C*          ---------------------------------------------------------------
     C           *IN90     DOUEQ'1'
     C           *IN91     OREQ '1'
     C*
     C                     Z-ADD5         WFILE#           SET FILE#
     C           K0004     READEMNUOPT                 9190READE  MNUOPT
     C*
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C                     DELETMNUOPT                 91  DELETE MNUOPT
     C                     Z-ADDSTS05     SVS05            SAVE FILE STS
     C*          ---------------------------------------------------------------
     C*          | Send Message To Indicate Delete Status
     C*          ---------------------------------------------------------------
     C*
     C                     ELSE                            ELSE-READ-FILE
     C           *IN90     IFEQ '1'                        NO RCD FOUND
     C                     ELSE
     C                     MOVE 'Y'       MSGFLG           SET ON ERROR FLAG
     C                     END                             READ KEY FILE FAIL
     C*
     C                     END                             END-READ KEY FILE
     C                     END                             EMD-DOUNE LOOP
     C                     MOVEA'00'      *IN,90
     C*
     C           K0004     SETLLMNUOPT                     RESUME FILE POINTER
     C                     Z-ADDSVS05     STS05            RESTORE FILE STS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S029   - UPDATE D.MENU,F.MNUOPT
     C**************************************************************************
     C           S029      BEGSR
     C                     Z-ADD5         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAGU01           User
     C                     MOVELHCUSER    KAGU01
     C                     MOVEL*BLANK    KBMN02           Menu
     C                     MOVELHCMNUC    KBMN02
     C                     MOVEL*BLANK    KCOP03           Option
     C                     MOVELHCOPTC    KCOP03
     C           K0004     CHAINMNUOPT               9091  CHAIN  MNUOPT
     C*
     C           *IN91     IFEQ '1'                        RCK LOCK
     C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
     C                     END
     C*
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C           MCACTA    IFEQ XCACTA
     C           MCACTD    ANDEQXCACTD
     C           MCACTR    ANDEQXCACTR
     C           MCMNUC    ANDEQWCMNUC
     C           MCOPTC    ANDEQXCOPTC
     C           MCOPTD    ANDEQXCOPTD
     C           MCPGMN    ANDEQXCPGMN
     C           MCPGMT    ANDEQXCPGMT
     C           MCPRM1    ANDEQXCPRM1
     C           MCPRM2    ANDEQXCPRM2
     C           MCPRM3    ANDEQXCPRM3
     C           MCPRM4    ANDEQXCPRM4
     C           MCSPGM    ANDEQXCSPGM
     C           MCUSER    ANDEQWCUSER
     C                     UNLCKMNUOPT                 91  RLS LCK MNUOPT
     C                     ELSE
     C                     EXSR SMVTOF                     MOVE FLD TO FILE
     C                     UPDATMNUOPTF                90  UPDATE MNUOPT
     C           *IN90     IFEQ '0'                        REC UPDATED
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END                             END-UPDATE STATUS
     C                     END                             END-FLD COMPARE
     C*
     C*
     C                     ELSE
     C                     END                             END-STATUS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S030   - WRITE D.MENU,F.MNUOPT
     C**************************************************************************
     C           S030      BEGSR
     C                     Z-ADD5         WFILE#           SET FILE#
     C                     EXSR SMVTOF                     MOVE FLD TO FILE
     C                     WRITEMNUOPTF                90  ADD REC TO MNUOPT
     C*
     C           *IN90     IFEQ *ZERO                      RECORD ADDED
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     ELSE
     C                     END                             END-STATUS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S031   - SETLL D.MENU,F.MNUHLP,SVK007,SVK008,SVK009
     C**************************************************************************
     C           S031      BEGSR
     C                     Z-ADD6         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD07           RD.SW.MNUHLP
     C                     Z-ADD*LOVAL    HDSEQN           Sequence Number
     C*
     C                     MOVELSVK007    KBMN01
     C                     MOVELSVK007    HDMNUC           Menu
     C                     MOVELSVK007    MDMNUC           Menu
     C                     MOVELSVK008    KCOP02
     C                     MOVELSVK008    HDOPTC           Option
     C                     MOVELSVK008    MDOPTC           Option
     C                     Z-ADDSVK009    KDSE03
     C                     Z-ADDSVK009    HDSEQN           Sequence Number
     C                     Z-ADDSVK009    MDSEQN           Sequence Number
     C*
     C           K0006     SETLLMNUHLP                   90
     C           *IN90     IFEQ '0'                        REC NOT MATCH
     C                     Z-ADD12        STS07            SYMUL NOT FND
     C                     END                             *IN90=0
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S032   - GETBLK D.MENU,F.MNUUSR,*PV
     C**************************************************************************
     C           S032      BEGSR
     C*
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADDWRRN01    WLCNTR           INIT LOOP CNTR
     C                     ADD  WADJ01    WLCNTR           ADD ADJ.CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD01    DOUNE'Y'                        RD.SW.MNUUSR    MNUUS
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     READPMNUUSR              N  9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     Z-ADD*ZERO     HRC01            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     END
     C*
     C           SWRD01    IFEQ 'Y'                        RD.SW.MNUUSR    MNUUS
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     END
     C                     END
     C                     EXSR S033                       CHK BOF
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S033   - Process To Reset File Pointer(BOF) - MNUUSR
     C**************************************************************************
     C           S033      BEGSR
     C*
     C           SWRD01    IFNE 'Y'                        RD.SW.MNUUSR    MNUUS
     C           STS01     ANDNE1122                       RCD LOCK
     C           STS01     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     Z-ADDSTS01     SVS01            SAVE FILE STS
     C                     MOVEL*BLANK    KAUS01           User
     C                     MOVELMAUSER    KAUS01
     C           K0001     SETLLMNUUSR
     C                     Z-ADDSVS01     STS01            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S034   - Process To Reset File Pointer(EOF) - MNUUSR
     C**************************************************************************
     C           S034      BEGSR
     C*
     C           SWRD01    IFNE 'Y'                        RD.SW.MNUUSR    MNUUS
     C           STS01     ANDNE1122                       RCD LOCK
     C           STS01     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     Z-ADDSTS01     SVS01            SAVE FILE STS
     C                     MOVEL*BLANK    KAUS01           User
     C                     MOVELMAUSER    KAUS01
     C           K0001     SETGTMNUUSR
     C                     Z-ADDSVS01     STS01            RESTORE FILE STS
     C*
     C                     Z-ADD1         WADJ01
     C           WCNTR     IFNE *ZERO
     C                     ADD  11        WADJ01
     C                     END
     C                     ELSE
     C                     Z-ADDWRRN01    WADJ01
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S035   - GETREC d.mnuusr2,f.mnuusr2,*eq,menu.mnuusr.mauser
     C**************************************************************************
     C           S035      BEGSR
     C                     Z-ADD2         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAGU01
     C                     MOVELXAUSER    KAGU01
     C           K0002     CHAINMNUUSR2              9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD02           RD.SW.MNUUSR2
     C                     Z-ADD*ZERO     HRC02            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD02           RD.SW.MNUUSR2
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S036   - GETREC D.MENU,F.MNUUSR,F.MNUUSR1,*EQ,:0002
     C**************************************************************************
     C           S036      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAUS01
     C                     MOVELXAUSER    KAUS01
     C           K0001     CHAINMNUUSR              N9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C                     Z-ADD3         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAUS01           Group User
     C                     MOVELRN0003    KAUS01
     C           K0001     CHAINMNUUSR1              9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     ELSE
     C                     MOVE 'Y'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C                     ADD  1         WGETR            INCREMENT CNTR
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S037   - GETREC D.MENU,F.MNUUSR,*EQ,:0002
     C**************************************************************************
     C           S037      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAUS01
     C                     MOVELXAUSER    KAUS01
     C           K0001     CHAINMNUUSR              N9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     Z-ADD*ZERO     HRC01            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUUSR    MNUUS
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S038   - GETBLK D.MENU,F.MNUHED,*PV,SVK002
     C**************************************************************************
     C           S038      BEGSR
     C*
     C                     MOVEL*BLANK    KBUS01
     C                     MOVELSVK002    KBUS01
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADDWRRN02    WLCNTR           INIT LOOP CNTR
     C                     ADD  WADJ02    WLCNTR           ADD ADJ.CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD04    DOUNE'Y'                        RD.SW.MNUHED    MNUOP
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     Z-ADD4         WFILE#           SET FILE#
     C           K0007     REDPEMNUHED              N  9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     Z-ADD*ZERO     HRC04            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     END
     C*
     C           SWRD04    IFEQ 'Y'                        RD.SW.MNUHED    MNUOP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     END
     C                     END
     C                     EXSR S039                       CHK BOF
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S039   - Process To Reset File Pointer(BOF) - MNUHED
     C**************************************************************************
     C           S039      BEGSR
     C*
     C           SWRD04    IFNE 'Y'                        RD.SW.MNUHED    MNUOP
     C           STS04     ANDNE1122                       RCD LOCK
     C           STS04     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     Z-ADDSTS04     SVS04            SAVE FILE STS
     C                     MOVEL*BLANK    KBUS01           User
     C                     MOVELMBUSER    KBUS01
     C           K0007     SETLLMNUHED
     C                     Z-ADDSVS04     STS04            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S040   - Process To Reset File Pointer(EOF) - MNUHED
     C**************************************************************************
     C           S040      BEGSR
     C*
     C           SWRD04    IFNE 'Y'                        RD.SW.MNUHED    MNUOP
     C           STS04     ANDNE1122                       RCD LOCK
     C           STS04     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     Z-ADDSTS04     SVS04            SAVE FILE STS
     C                     MOVEL*BLANK    KBUS01           User
     C                     MOVELMBUSER    KBUS01
     C           K0007     SETGTMNUHED
     C                     Z-ADDSVS04     STS04            RESTORE FILE STS
     C*
     C                     Z-ADD1         WADJ02
     C           WCNTR     IFNE *ZERO
     C                     ADD  10        WADJ02
     C                     END
     C                     ELSE
     C                     Z-ADDWRRN02    WADJ02
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S041   - GETREC D.MENU,F.MNUHED,*EQ,MBUSER,MBMNUC
     C**************************************************************************
     C           S041      BEGSR
     C                     Z-ADD4         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KBUS01
     C                     MOVELWBUSER    KBUS01
     C                     MOVEL*BLANK    KBMN02
     C                     MOVELXBMNUC    KBMN02
     C           K0008     CHAINMNUHED              N9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     Z-ADD*ZERO     HRC04            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S042   - GETBLK D.MENU,F.MNUOPT,*PV,SVK004,SVK005
     C**************************************************************************
     C           S042      BEGSR
     C*
     C                     MOVEL*BLANK    KCUS01
     C                     MOVELSVK004    KCUS01
     C                     MOVEL*BLANK    KCMN02
     C                     MOVELSVK005    KCMN02
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADDWRRN03    WLCNTR           INIT LOOP CNTR
     C                     ADD  WADJ03    WLCNTR           ADD ADJ.CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD05    DOUNE'Y'                        RD.SW.MNUOPT    MNUPG
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     Z-ADD5         WFILE#           SET FILE#
     C           K0009     REDPEMNUOPT              N  9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     Z-ADD*ZERO     HRC05            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     END
     C*
     C           SWRD05    IFEQ 'Y'                        RD.SW.MNUOPT    MNUPG
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     END
     C                     END
     C                     EXSR S043                       CHK BOF
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S043   - Process To Reset File Pointer(BOF) - MNUOPT
     C**************************************************************************
     C           S043      BEGSR
     C*
     C           SWRD05    IFNE 'Y'                        RD.SW.MNUOPT    MNUPG
     C           STS05     ANDNE1122                       RCD LOCK
     C           STS05     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     Z-ADDSTS05     SVS05            SAVE FILE STS
     C                     MOVEL*BLANK    KCUS01           User
     C                     MOVELMCUSER    KCUS01
     C                     MOVEL*BLANK    KCMN02           Menu
     C                     MOVELMCMNUC    KCMN02
     C           K0009     SETLLMNUOPT
     C                     Z-ADDSVS05     STS05            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S044   - Process To Reset File Pointer(EOF) - MNUOPT
     C**************************************************************************
     C           S044      BEGSR
     C*
     C           SWRD05    IFNE 'Y'                        RD.SW.MNUOPT    MNUPG
     C           STS05     ANDNE1122                       RCD LOCK
     C           STS05     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     Z-ADDSTS05     SVS05            SAVE FILE STS
     C                     MOVEL*BLANK    KCUS01           User
     C                     MOVELMCUSER    KCUS01
     C                     MOVEL*BLANK    KCMN02           Menu
     C                     MOVELMCMNUC    KCMN02
     C           K0009     SETGTMNUOPT
     C                     Z-ADDSVS05     STS05            RESTORE FILE STS
     C*
     C                     Z-ADD1         WADJ03
     C           WCNTR     IFNE *ZERO
     C                     ADD  9         WADJ03
     C                     END
     C                     ELSE
     C                     Z-ADDWRRN03    WADJ03
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S045   - GETREC D.MENU,F.MNUOPT,*EQ,MCUSER,MCMNUC,MCOPTC
     C**************************************************************************
     C           S045      BEGSR
     C                     Z-ADD5         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KCUS01
     C                     MOVELWCUSER    KCUS01
     C                     MOVEL*BLANK    KCMN02
     C                     MOVELWCMNUC    KCMN02
     C                     MOVEL*BLANK    KCOP03
     C                     MOVELXCOPTC    KCOP03
     C           K0010     CHAINMNUOPT              N9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     Z-ADD*ZERO     HRC05            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S046   - GETBLK D.MENU,F.MNUHLP,*PV,SVK007,SVK008,*changed
     C**************************************************************************
     C           S046      BEGSR
     C*
     C                     MOVEL*BLANK    KDMN01
     C                     MOVELSVK007    KDMN01
     C                     MOVEL*BLANK    KDOP02
     C                     MOVELSVK008    KDOP02
     C*
     C*          ---------------------------------------------------------------
     C*          | Initialize Loop
     C*          ---------------------------------------------------------------
     C                     Z-ADD*ZERO     WCNTR            INIT COUNTER
     C                     Z-ADDWRRN04    WLCNTR           INIT LOOP CNTR
     C                     ADD  WADJ04    WLCNTR           ADD ADJ.CNTR
     C                     Z-ADD*ZERO     SWEXBL
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Retrieve Record
     C*          ---------------------------------------------------------------
     C           SWRD07    DOUNE'Y'                        RD.SW.MNUHLP
     C           WCNTR     ORGE WLCNTR
     C           SWEXBL    ORNE *ZERO
     C                     Z-ADD*ZERO     SWSKPR
     C                     Z-ADD7         WFILE#           SET FILE#
     C           K0011     REDPEMNUHLP                 9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD07           RD.SW.MNUHLP
     C                     Z-ADD*ZERO     HRC07            ZERO HIDDEN RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD07           RD.SW.MNUHLP
     C                     END
     C*
     C           SWRD07    IFEQ 'Y'                        RD.SW.MNUHLP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     ADD  1         WCNTR            INCREMENT CNTR
     C                     END
     C                     END
     C                     EXSR S047                       CHK BOF
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S047   - Process To Reset File Pointer(BOF) - MNUHLP
     C**************************************************************************
     C           S047      BEGSR
     C*
     C           SWRD07    IFNE 'Y'                        RD.SW.MNUHLP
     C           STS07     ANDNE1122                       RCD LOCK
     C           STS07     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD07           RD.SW.MNUHLP
     C                     Z-ADDSTS07     SVS07            SAVE FILE STS
     C                     MOVEL*BLANK    KDMN01           Menu
     C                     MOVELMDMNUC    KDMN01
     C                     MOVEL*BLANK    KDOP02           Option
     C                     MOVELMDOPTC    KDOP02
     C           K0011     SETLLMNUHLP
     C                     Z-ADDSVS07     STS07            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S048   - Process To Reset File Pointer(EOF) - MNUHLP
     C**************************************************************************
     C           S048      BEGSR
     C*
     C           SWRD07    IFNE 'Y'                        RD.SW.MNUHLP
     C           STS07     ANDNE1122                       RCD LOCK
     C           STS07     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD07           RD.SW.MNUHLP
     C                     Z-ADDSTS07     SVS07            SAVE FILE STS
     C                     MOVEL*BLANK    KDMN01           Menu
     C                     MOVELMDMNUC    KDMN01
     C                     MOVEL*BLANK    KDOP02           Option
     C                     MOVELMDOPTC    KDOP02
     C           K0011     SETGTMNUHLP
     C                     Z-ADDSVS07     STS07            RESTORE FILE STS
     C*
     C                     Z-ADD1         WADJ04
     C           WCNTR     IFNE *ZERO
     C                     ADD  8         WADJ04
     C                     END
     C                     ELSE
     C                     Z-ADDWRRN04    WADJ04
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S049   - DELETE D.MENU,F.MNUHLP
     C**************************************************************************
     C           S049      BEGSR
     C                     MOVEA'00'      *IN,90
     C                     MOVE *HIVAL    SVS07
     C                     MOVEL*BLANK    KDMN01
     C                     MOVELXDMNUC    KDMN01
     C                     MOVEL*BLANK    KDOP02
     C                     MOVELXDOPTC    KDOP02
     C                     Z-ADDXDSEQN    KDSE03
     C           K0012     SETLLMNUHLP                     SETLL  MNUHLP
     C*          ---------------------------------------------------------------
     C*          | Setup Loop To Delete Record - MNUHLP
     C*          ---------------------------------------------------------------
     C           *IN90     DOUEQ'1'
     C           *IN91     OREQ '1'
     C*
     C                     Z-ADD7         WFILE#           SET FILE#
     C           K0012     READEMNUHLP                 9190READE  MNUHLP
     C*
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C                     Z-ADD8         WFILE#           SET FILE#
     C           REC07     CHAINMNUHLPX              9091
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C           REC07     DELETMNUHLPX              9191  DELETE MNUHLP
     C                     Z-ADDSTS08     SVS07            SAVE FILE STS
     C*          ---------------------------------------------------------------
     C*          | Send Message To Indicate Delete Status
     C*          ---------------------------------------------------------------
     C*
     C                     ELSE                            ELSE-READ-FILE
     C           *IN90     IFEQ '1'                        NO RCD FOUND
     C                     ELSE
     C                     MOVE 'Y'       MSGFLG           SET ON ERROR FLAG
     C                     END                             READ KEY FILE FAIL
     C*
     C                     END                             END-CHAIN X-FILE
     C                     END                             END-READ KEY FILE
     C                     END                             EMD-DOUNE LOOP
     C                     MOVEA'00'      *IN,90
     C*
     C           K0012     SETLLMNUHLP                     RESUME FILE POINTER
     C                     Z-ADDSVS07     STS07            RESTORE FILE STS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S050   - SETLL D.MENU,F.MNUHLP,mdmnuc,mdoptc,mdseqn
     C**************************************************************************
     C           S050      BEGSR
     C                     Z-ADD6         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD07           RD.SW.MNUHLP
     C                     Z-ADD*LOVAL    HDSEQN           Sequence Number
     C*
     C                     MOVELXDMNUC    KDMN01
     C                     MOVELXDMNUC    HDMNUC           Menu
     C                     MOVELXDMNUC    MDMNUC           Menu
     C                     MOVELXDOPTC    KDOP02
     C                     MOVELXDOPTC    HDOPTC           Option
     C                     MOVELXDOPTC    MDOPTC           Option
     C                     Z-ADDXDSEQN    KDSE03
     C                     Z-ADDXDSEQN    HDSEQN           Sequence Number
     C                     Z-ADDXDSEQN    MDSEQN           Sequence Number
     C*
     C           K0012     SETLLMNUHLP                   90
     C           *IN90     IFEQ '0'                        REC NOT MATCH
     C                     Z-ADD12        STS07            SYMUL NOT FND
     C                     END                             *IN90=0
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S051   - UPDATE D.menu,F.mnuhlp
     C**************************************************************************
     C           S051      BEGSR
     C                     Z-ADD8         WFILE#           SET FILE#
     C                     Z-ADDHRC07     REC07
     C           HRC07     CHAINMNUHLPX              9091
     C                     Z-ADDSTS08     STS07            SYNC STATUS
     C*
     C           *IN91     IFEQ '1'                        RCK LOCK
     C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
     C                     END
     C*
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C*
     C           MDMNUC    IFEQ XDMNUC
     C           MDOPTC    ANDEQXDOPTC
     C           MDSEQN    ANDEQXDSEQN
     C           MDTEXT    ANDEQXDTEXT
     C                     UNLCKMNUHLPX                91  RLS LCK MNUHLPX
     C                     ELSE
     C                     Z-ADD7         WFILE#           SET FILE#
     C                     EXSR SMVTOF                     MOVE FLD TO FILE
     C                     UPDATMNUHLPFX               90  UPDATE MNUHLP
     C                     Z-ADDSTS08     STS07            SYNC STATUS
     C*
     C           *IN91     IFEQ '1'                        RCK LOCK
     C                     MOVE 'Y'       MSGFLG           SETON MSG FLAG
     C                     END
     C*
     C           *IN90     IFEQ '0'                        REC UPDATED
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END                             END-UPDATE STATUS
     C                     END                             END-FLD COMPARE
     C*
     C*
     C                     ELSE
     C                     END                             END-STATUS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S052   - WRITE D.menu,f.mnuhlp
     C**************************************************************************
     C           S052      BEGSR
     C                     Z-ADD7         WFILE#           SET FILE#
     C*          ---------------------------------------------------------------
     C*          | Auto Increment
     C*          ---------------------------------------------------------------
     C                     MOVELXDMNUC    KBMN01           INITIALIZE KBMN01
     C                     MOVELXDOPTC    KCOP02           INITIALIZE KCOP02
     C                     Z-ADD*HIVAL    KDSE03           INITIALIZE KDSE03
     C           K0006     SETGTMNUHLP
     C                     READPMNUHLP                 9190
     C           *IN90     IFEQ '0'
     C           *IN91     ANDEQ'0'
     C           MDMNUC    ANDEQKBMN01                     Menu
     C           MDOPTC    ANDEQKCOP02                     Option
     C           MDSEQN    ADD  5         XDSEQN           Sequence Number
     C                     ELSE
     C                     Z-ADD5         XDSEQN
     C                     END
     C*
     C                     EXSR SMVTOF                     MOVE FLD TO FILE
     C                     Z-ADD8         WFILE#           SET FILE#
     C                     WRITEMNUHLPFX               90  ADD REC TO MNUHLP
     C                     Z-ADDSTS08     STS07            SYNC STATUS
     C*
     C           *IN90     IFEQ *ZERO                      RECORD ADDED
     C                     Z-ADDREC08     REC07
     C                     Z-ADD7         WFILE#           SET FILE#
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     ELSE
     C                     END                             END-STATUS
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S053   - GETREC D.MENU,F.MNUHLP,*eq,mdmnuc,mdoptc,mdseqn
     C**************************************************************************
     C           S053      BEGSR
     C                     Z-ADD7         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KDMN01
     C                     MOVELXDMNUC    KDMN01
     C                     MOVEL*BLANK    KDOP02
     C                     MOVELXDOPTC    KDOP02
     C                     Z-ADDXDSEQN    KDSE03
     C           K0012     CHAINMNUHLP               9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD07           RD.SW.MNUHLP
     C                     Z-ADD*ZERO     HRC07            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD07           RD.SW.MNUHLP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S054   - SETLL D.MENU,F.MNUHLP,SVK007,SVK008,wkseqn
     C**************************************************************************
     C           S054      BEGSR
     C                     Z-ADD6         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD07           RD.SW.MNUHLP
     C                     Z-ADD*LOVAL    HDSEQN           Sequence Number
     C*
     C                     MOVELSVK007    KDMN01
     C                     MOVELSVK007    HDMNUC           Menu
     C                     MOVELSVK007    MDMNUC           Menu
     C                     MOVELSVK008    KDOP02
     C                     MOVELSVK008    HDOPTC           Option
     C                     MOVELSVK008    MDOPTC           Option
     C                     Z-ADDWKSEQN    KDSE03
     C                     Z-ADDWKSEQN    HDSEQN           Sequence Number
     C                     Z-ADDWKSEQN    MDSEQN           Sequence Number
     C*
     C           K0012     SETLLMNUHLP                   90
     C           *IN90     IFEQ '0'                        REC NOT MATCH
     C                     Z-ADD12        STS07            SYMUL NOT FND
     C                     END                             *IN90=0
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S055   - SETLL D.MENU,F.MNUUSR1,SVK08
     C**************************************************************************
     C           S055      BEGSR
     C                     Z-ADD2         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     MOVE 'N'       SWRD04           RD.SW.MNUHED    MNUOP
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     MOVE 'N'       SWRD06           RD.SW.MNUPGM    MNUHL
     C                     MOVE 'N'       SWRD07           RD.SW.MNUHLP
     C*
     C                     MOVELSVK08     KAUS01
     C                     MOVELSVK08     HD0001           User
     C                     MOVELSVK08     MAUSER           User
     C*
     C           K0001     SETLLMNUUSR1                  90
     C           *IN90     IFEQ '0'                        REC NOT MATCH
     C                     Z-ADD12        STS03            SYMUL NOT FND
     C                     END                             *IN90=0
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S056   - GETREC D.MENU,F.MNUUSR1,*PV,
     C**************************************************************************
     C           S056      BEGSR
     C                     Z-ADD3         WFILE#           SET FILE#
     C                     READPMNUUSR1                9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     Z-ADD*ZERO     HRC03            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C                     EXSR S057                       CHK BOF
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S057   - Process To Reset File Pointer(BOF) - MNUUSR1
     C**************************************************************************
     C           S057      BEGSR
     C*
     C           SWRD03    IFNE 'Y'                        RD.SW.MNUUSR1   MNUHE
     C           STS03     ANDNE1122                       RCD LOCK
     C           STS03     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     Z-ADDSTS03     SVS03            SAVE FILE STS
     C                     MOVEL*BLANK    KAUS01           User
     C                     MOVELMAUSER    KAUS01
     C           K0001     SETLLMNUUSR1
     C                     Z-ADDSVS03     STS03            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S058   - GETREC D.MENU,F.MNUUSR1,*NX,
     C**************************************************************************
     C           S058      BEGSR
     C                     Z-ADD3         WFILE#           SET FILE#
     C                     READ MNUUSR1                9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     Z-ADD*ZERO     HRC03            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C                     EXSR S059                       CHK EOF
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S059   - Process To Reset File Pointer(EOF) - MNUUSR1
     C**************************************************************************
     C           S059      BEGSR
     C*
     C           SWRD03    IFNE 'Y'                        RD.SW.MNUUSR1   MNUHE
     C           STS03     ANDNE1122                       RCD LOCK
     C           STS03     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     Z-ADDSTS03     SVS03            SAVE FILE STS
     C                     MOVEL*BLANK    KAUS01           User
     C                     MOVELMAUSER    KAUS01
     C           K0001     SETGTMNUUSR1
     C                     Z-ADDSVS03     STS03            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S060   - SETLL D.MENU,F.MNUPGM,SVK10,svk11
     C**************************************************************************
     C           S060      BEGSR
     C                     Z-ADD5         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD06           RD.SW.MNUPGM    MNUHL
     C                     MOVE 'N'       SWRD07           RD.SW.MNUHLP
     C                     MOVEL*LOVAL    HPSPGM           Secondary Program Nam
     C*
     C                     MOVELSVK10     KPPG01
     C                     MOVELSVK10     HPPGMN           Program Name
     C                     MOVELSVK10     MPPGMN           Program Name
     C                     MOVELSVK11     KPSP02
     C                     MOVELSVK11     HPSPGM           Secondary Program Nam
     C                     MOVELSVK11     MPSPGM           Secondary Program Nam
     C*
     C           K0013     SETLLMNUPGM                   90
     C           *IN90     IFEQ '0'                        REC NOT MATCH
     C                     Z-ADD12        STS06            SYMUL NOT FND
     C                     END                             *IN90=0
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S061   - GETREC D.MENU,F.MNUPGM,*PV,
     C**************************************************************************
     C           S061      BEGSR
     C                     Z-ADD6         WFILE#           SET FILE#
     C                     READPMNUPGM                 9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD06           RD.SW.MNUPGM    MNUHL
     C                     Z-ADD*ZERO     HRC06            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD06           RD.SW.MNUPGM    MNUHL
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C                     EXSR S062                       CHK BOF
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S062   - Process To Reset File Pointer(BOF) - MNUPGM
     C**************************************************************************
     C           S062      BEGSR
     C*
     C           SWRD06    IFNE 'Y'                        RD.SW.MNUPGM    MNUHL
     C           STS06     ANDNE1122                       RCD LOCK
     C           STS06     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD06           RD.SW.MNUPGM    MNUHL
     C                     Z-ADDSTS06     SVS06            SAVE FILE STS
     C                     MOVEL*BLANK    KPPG01           Program Name
     C                     MOVELMPPGMN    KPPG01
     C                     MOVEL*BLANK    KPSP02           Secondary Program Nam
     C                     MOVELMPSPGM    KPSP02
     C           K0013     SETLLMNUPGM
     C                     Z-ADDSVS06     STS06            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S063   - GETREC D.MENU,F.MNUPGM,*NX,
     C**************************************************************************
     C           S063      BEGSR
     C                     Z-ADD6         WFILE#           SET FILE#
     C                     READ MNUPGM                 9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD06           RD.SW.MNUPGM    MNUHL
     C                     Z-ADD*ZERO     HRC06            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD06           RD.SW.MNUPGM    MNUHL
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C                     EXSR S064                       CHK EOF
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S064   - Process To Reset File Pointer(EOF) - MNUPGM
     C**************************************************************************
     C           S064      BEGSR
     C*
     C           SWRD06    IFNE 'Y'                        RD.SW.MNUPGM    MNUHL
     C           STS06     ANDNE1122                       RCD LOCK
     C           STS06     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD06           RD.SW.MNUPGM    MNUHL
     C                     Z-ADDSTS06     SVS06            SAVE FILE STS
     C                     MOVEL*BLANK    KPPG01           Program Name
     C                     MOVELMPPGMN    KPPG01
     C                     MOVEL*BLANK    KPSP02           Secondary Program Nam
     C                     MOVELMPSPGM    KPSP02
     C           K0013     SETGTMNUPGM
     C                     Z-ADDSVS06     STS06            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S002V - User Entry Screen
     C* Validation subroutine for -- SC0002
     C**************************************************************************
     C           S002V     BEGSR
     C*
     C                     Z-ADD1         VALIDF
     C*
     C           XAUSER    IFEQ A1,1                       Lst Valid/Invalid val
     C                     Z-ADD0         LISTF            Invalid value found
     C                     ELSE
     C                     Z-ADD1         LISTF            Valid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'XAUSER'  FLDNAM
     C                     MOVEL'SC0002'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'MNU0005' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C*
     C           WK0001    CHAINMNUUSR1              90    Field existence check
     C*
     C           *IN90     IFEQ '1'                        Chain failed
     C                     Z-ADD0         EXISTF           Field does not exist
     C                     ELSE                            Chain sucessful
     C                     Z-ADD1         EXISTF           Field exists
     C                     END
     C*
     C           WK0001    IFEQ A1,1                       Lst Valid/Invalid val
     C                     Z-ADD1         LISTF            Valid value found
     C                     ELSE
     C                     Z-ADD0         LISTF            Invalid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'WK0001'  FLDNAM
     C                     MOVEL'SC0002'  FLDSCR
     C           EXISTF    IFEQ 1                          Field existence check
     C           LISTF     OREQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'MNU0008' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C                     ENDSR
     C**************************************************************************
     C/EJECT
     C**************************************************************************
     C* S004V - Menu Detail Screen
     C* Validation subroutine for -- SC0004
     C**************************************************************************
     C           S004V     BEGSR
     C*
     C                     Z-ADD1         VALIDF
     C*
     C           XBMNUC    IFEQ A1,1                       Lst Valid/Invalid val
     C                     Z-ADD0         LISTF            Invalid value found
     C                     ELSE
     C                     Z-ADD1         LISTF            Valid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'XBMNUC'  FLDNAM
     C                     MOVEL'SC0004'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'MNU0003' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C*
     C           XBMNUD    IFEQ A1,1                       Lst Valid/Invalid val
     C                     Z-ADD0         LISTF            Invalid value found
     C                     ELSE
     C                     Z-ADD1         LISTF            Valid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'XBMNUD'  FLDNAM
     C                     MOVEL'SC0004'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'AAA0001' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C                     ENDSR
     C**************************************************************************
     C/EJECT
     C**************************************************************************
     C* S006V - Options Detail Screen
     C* Validation subroutine for -- SC0006
     C**************************************************************************
     C           S006V     BEGSR
     C*
     C                     Z-ADD1         VALIDF
     C*
     C           XCOPTC    IFEQ A1,1                       Lst Valid/Invalid val
     C                     Z-ADD0         LISTF            Invalid value found
     C                     ELSE
     C                     Z-ADD1         LISTF            Valid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'XCOPTC'  FLDNAM
     C                     MOVEL'SC0006'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'MNU0004' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C*
     C           XCOPTD    IFEQ A1,1                       Lst Valid/Invalid val
     C                     Z-ADD0         LISTF            Invalid value found
     C                     ELSE
     C                     Z-ADD1         LISTF            Valid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'XCOPTD'  FLDNAM
     C                     MOVEL'SC0006'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'AAA0001' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C*
     C           XCPGMN    IFEQ A1,1                       Lst Valid/Invalid val
     C                     Z-ADD0         LISTF            Invalid value found
     C                     ELSE
     C                     Z-ADD1         LISTF            Valid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'XCPGMN'  FLDNAM
     C                     MOVEL'SC0006'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'MNU0002' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C*
     C           XCACTA    IFEQ A1,2                       Lst Valid/Invalid val
     C           XCACTA    OREQ A1,3                       Valid value
     C                     Z-ADD1         LISTF            Valid value found
     C                     ELSE
     C                     Z-ADD0         LISTF            Invalid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'XCACTA'  FLDNAM
     C                     MOVEL'SC0006'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'MNU0001' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C*
     C           XCACTR    IFEQ A1,2                       Lst Valid/Invalid val
     C           XCACTR    OREQ A1,3                       Valid value
     C                     Z-ADD1         LISTF            Valid value found
     C                     ELSE
     C                     Z-ADD0         LISTF            Invalid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'XCACTR'  FLDNAM
     C                     MOVEL'SC0006'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'MNU0001' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C*
     C           XCACTD    IFEQ A1,2                       Lst Valid/Invalid val
     C           XCACTD    OREQ A1,3                       Valid value
     C                     Z-ADD1         LISTF            Valid value found
     C                     ELSE
     C                     Z-ADD0         LISTF            Invalid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'XCACTD'  FLDNAM
     C                     MOVEL'SC0006'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'MNU0001' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C*
     C           XCPGMT    IFEQ A1,4                       Lst Valid/Invalid val
     C           XCPGMT    OREQ A1,5                       Valid value
     C           XCPGMT    OREQ A1,6                       Valid value
     C                     Z-ADD1         LISTF            Valid value found
     C                     ELSE
     C                     Z-ADD0         LISTF            Invalid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'XCPGMT'  FLDNAM
     C                     MOVEL'SC0006'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'MNU0010' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C                     ENDSR
     C**************************************************************************
     C/EJECT
     C**************************************************************************
     C* S010V - Copy Users
     C* Validation subroutine for -- SC0009
     C**************************************************************************
     C           S010V     BEGSR
     C*
     C                     Z-ADD1         VALIDF
     C*
     C           CPYOPT    IFEQ A1,2                       Lst Valid/Invalid val
     C           CPYOPT    OREQ A1,3                       Valid value
     C                     Z-ADD1         LISTF            Valid value found
     C                     ELSE
     C                     Z-ADD0         LISTF            Invalid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'CPYOPT'  FLDNAM
     C                     MOVEL'SC0009'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'MNU0001' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C*
     C           TOUSER    IFEQ A1,1                       Lst Valid/Invalid val
     C                     Z-ADD0         LISTF            Invalid value found
     C                     ELSE
     C                     Z-ADD1         LISTF            Valid value found
     C                     END
     C*
     C                     Z-ADD0         FLDINX
     C                     MOVEL'TOUSER'  FLDNAM
     C                     MOVEL'SC0009'  FLDSCR
     C           LISTF     IFEQ 1                          Lst Valid/Invalid val
     C                     MOVE 'R'       DSPERR
     C                     EXSR SATRIB
     C                     ELSE
     C                     Z-ADD0         VALIDF           Validation failed
     C                     MOVE *BLANKS   MSGID            Message id.
     C                     MOVE *BLANKS   MSGF             Message file
     C                     MOVE *BLANKS   MSGFL            Message library
     C                     MOVE *BLANKS   MSGDTA           Message text
     C                     MOVE 'A'       MSGACT           Message action
     C                     MOVEL'MNU0005' MSGID            Message id.
     C                     MOVEL'MENUERR' MSGF             Message file
     C                     EXSR SMSG                       Exsr error handler
     C                     MOVE 'X'       DSPERR
     C                     EXSR SATRIB
     C                     END
     C*
     C           VALIDF    IFNE 1
     C                     MOVE *ZEROS    LIN
     C                     MOVE *ZEROS    POS
     C                     END
     C*
     C                     ENDSR
     C**************************************************************************
     C/EJECT
     C*****************************************************************
     C* *PSSR - Program Execution Errors Handler
     C*****************************************************************
     C           *PSSR     BEGSR
     C           UERCNT    IFNE *ZERO
     C                     MOVEL'*CANCL'  URSUME
     C                     ELSE
     C                     Z-ADD1         UERCNT
     C                     MOVE 'R'       MSGACT
     C                     MOVE *BLANKS   MSGF
     C                     MOVEL'QCPFMSG' MSGF
     C                     MOVE *BLANKS   MSGFL
     C                     MOVEL'QSYS'    MSGFL
     C                     MOVE *BLANKS   MSGDTA
     C           UMSGTX    IFNE *BLANKS
     C                     MOVELUMSGTX    MSGDTA
     C                     ELSE
     C                     MOVELUROUTN    MSGDTA
     C                     END
     C*
     C           USTAT     IFEQ *ZEROS
     C                     MOVE UFSTAT    USTAT
     C                     MOVE UFSRCL    USRCLN
     C                     END
     C                     MOVE USTAT     USTAT4
     C*
     C           MSGID     IFEQ *BLANKS
     C                     MOVE USTAT4    MSGID
     C                     MOVEL'RPG'     MSGID
     C                     MOVEL'QRPGMSGE'MSGF
     C                     END
     C*
     C                     CALL 'CLMSG'   PMSGCL         93
     C*
     C                     MOVEL'1'       UEROPT
     C                     EXFMTPSSR0001
     C*
     C           UEROPT    IFEQ '1'
     C                     MOVEL'*GETIN  'URSUME
     C                     ELSE
     C           UEROPT    IFEQ '2'
     C                     MOVEL'*CANCL  'URSUME
     C                     ELSE
     C           UEROPT    IFEQ '3'
     C                     MOVE '        'URSUME
     C                     END
     C                     END
     C                     END
     C                     END
     C*
     C                     MOVEL*BLANK    MSGID
     C                     MOVE *ZERO     UERCNT
     C*
     C                     ENDSRURSUME
     C*/EJECT
     C*****************************************************************
     C* SCLF   - CLF : Cursor Location On Field Handler
     C*****************************************************************
     C           SCLF      BEGSR
     C*
     C* FIND TABLE OFFSET BY SCREEN ID AND FIELD NAME AND FIELD INDEX
     C*
     C                     Z-ADD1         X0
     C           #MAP      LOKUPDA4,X0                   90
     C           *IN90     IFEQ '1'                        IF FIND
     C                     MOVE DA5,X0    #CLF
     C*          ------------------------------------------------------
     C*          | CALCULATE CURRENT SCREEN OFFSET
     C*          ------------------------------------------------------
     C* Get row
     C                     Z-ADD0         HALFWD
     C                     MOVE ROW       BYTE2
     C                     Z-ADDHALFWD    APPROW
     C* Get column
     C                     Z-ADD0         HALFWD
     C                     MOVE COL       BYTE2
     C                     Z-ADDHALFWD    APPCOL
     C*
     C           APPROW    SUB  1         OFFSET
     C           OFFSET    MULT 80        OFFSET
     C                     ADD  APPCOL    OFFSET
     C*          ------------------------------------------------------
     C*          | CHECK OFFSET BOUNDARY
     C*          ------------------------------------------------------
     C           OFFSET    IFGE #FROM
     C           OFFSET    ANDLE#TO
     C                     Z-ADD1         NRSLT
     C                     ELSE                            x-OFFSET GE #FR
     C                     Z-ADD0         NRSLT
     C                     END                             OFFSET GE #FROM
     C*
     C                     MOVE *BLANK    #ATRIB
     C                     END                             *IN90 EQ '1'
     C                     ENDSR
     C*/EJECT
     C*****************************************************************
     C* SATRIB - Display Attribute Handler
     C*****************************************************************
     C           SATRIB    BEGSR
     C*
     C* FIND TABLE OFFSET BY SCREEN ID AND FIELD NAME AND FIELD INDEX
     C*
     C                     Z-ADD1         X0
     C           #MAP      LOKUPDA1,X0                   90
     C           *IN90     IFEQ '1'                        IF FIND
     C                     MOVEADA2,X0    DA3
     C*
     C*          ------------------------------------------------------
     C*          | @DSPERR/VALIDATION FIELD DISPLAY ATTRIBUTES
     C*          ------------------------------------------------------
     C           DSPERR    IFNE *BLANK
     C           DA3,6     IFNE *BLANK                     TURN ON *PC
     C                     MOVE DA3,6     X1
     C           DSPERR    IFEQ 'X'
     C                     MOVE '0'       *IN80
     C                     MOVEA'1'       *IN,X1
     C                     ELSE                            x-DSPERR EQ 'X'
     C                     MOVEA'0'       *IN,X1
     C                     END                             DSPERR EQ 'X'
     C                     END                             DA3,6 NE *BLANK
     C*
     C           DA3,2     IFNE *BLANK                     TURN ON *RI
     C                     MOVE DA3,2     X1
     C           DSPERR    IFEQ 'X'
     C                     MOVEA'1'       *IN,X1
     C                     ELSE                            x-DSPERR EQ 'X'
     C                     MOVEA'0'       *IN,X1
     C                     END                             DSPERR EQ 'X'
     C                     END                             DA3,2 NE *BLANK
     C*
     C           DA3,3     IFNE *BLANK                     TURN OFF *UL
     C           DA3,16    ANDEQ' Y'                       KEEP UL
     C                     MOVE DA3,3     X1
     C           DSPERR    IFEQ 'X'
     C                     MOVEA'0'       *IN,X1
     C                     ELSE                            x-DSPERR EQ 'X'
     C                     MOVEA'1'       *IN,X1
     C                     END                             DSPERR EQ 'X'
     C                     END                             DA3,3 NE *BLANK
     C                     ELSE                            x-DSPERR NE *BL
     C*
     C*          ------------------------------------------------------
     C*          | *DS - RESET FIELD DISPLAY ATTRIBUTES
     C*          ------------------------------------------------------
     C           #DS       IFNE *BLANK
     C           1         DO   15        X0
     C           DA3,X0    IFNE *BLANK
     C           X0        IFEQ 3
     C           DA3,16    ANDEQ' Y'
     C                     ELSE                            x-X0 EQ 3
     C                     MOVE DA3,X0    X1
     C                     MOVEA'0'       *IN,X1
     C                     END                             X0 EQ 3
     C                     END                             DA3,X0 NE *BLAN
     C                     END                             1 DO 15
     C*          ------------------------------------------------------
     C*          | *DS - TURN ON ORIGINAL COLOR ATTRIBUTES
     C*          |       IF THERE IS NO COLOR SPECIFIED
     C*          ------------------------------------------------------
     C           DA3,17    IFNE *BLANK
     C           #GN       ANDEQ*BLANK
     C           #RD       ANDEQ*BLANK
     C           #WT       ANDEQ*BLANK
     C           #PK       ANDEQ*BLANK
     C           #TQ       ANDEQ*BLANK
     C           #YW       ANDEQ*BLANK
     C           #BU       ANDEQ*BLANK
     C                     MOVE DA3,17    X1
     C                     MOVEA'1'       *IN,X1
     C                     END                             DA3,17 NE *BLAN
     C                     END                             #DS NE *BLANK
     C*
     C*          ------------------------------------------------------
     C*          | LOOP TO TURN ON/OFF ATTRIBUTE INDICATORS
     C*          ------------------------------------------------------
     C           1         DO   15        X0
     C           DA3,X0    IFNE *BLANK
     C                     MOVE DA3,X0    X1
     C*          ------------------------------------------------------
     C*          | TURN ON ATTRIBUTE INDICATORS
     C*          ------------------------------------------------------
     C           DA6,X0    IFNE *BLANK
     C                     MOVEA'1'       *IN,X1
     C                     ELSE                            x-DA6,X0 NE *BL
     C*          ------------------------------------------------------
     C*          | FOR COLOR ATTRIBUTE, RESET OTHER COLOR THAT ARE
     C*          | NOT SPECIFIED.
     C*          ------------------------------------------------------
     C           X0        IFGE 9
     C           X0        ANDLE15
     C           #GN       IFNE *BLANK
     C           #RD       ORNE *BLANK
     C           #WT       ORNE *BLANK
     C           #PK       ORNE *BLANK
     C           #TQ       ORNE *BLANK
     C           #YW       ORNE *BLANK
     C           #BU       ORNE *BLANK
     C                     MOVEA'0'       *IN,X1
     C                     END                             #GN NE *BLANK
     C                     END                             X0 GE 9
     C                     END                             DA6,X0 NE *BLAN
     C                     END                             DA3,X0 NE *BLAN
     C                     END                             1 DO 15
     C                     END                             DSPERR NE *BLAN
     C                     END                             *IN90 EQ '1'
     C*
     C                     MOVE *BLANK    #ATRIB
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SLOCK - Update Lock Flag
     C*****************************************************************
     C           SLOCK     BEGSR
     C           STS01     IFEQ 1218                       LOCK(SYS)-MNUUSR    M
     C           STS01     OREQ 1122                       LOCK(ASSET)
     C                     Z-ADD*ZERO     LCK01            SET OFF LOCK FLAG
     C                     ELSE
     C                     Z-ADD1         LCK01            SET ON LOCK FLAG
     C                     END
     C           STS04     IFEQ 1218                       LOCK(SYS)-MNUHED    M
     C           STS04     OREQ 1122                       LOCK(ASSET)
     C                     Z-ADD*ZERO     LCK04            SET OFF LOCK FLAG
     C                     ELSE
     C                     Z-ADD1         LCK04            SET ON LOCK FLAG
     C                     END
     C           STS05     IFEQ 1218                       LOCK(SYS)-MNUOPT    M
     C           STS05     OREQ 1122                       LOCK(ASSET)
     C                     Z-ADD*ZERO     LCK05            SET OFF LOCK FLAG
     C                     ELSE
     C                     Z-ADD1         LCK05            SET ON LOCK FLAG
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SEXCP - Dummy EXCPT(s) and Read(s)
     C*****************************************************************
     C           SEXCP     BEGSR
     C                     UNLCKMNUHLPX                91  MNUHLPX   MNU010D
     C                     READ MNUHLPX                  90
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SFERR - File Exception Handler
     C*****************************************************************
     C           SFERR     BEGSR
     C                     MOVE 'Y'       MSGFLG           MSG FLAG ON
     C           WFILE#    IFEQ 1                          MNUUSR
     C           STS01     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS01            ASSET LOCK STATUS
     C                     ELSE
     C           STS01     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS01            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C           WFILE#    IFEQ 2                          MNUUSR2
     C           STS02     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS02            ASSET LOCK STATUS
     C                     ELSE
     C           STS02     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS02            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C           WFILE#    IFEQ 3                          MNUUSR1
     C           STS03     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS03            ASSET LOCK STATUS
     C                     ELSE
     C           STS03     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS03            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C           WFILE#    IFEQ 4                          MNUHED
     C           STS04     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS04            ASSET LOCK STATUS
     C                     ELSE
     C           STS04     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS04            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C           WFILE#    IFEQ 5                          MNUOPT
     C           STS05     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS05            ASSET LOCK STATUS
     C                     ELSE
     C           STS05     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS05            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C           WFILE#    IFEQ 6                          MNUPGM
     C           STS06     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS06            ASSET LOCK STATUS
     C                     ELSE
     C           STS06     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS06            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C           WFILE#    IFEQ 7                          MNUHLP
     C           STS07     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS07            ASSET LOCK STATUS
     C                     ELSE
     C           STS07     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS07            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C           WFILE#    IFEQ 8                          MNUHLPX
     C           STS08     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS08            ASSET LOCK STATUS
     C                     ELSE
     C           STS08     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS08            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SMVTOF - Move Fields From Work Area To File(s)
     C*****************************************************************
     C           SMVTOF    BEGSR
     C*          ------------------------------------------------------
     C*          | Move Fields From Work Area To File - MNUUSR
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 01
     C                     MOVELXACHG     MACHG            Allow Change of Locat
     C                     MOVELXADFV1    MADFV1           Default Value for Lev
     C                     MOVELXADFV2    MADFV2           Default Value for Lev
     C                     MOVELXADFV3    MADFV3           Default Value for Lev
     C                     MOVELXAFORN    MAFORN           Forename
     C                     MOVELWK0001    RN0003           Group User
     C                     MOVELXASURN    MASURN           Surname
     C                     MOVELXAUSER    MAUSER           User
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From Work Area To File - MNUHED
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 04
     C                     MOVELXBMNUC    MBMNUC           Menu
     C                     MOVELXBMNUD    MBMNUD           Menu Description
     C                     MOVELWBUSER    MBUSER           User
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From Work Area To File - MNUOPT
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 05
     C                     MOVELXCACTA    MCACTA           Add
     C                     MOVELXCACTD    MCACTD           Delete
     C                     MOVELXCACTR    MCACTR           Revise
     C                     MOVELWCMNUC    MCMNUC           Menu
     C                     MOVELXCOPTC    MCOPTC           Option
     C                     MOVELXCOPTD    MCOPTD           Option Description
     C                     MOVELXCPGMN    MCPGMN           Program Name
     C                     MOVELXCPGMT    MCPGMT           Program Type
     C                     MOVELXCPRM1    MCPRM1           Parameter
     C                     MOVELXCPRM2    MCPRM2           Parameter
     C                     MOVELXCPRM3    MCPRM3           Parameter
     C                     MOVELXCPRM4    MCPRM4           Parameter
     C                     MOVELXCSPGM    MCSPGM           Secondary Program Nam
     C                     MOVELWCUSER    MCUSER           User
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From Work Area To File - MNUHLP
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 07
     C                     MOVELXDMNUC    MDMNUC           Menu
     C                     MOVELXDOPTC    MDOPTC           Option
     C                     Z-ADDXDSEQN    MDSEQN           Sequence Number
     C                     MOVELXDTEXT    MDTEXT           Text
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SMVTOW - Move Fields From File(s) To Work Area
     C*****************************************************************
     C           SMVTOW    BEGSR
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUUSR
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 01
     C                     MOVELMACHG     XACHG            Allow Change of Locat
     C                     MOVELMADFV1    XADFV1           Default Value for Lev
     C                     MOVELMADFV2    XADFV2           Default Value for Lev
     C                     MOVELMADFV3    XADFV3           Default Value for Lev
     C                     MOVELMAFORN    XAFORN           Forename
     C                     MOVELRN0003    WK0001           Group User
     C                     MOVELMASURN    XASURN           Surname
     C                     MOVELMAUSER    XAUSER           User
     C                     Z-ADDREC01     HRC01
     C                     MOVELMAUSER    HAUSER           User
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUUSR2
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 02
     C                     Z-ADDREC02     HRC02
     C                     MOVELRN0005    HD0002           Group User
     C                     MOVELMAUSER    HD0003           User
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUUSR1
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 03
     C                     MOVELMASURN    WK0002           Surname
     C                     MOVELMAUSER    WAUSER           User
     C                     Z-ADDREC03     HRC03
     C                     MOVELMAUSER    HD0001           User
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUHED
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 04
     C                     MOVELMBMNUC    XBMNUC           Menu
     C                     MOVELMBMNUD    XBMNUD           Menu Description
     C                     MOVELMBUSER    WBUSER           User
     C                     Z-ADDREC04     HRC04
     C                     MOVELMBUSER    HBUSER           User
     C                     MOVELMBMNUC    HBMNUC           Menu
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUOPT
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 05
     C                     MOVELMCACTA    XCACTA           Add
     C                     MOVELMCACTD    XCACTD           Delete
     C                     MOVELMCACTR    XCACTR           Revise
     C                     MOVELMCMNUC    WCMNUC           Menu
     C                     MOVELMCOPTC    XCOPTC           Option
     C                     MOVELMCOPTD    XCOPTD           Option Description
     C                     MOVELMCPGMN    XCPGMN           Program Name
     C                     MOVELMCPGMT    XCPGMT           Program Type
     C                     MOVELMCPRM1    XCPRM1           Parameter
     C                     MOVELMCPRM2    XCPRM2           Parameter
     C                     MOVELMCPRM3    XCPRM3           Parameter
     C                     MOVELMCPRM4    XCPRM4           Parameter
     C                     MOVELMCSPGM    XCSPGM           Secondary Program Nam
     C                     MOVELMCUSER    WCUSER           User
     C                     Z-ADDREC05     HRC05
     C                     MOVELMCUSER    HCUSER           User
     C                     MOVELMCMNUC    HCMNUC           Menu
     C                     MOVELMCOPTC    HCOPTC           Option
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUPGM
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 06
     C                     MOVELMPPGMD    WPPGMD           Program Description
     C                     MOVELMPPGMN    WPPGMN           Program Name
     C                     MOVELMPPGMT    WPPGMT           Program Type
     C                     MOVELMPPRM1    WPPRM1           Parameter
     C                     MOVELMPPRM2    WPPRM2           Parameter
     C                     MOVELMPPRM3    WPPRM3           Parameter
     C                     MOVELMPPRM4    WPPRM4           Parameter
     C                     MOVELMPSPGM    WPSPGM           Secondary Program Nam
     C                     Z-ADDREC06     HRC06
     C                     MOVELMPPGMN    HPPGMN           Program Name
     C                     MOVELMPSPGM    HPSPGM           Secondary Program Nam
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUHLP
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 07
     C                     MOVELMDMNUC    XDMNUC           Menu
     C                     MOVELMDOPTC    XDOPTC           Option
     C                     Z-ADDMDSEQN    XDSEQN           Sequence Number
     C                     MOVELMDTEXT    XDTEXT           Text
     C                     Z-ADDREC07     HRC07
     C                     MOVELMDMNUC    HDMNUC           Menu
     C                     MOVELMDOPTC    HDOPTC           Option
     C                     Z-ADDMDSEQN    HDSEQN           Sequence Number
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C*            C o m p i l e   T i m e   A r r a y
     C*               I n i t i a l i z a t i o n
     C*****************************************************************
**   Alpha Constant Array - A1

Y
N
C
R
M
**   Cursor Location on field map Array - DA4
                        Boundary
Screen    Field     Idx From  To
=======================+===+===+
SC0002    WK0001    000005090518
SC0006    XCPGMN    000006680677
SC0009    TOUSER    000014181427
**   Display Attribute Map Array - DA1
                         H R U B C P N P G R P W T Y B K O
Screen    Field/Grp Idx  I I L L S C D R N D K T Q W U U C
=========+=========+===+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=============
SC0001    WK0001    0000  05      05
SC0002    WK0001    0000  04      04
SC0002    XAUSER    0000  09      09  10
SC0004    XBMNUC    0000  03      03  04
SC0004    XBMNUD    0000  05      05  06
SC0006    XCACTA    0000  05      05
SC0006    XCACTD    0000  06      06
SC0006    XCACTR    0000  07      07
SC0006    XCOPTC    0000  08      08
SC0006    XCOPTD    0000  09      09
SC0006    XCPGMN    0000  10      10
SC0006    XCPGMT    0000  11      11
SC0009    CPYMNU    0000  01      01
SC0009    CPYOPT    0000  0203    02                   Y
SC0009    TOUSER    0000  0405    04                   Y
SC0001    FL0001    0000  0103    010402               Y
SC0002    XACHG     0000  05      05
SC0002    XADFV1    0000  06      06
SC0002    XADFV2    0000  07      07
SC0002    XADFV3    0000  08      08
SC0002    DATA      0000    02        01
SC0002    KEY       0000    03
SC0003    FL0002    0000  0103    010402               Y
SC0004    GROUP002  0000    02
SC0004    GROUP001  0000    01
SC0005    FL0003    0000  0103    010402               Y
SC0006    XCSPGM    0000  12      12
SC0006    GROUP004  0000    04        03
SC0006    GROUP003  0000    02        01
SC0007    GRPDEL    0000            04
SC0007    FL0004    0000  0103    01  02
SC0007    XDSEQN    0000    06        05
SC0007    XDTEXT    0000    08        07
SC0008    T01       0001            0201
SC0008    T01       0002            0403
SC0008    T01       0003            0605
SC0008    T01       0004            0807
SC0008    T01       0005            1009
SC0010    T04       0001            0201
SC0010    T04       0002            0403
SC0010    T04       0003            0605
SC0010    T04       0004            0807
SC0010    T04       0005            1009
