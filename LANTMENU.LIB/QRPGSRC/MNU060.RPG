     F/TITLE MNU060       Display User Menus
     F*****************************************************************
     F* Copyright    ** KDP Software Ltd. **      2007
     F*****************************************************************
     F*
     F*  Program ID          -    MNU060
     F*  Application ID      -    MNU060
     F*  Application Name    -          Display User Menus
     F*  Date Generated      -    Mar 15, 2007
     F*
     F*****************************************************************
     F*  Program Narrative
     F*
     F*  This program displays the main user menu.
     F*
     F*  From here all specified menus and options are selected.
     F*
     F*  The menus can be selected by using the roll keys to move the
     F*  highlighted box or by moving the cursor to the required menu, and
     F*  pressing enter.
     F*
     F*  The menu options are displayed by using the enter key on the selected
     F*  menu.
     F*
     F*  Once the menu is displayed the highlighted box must be positioned on
     F*  the required option to run the required application program.
     F*
     F*****************************************************************
     F*  Files Usage
     F*
     F*  MNUHED      - (I/DISK   ) Menu Heading file           MB
     F*  MNUUSR      - (I/DISK   ) Menu Users                  MA
     F*  MNUUSR1     - (I/DISK   ) User Seq
     F*  MNUPGM      - (I/DISK   ) Program Names               MP
     F*  MNUOPT      - (I/DISK   ) Menu Options                MC
     F*  MNUHLP      - (I/DISK   ) Menu Help Text              MD
     F*  MNU060D     - (C/WORKSTN) Generated display file
     F*
     F*****************************************************************
     F*  Function Of Indicators
     F*
     F*  SC0001     - Menu selection
     F*
     F*  01     - SCR001 / MND : DSPATR(RI)
     F*  02     - SCR001 / MND : DSPATR(RI)
     F*  03     - SCR001 / MND : DSPATR(RI)
     F*  04     - SCR001 / MND : DSPATR(RI)
     F*  05     - SCR001 / MND : DSPATR(RI)
     F*  06     - SCR001 / MND : DSPATR(RI)
     F*  07     - SCR001 / MND : DSPATR(RI)
     F*  08     - SCR001 / MND : DSPATR(RI)
     F*  09     - SCR001 / MND : DSPATR(RI)
     F*  10     - SCR001 / MND : DSPATR(RI)
     F*  11     - SCR001 / MND : DSPATR(RI)
     F*  12     - SCR001 / MND : DSPATR(RI)
     F*  99     - SCR001 OVERLAY
     F* N79     - SCR001 PUTOVR
     F*
     F*  SC0002     - Options for menu
     F*
     F*  01     - SCR002 / SEL : DSPATR(ND)
     F*  02     - SCR002 / SEL : DSPATR(ND)
     F*  03     - SCR002 / SEL : DSPATR(ND)
     F*  04     - SCR002 / SEL : DSPATR(ND)
     F*  05     - SCR002 / SEL : DSPATR(ND)
     F*  06     - SCR002 / SEL : DSPATR(ND)
     F*  07     - SCR002 / SEL : DSPATR(ND)
     F*  08     - SCR002 / SEL : DSPATR(ND)
     F*  09     - SCR002 / SEL : DSPATR(ND)
     F*  10     - SCR002 / SEL : DSPATR(ND)
     F*  11     - SCR002 / SOPT : DSPATR(PC)
     F*  11     - SCR002 / SOPT : DSPATR(RI)
     F*  12     - SCR002 / SOPT : DSPATR(UL)
     F*  13     - SCR002 / T03 : DSPATR(RI)
     F*  14     - SCR002 / T03 : DSPATR(RI)
     F*  15     - SCR002 / T03 : DSPATR(RI)
     F*  16     - SCR002 / T03 : DSPATR(RI)
     F*  17     - SCR002 / T03 : DSPATR(RI)
     F*  18     - SCR002 / T03 : DSPATR(RI)
     F*  19     - SCR002 / T03 : DSPATR(RI)
     F*  20     - SCR002 / T03 : DSPATR(RI)
     F*  21     - SCR002 / T03 : DSPATR(RI)
     F*  22     - SCR002 / T03 : DSPATR(RI)
     F* N79     - SCR002 PUTOVR
     F*
     F*  SC0003     - Help text
     F*
     F* N79     - SCR003 PUTOVR
     F*
     F*****************************************************************
     F*  Function Of Subroutines
     F*
     F* SMAIN - Main flow of the program.
     F* SEND - END of program.
     F* S001 - Menu selection
     F* S002 - Options for menu
     F* S003 - Help text
     F* SPBACT - Performs all the program begin actions.
     F* SREDSP -  Redisplay Windows within stack.
     F* S01BKW -
     F* S01FWD -
     F* S03ABR - SCRN SUB
     F* S500 - SCRN SUB
     F* S03AFR - SCRN SUB
     F* S501 - SCRN SUB
     F* S03ALD - SCRN SUB
     F* S502 - SCRN SUB
     F* S03KEY - Set up Keywords
     F* SCSL - Checks if cursor is within the boundray of cordinates
     F* SCMD - Processes OS/400 Commands
     F* SMSG - calls message handling program to either clear, add, or
     F* SHELP - Process help text.
     F* S004   - GETREC D.menu,F.mnuusr,*EQ,WSUSER
     F* S005   - GETREC d.menu,f.mnuusr1,*eq,maguser
     F* S006   - SETLL D.menu,F.mnuhed,WSUSER
     F* S007   - SETLL d.menu,f.mnuhed,wsuser,first
     F* S008   - SETGT D.menu,f.mnuhed,wsuser,LAST
     F* S009   - GETREC D.menu,F.mnuopt,*eq,wsuser,wk05a1,wk05a2
     F* S010   - GETREC d.menu,f.MNUhed,*pv,wsuser
     F* S011   - Process To Reset File Pointer(BOF) - MNUHED
     F* S012   - GETREC D.MENU,F.MNUPGM,*EQ,MBMNUC
     F* S013   - GETREC D.menu,f.MNUhed,*Ne,wsuser
     F* S014   - Process To Reset File Pointer(EOF) - MNUHED
     F* S015   - SETLL D.Menu,F.MNUOPT,WSUSER,WKMENU,SVK03
     F* S016   - GETREC D.Menu,F.MNUOPT,*PV,WSUSER,WKMENU
     F* S017   - Process To Reset File Pointer(BOF) - MNUOPT
     F* S018   - SETLL D.MENU,F.mnuHLP,SVK004,SVK005,SVK04
     F* S019   - GETREC D.MENU,F.mnuHLP,*PV,SVK004,SVK005
     F* S020   - Process To Reset File Pointer(BOF) - MNUHLP
     F* S021   - GETREC D.Menu,F.MNUOPT,*NE,WSUSER,WKMENU
     F* S022   - Process To Reset File Pointer(EOF) - MNUOPT
     F* S023   - GETREC D.MENU,F.MNUHLP,*NE,SVK004,SVK005
     F* S024   - Process To Reset File Pointer(EOF) - MNUHLP
     F* *PSSR - Program Execution Errors Handler
     F* SCLF   - CLF : Cursor Location On Field Handler
     F* SATRIB - Display Attribute Handler
     F* SFERR - File Exception Handler
     F* SMVTOW - Move Fields From File(s) To Work Area
     F*
     F*****************************************************************
     F*            F i l e     S p e c i f i c a t i o n
     F*****************************************************************
     FMNU060D CF  E                    WORKSTN
     F                                              KINFDS DSPFDS
     FMNUHED  IF  E           K        DISK
     F                                              KINFDS FIDS01
     F                                              KINFSR SFERR
     FMNUUSR  IF  E           K        DISK
     F                                              KINFDS FIDS02
     F                                              KINFSR SFERR
     FMNUUSR1 IF  E           K        DISK
     F            MNUUSRF                           KRENAMEFMT001
     F                                              KINFDS FIDS03
     F                                              KINFSR SFERR
     FMNUPGM  IF  E           K        DISK
     F                                              KINFDS FIDS04
     F                                              KINFSR SFERR
     FMNUOPT  IF  E           K        DISK
     F                                              KINFDS FIDS05
     F                                              KINFSR SFERR
     FMNUHLP  IF  E           K        DISK
     F                                              KINFDS FIDS06
     F                                              KINFSR SFERR
     F*
     E*****************************************************************
     E*      A r r a y  /  T a b l e   S p e c i f i c a t i o n
     E*****************************************************************
     E                    B01        10  5
     E                    B02        10  2 0
     E                    MND        12 30
     E                    MNU        12  5
     E                    A01        10 10
     E                    SEL        10  2 0
     E                    T03        10 30
     E                    T05        10 60
     E                    CMD     1   1 80               OS/400 Commands
     E                    CST      2560  1               Command string
     E                    SID        99  8               Scrn stk
     E                    STY        99  1               Scr type
     E                    DA6        15  1               Fld Attr. Wrk Ary
     E                    DA4     1  15 24   DA5     8   CLF : Cursor Loca
     E                    DA3        17  2               Fld Attr. Wrk Ary
     E                    DA1     1  36 24   DA2    34   Fld Attr. Indic t
     E*
     I*****************************************************************
     I*            I n p u t    S p e c i f i c a t i o n
     I*****************************************************************
     IMNUUSRF
     I              MAGUSER                         RN0001
     IFMT001
     I              MAGUSER                         RN0002
     IFIDS01      DS
     I                                     *STATUS  STS01
     I                                    B 397 4000REC01
     IFIDS06      DS
     I                                     *STATUS  STS06
     I                                    B 397 4000REC06
     IFIDS05      DS
     I                                     *STATUS  STS05
     I                                    B 397 4000REC05
     IFIDS04      DS
     I                                     *STATUS  STS04
     I                                    B 397 4000REC04
     IFIDS02      DS
     I                                     *STATUS  STS02
     I                                    B 397 4000REC02
     IFIDS03      DS
     I                                     *STATUS  STS03
     I                                    B 397 4000REC03
     I*
     I* Software Application
     I*
     I@DS001      DS                             30
     I                                        1  30 ZZSOFT
     I*
     I* Company Heading
     I*
     I@DS002      DS                             30
     I                                        1  30 ZZCOMP
     I*
     I* Description for level 1
     I*
     I@DS003      DS                             15
     I                                        1  15 ZZLEV1
     I*
     I* F18 Selection Program
     I*
     I@DS004      DS                             10
     I                                        1  10 ZZPGM1
     I*
     I* INFDS for cursor location
     I*
     IDSPFDS      DS
     I                                      370 370 ROW
     I                                      371 371 COL
     I                                    B 378 3790SFLRRN
     I*
     I* Work Data Structure for cursor
     I*
     I@DS005      DS
     I                                    B   1   20HALFWD
     I                                        2   2 BYTE2
     I*
     I* Display Attribute Structure
     I*
     I@DS006      DS
     I                                        1  10 FLDSCR
     I                                       11  20 FLDNAM
     I                                       21  240FLDINX
     I                                       25  25 DSPERR
     I                                       26  26 #DS
     I                                       27  27 #HI
     I                                       28  28 #RI
     I                                       29  29 #UL
     I                                       30  30 #BL
     I                                       31  31 #CS
     I                                       32  32 #PC
     I                                       33  33 #ND
     I                                       34  34 #PR
     I                                       35  35 #GN
     I                                       36  36 #RD
     I                                       37  37 #PK
     I                                       38  38 #WT
     I                                       39  39 #TQ
     I                                       40  40 #YW
     I                                       41  41 #BU
     I                                       27  41 DA6
     I                                       11  41 #ATRIB
     I                                       25  280#FROM
     I                                       29  320#TO
     I                                       25  320#CLF
     I                                        1  24 #MAP
     I*
     I* Named constants
     I*
     I              'F18=Select'          C         C0001
     I*
     I* Date Manipulation Data Struct.
     I*
     I            DS
     I                                        1   80X1CDAT
     I                                        1   60X1DATE
     I                                        1   20X12
     I                                        3   40X34
     I                                        5   60X56
     I                                        7   80X78
     I*
     I* Message data structure
     I*
     I@DS007      DS
     I                                        1 132 MSGDTA
     I                                        1  51 UMESG1
     I                                       52 102 UMESG2
     I                                      103 132 UMESG3
     I*
     I* Program status data structure
     I*
     ISDS        SDS
     I                                      244 253 WSID
     I                                      254 263 USER
     I                                     *PROGRAM PGM
     I                                       11  150USTAT
     I                                       21  28 USRCLN
     I                                       29  36 UROUTN
     I                                       40  46 MSGID
     I                                       81  90 ULIB
     I                                       91 170 UMSGTX
     I                                      201 208 UFILE
     I                                      209 213 UFSTAT
     I                                      228 235 UFSRCL
     I                                      264 2690UJOBN
     I                                      288 2930UCDAT
     I                                      294 2990UCTIM
     I@DS008      DS
     I                                        1 360 MND
     I                                        1  30 MND001
     I                                       31  60 MND002
     I                                       61  90 MND003
     I                                       91 120 MND004
     I                                      121 150 MND005
     I                                      151 180 MND006
     I                                      181 210 MND007
     I                                      211 240 MND008
     I                                      241 270 MND009
     I                                      271 300 MND010
     I                                      301 330 MND011
     I                                      331 360 MND012
     I@DS009      DS
     I                                    P   1  20 SEL
     I                                    P   1   20SEL001
     I                                    P   3   40SEL002
     I                                    P   5   60SEL003
     I                                    P   7   80SEL004
     I                                    P   9  100SEL005
     I                                    P  11  120SEL006
     I                                    P  13  140SEL007
     I                                    P  15  160SEL008
     I                                    P  17  180SEL009
     I                                    P  19  200SEL010
     I@DS010      DS
     I                                        1 300 T03
     I                                        1  30 T03001
     I                                       31  60 T03002
     I                                       61  90 T03003
     I                                       91 120 T03004
     I                                      121 150 T03005
     I                                      151 180 T03006
     I                                      181 210 T03007
     I                                      211 240 T03008
     I                                      241 270 T03009
     I                                      271 300 T03010
     I@DS011      DS
     I                                        1 600 T05
     I                                        1  60 T05001
     I                                       61 120 T05002
     I                                      121 180 T05003
     I                                      181 240 T05004
     I                                      241 300 T05005
     I                                      301 360 T05006
     I                                      361 420 T05007
     I                                      421 480 T05008
     I                                      481 540 T05009
     I                                      541 600 T05010
     I*
     C*****************************************************************
     C*            P a r a m e t e r     L i s t
     C*****************************************************************
     C*
     C           P0001     PLIST
     C                     PARM           PRDFV1
     C                     PARM           PRDFV2
     C                     PARM           PRDFV3
     C*
     C           P0002     PLIST
     C                     PARM           PARM1
     C                     PARM           PARM2
     C                     PARM           PARM3
     C                     PARM           PARM4
     C*
     C           P0003     PLIST
     C                     PARM           WCSPGM
     C                     PARM           PARM1
     C                     PARM           PARM2
     C                     PARM           PARM3
     C                     PARM           PARM4
     C*
     C           P0004     PLIST
     C                     PARM           PARM1
     C                     PARM           PARM2
     C                     PARM           PARM3
     C*
     C           P0005     PLIST
     C                     PARM           WCSPGM
     C                     PARM           PARM1
     C                     PARM           PARM2
     C                     PARM           PARM3
     C*
     C           P0006     PLIST
     C                     PARM           PARM1
     C                     PARM           PARM2
     C*
     C           P0007     PLIST
     C                     PARM           WCSPGM
     C                     PARM           PARM1
     C                     PARM           PARM2
     C*
     C           P0008     PLIST
     C                     PARM           PARM1
     C*
     C           P0009     PLIST
     C                     PARM           WCSPGM
     C                     PARM           PARM1
     C*
     C           P0010     PLIST
     C                     PARM           WCSPGM
     C*
     C           P0011     PLIST
     C                     PARM           PARM
     C                     PARM           WKLEN
     C*
     C           PMSGCL    PLIST
     C                     PARM           MSGACT  1
     C                     PARM           MSGID
     C                     PARM           MSGF   10
     C                     PARM           MSGFL  10
     C                     PARM           MSGDTA
     C*
     C           PHELP     PLIST
     C                     PARM           APPSET
     C                     PARM           APPTYP
     C                     PARM           APPPGM
     C                     PARM           APPSCR
     C                     PARM           APPROW
     C                     PARM           APPCOL
     C*****************************************************************
     C*                   K e y      L i s t
     C*****************************************************************
     C*
     C           K0001     KLIST
     C                     KFLD           KAUS01
     C*
     C           K0002     KLIST
     C                     KFLD           KAGU01
     C*
     C           K0003     KLIST
     C                     KFLD           KAGU01
     C                     KFLD           KBMN02
     C*
     C           K0004     KLIST
     C                     KFLD           KAGU01
     C                     KFLD           KBMN02
     C                     KFLD           KCOP03
     C*
     C           K0005     KLIST
     C                     KFLD           KBUS01
     C*
     C           K0006     KLIST
     C                     KFLD           KPPG01
     C*
     C           K0007     KLIST
     C                     KFLD           KCUS01
     C                     KFLD           KCMN02
     C                     KFLD           KCOP03
     C*
     C           K0008     KLIST
     C                     KFLD           KCUS01
     C                     KFLD           KCMN02
     C*
     C           K0009     KLIST
     C                     KFLD           KDMN01
     C                     KFLD           KDOP02
     C                     KFLD           KDSE03
     C*
     C           K0010     KLIST
     C                     KFLD           KDMN01
     C                     KFLD           KDOP02
     C*
     C*****************************************************************
     C*        V a r i a b l e s     D e c l a r a t i o n
     C*****************************************************************
     C           LRFLAG    IFNE 'N'
     C           *LIKE     DEFN MBMNUC    WBMNUC           Menu
     C           *LIKE     DEFN MBMNUD    WBMNUD           Menu Description
     C           *LIKE     DEFN MDMNUC    WDMNUC           Menu
     C           *LIKE     DEFN MDOPTC    WDOPTC           Option
     C           *LIKE     DEFN MDSEQN    WDSEQN           Sequence Number
     C           *LIKE     DEFN MDTEXT    WDTEXT           Text
     C           *LIKE     DEFN MCACTA    WCACTA           Add
     C           *LIKE     DEFN MCACTD    WCACTD           Delete
     C           *LIKE     DEFN MCACTR    WCACTR           Revise
     C           *LIKE     DEFN MCMNUC    WCMNUC           Menu
     C           *LIKE     DEFN MCOPTC    WCOPTC           Option
     C           *LIKE     DEFN MCOPTD    WCOPTD           Option Description
     C           *LIKE     DEFN MCPGMN    WCPGMN           Program Name
     C           *LIKE     DEFN MCPGMT    WCPGMT           Program Type
     C           *LIKE     DEFN MCPRM1    WCPRM1           Parameter
     C           *LIKE     DEFN MCPRM2    WCPRM2           Parameter
     C           *LIKE     DEFN MCPRM3    WCPRM3           Parameter
     C           *LIKE     DEFN MCPRM4    WCPRM4           Parameter
     C           *LIKE     DEFN MCSPGM    WCSPGM           Secondary Program Nam
     C           *LIKE     DEFN MCUSER    WCUSER           User
     C           *LIKE     DEFN MACHG     WACHG            Allow Change of Locat
     C           *LIKE     DEFN MADFV1    WADFV1           Default Value for Lev
     C           *LIKE     DEFN MADFV2    WADFV2           Default Value for Lev
     C           *LIKE     DEFN MADFV3    WADFV3           Default Value for Lev
     C           *LIKE     DEFN RN0001    WK0001           Group User
     C           *LIKE     DEFN MACHG     WK0002           Allow Change of Locat
     C           *LIKE     DEFN MADFV1    WK0003           Default Value for Lev
     C           *LIKE     DEFN MADFV2    WK0004           Default Value for Lev
     C           *LIKE     DEFN MADFV3    WK0005           Default Value for Lev
     C           *LIKE     DEFN REC01     HRC01
     C           *LIKE     DEFN MBUSER    HBUSER
     C           *LIKE     DEFN MBMNUC    HBMNUC
     C           *LIKE     DEFN REC06     HRC06
     C           *LIKE     DEFN MDMNUC    HDMNUC
     C           *LIKE     DEFN MDOPTC    HDOPTC
     C           *LIKE     DEFN MDSEQN    HDSEQN
     C           *LIKE     DEFN REC05     HRC05
     C           *LIKE     DEFN MCUSER    HCUSER
     C           *LIKE     DEFN MCMNUC    HCMNUC
     C           *LIKE     DEFN MCOPTC    HCOPTC
     C           *LIKE     DEFN REC04     HRC04
     C           *LIKE     DEFN MPPGMN    HPPGMN
     C           *LIKE     DEFN MPSPGM    HPSPGM
     C           *LIKE     DEFN REC02     HRC02
     C           *LIKE     DEFN MAUSER    HAUSER
     C           *LIKE     DEFN REC03     HRC03
     C           *LIKE     DEFN MAUSER    HD0001
     C                     MOVE *ZEROS    ROW1    30
     C                     MOVE *ZEROS    COL1    30
     C                     MOVE *BLANKS   AARG1 256        Alpha argument1
     C                     MOVE *ZEROS    NARG3  309       Numeric argumnt
     C                     MOVE *ZEROS    C1      30       Numeric wrk fld
     C                     MOVE *BLANKS   AARG2 256        Alpha argument2
     C                     MOVE *BLANKS   ARSLT 256        Alpha result
     C                     MOVE *ZEROS    NARG1  309
     C                     MOVE *ZEROS    NARG2  309
     C                     MOVE *ZEROS    NARG4  309
     C                     MOVE *ZEROS    NRSLT  309
     C                     MOVE *BLANKS   DATFMT  3        Date format
     C                     MOVE *ZEROS    SVDAT   60       Save date
     C                     MOVE *ZEROS    SVYY    20       Save year
     C                     MOVE *ZEROS    SVMM    20       Save month
     C                     MOVE *ZEROS    SVDD    20       Save days
     C                     MOVE *ZEROS    SVDAYS  30       Save days
     C                     MOVE *ZEROS    SVLEAP  10       If leap year
     C                     MOVE *ZEROS    FEB     20       NOD in feb/Leap
     C                     MOVE *ZEROS    SVCY    40       Save days
     C                     MOVE *ZEROS    SVCC    20       Save century
     C                     MOVE 1         CHKVAR  10       Perform Valid.
     C                     MOVE *ZEROS    Z1      30       Loop Counter . . . .S
     C                     MOVE *ZEROS    Z2      30       Loop Counter . . . .S
     C                     MOVE *ZEROS    Z3      30       Loop Counter . . . .S
     C                     MOVE *BLANKS   ERR     1
     C                     MOVE *BLANKS   FIRST   5
     C                     MOVE *BLANKS   FL0001  4
     C                     MOVE *BLANKS   FL0002  4
     C                     MOVE *BLANKS   FL0003 26
     C                     MOVE *ZEROS    FSTSEL  20
     C                     MOVE *BLANKS   FST03   5
     C                     MOVE *ZEROS    FST04   50
     C                     MOVE *BLANKS   LAST    5
     C                     MOVE *ZEROS    LSTSEL  20
     C                     MOVE *BLANKS   LST03   5
     C                     MOVE *ZEROS    LST04   50
     C                     MOVE *ZEROS    MCOL    30
     C                     MOVE *BLANKS   MORE    1
     C                     MOVE *ZEROS    MROW    30
     C                     MOVE *ZEROS    Z4      30       NUM
     C                     MOVE *ZEROS    NUMLST  30
     C                     MOVE *BLANKS   ONCE2   1
     C                     MOVE *ZEROS    OP      20
     C                     MOVE *ZEROS    OPLST   20
     C                     MOVE *BLANKS   OPTU    1
     C                     MOVE *BLANKS   PARM  256
     C                     MOVE *BLANKS   PARM1  20
     C                     MOVE *BLANKS   PARM2  20
     C                     MOVE *BLANKS   PARM3  20
     C                     MOVE *BLANKS   PARM4  20
     C                     MOVE *ZEROS    PCOL    30
     C                     MOVE *ZEROS    PECOL   20
     C                     MOVE *BLANKS   PRDFV1 10
     C                     MOVE *BLANKS   PRDFV2 10
     C                     MOVE *BLANKS   PRDFV3 10
     C                     MOVE *ZEROS    PROW    30
     C                     MOVE *ZEROS    P2ROW   30
     C                     MOVE *ZEROS    SELCNT  20
     C                     MOVE *ZEROS    SOPT    20
     C                     MOVE *BLANKS   SVK004  5
     C                     MOVE *BLANKS   SVK005  5
     C                     MOVE *BLANKS   SVK03   5
     C                     MOVE *ZEROS    SVK04   50
     C                     MOVE *ZEROS    S03CNT  30
     C                     MOVE *ZEROS    S04CNT  30
     C                     MOVE *BLANKS   WKCHG   1
     C                     MOVE *ZEROS    WKCOL   30
     C                     MOVE *ZEROS    WKCOL1  30
     C                     MOVE *BLANKS   WKDFV1 10
     C                     MOVE *BLANKS   WKDFV2 10
     C                     MOVE *BLANKS   WKDFV3 10
     C                     MOVE *ZEROS    WKLEN  155
     C                     MOVE *BLANKS   WKLEV  10
     C                     MOVE *BLANKS   WKMENU  5
     C                     MOVE *ZEROS    Z5      30       Stored NUM
     C                     MOVE *ZEROS    Z6      20       Stored OP
     C                     MOVE *BLANKS   WKOPT   5
     C                     MOVE *ZEROS    WKROW   30
     C                     MOVE *ZEROS    WKROW1  30
     C                     MOVE *BLANKS   WK05A1  5
     C                     MOVE *BLANKS   WK05A2  5
     C                     MOVE *BLANKS   WK40A1 40
     C                     MOVE *BLANKS   WK60A1 60
     C                     MOVE *BLANKS   WSUSER 10
     C                     MOVE *ZEROS    X       30
     C                     MOVE *ZEROS    Y       30
     C                     MOVE *ZEROS    Z       30
     C                     MOVE *ZEROS    LCK01   10       File lock flag
     C                     MOVE *ZEROS    LCK06   10       File lock flag
     C                     MOVE *ZEROS    LCK05   10       File lock flag
     C                     MOVE *ZEROS    LCK04   10       File lock flag
     C                     MOVE *ZEROS    LCK02   10       File lock flag
     C                     MOVE *ZEROS    LCK03   10       File lock flag
     C                     MOVE *BLANKS   CMDERR  1
     C                     MOVE 'N'       IOFLAG  1
     C                     MOVE *BLANKS   SCRNID  8        Scrn ID
     C                     MOVE *BLANKS   IN01   99        Save Ind
     C                     MOVE *BLANKS   IN02   99        Save Ind
     C                     MOVE *BLANKS   DSPLY   1        Display screen flag
     C                     MOVE *BLANKS   SWRD02  1        RD STS
     C                     MOVE *BLANKS   SWRD01  1        RD STS
     C                     MOVE *BLANKS   SWRD05  1        RD STS
     C                     MOVE *BLANKS   SWRD06  1        RD STS
     C                     MOVE *BLANKS   SWRD04  1        RD STS
     C                     MOVE *BLANKS   SWRD03  1        RD STS
     C                     MOVE *BLANKS   KAUS01 10        MAUSER
     C                     MOVE *BLANKS   ARSLT0256
     C                     MOVE *BLANKS   KAGU01 10        MAGUSER
     C                     MOVE *BLANKS   KBMN02  5        MBMNUC
     C                     MOVE *BLANKS   KCOP03  5        MCOPTC
     C                     MOVE 'N'       CMDKEY  1         Cmd key pressed flag
     C                     MOVE *BLANKS   KBUS01 10        MBUSER
     C                     MOVE *BLANKS   KPPG01 10        MPPGMN
     C                     MOVE *BLANKS   KCUS01 10        MCUSER
     C                     MOVE *BLANKS   KCMN02  5        MCMNUC
     C                     MOVE *BLANKS   KDMN01  5        MDMNUC
     C                     MOVE *BLANKS   KDOP02  5        MDOPTC
     C                     MOVE *ZEROS    KDSE03  50       MDSEQN
     C                     MOVE *ZEROS    RSLT01  10
     C                     MOVE *ZEROS    X1CDAT           Init DS/*DTA flds
     C                     MOVE 'N'       MSGFLG  1        Display Msg Flg
     C                     MOVE *BLANKS   APPSET 10
     C                     MOVE '  '      APPSET
     C                     MOVE 'D'       APPTYP  1
     C                     MOVE *BLANKS   APPSCR 10
     C                     MOVE *ZEROS    APPROW  30
     C                     MOVE *ZEROS    APPCOL  30
     C                     MOVE *ZEROS    UERCNT  10
     C                     MOVE *BLANKS   URSUME  6
     C                     MOVE *ZEROS    SEL001           Init DS/*DTA flds
     C                     MOVE *ZEROS    SEL002           Init DS/*DTA flds
     C                     MOVE *ZEROS    SEL003           Init DS/*DTA flds
     C                     MOVE *ZEROS    SEL004           Init DS/*DTA flds
     C                     MOVE *ZEROS    SEL005           Init DS/*DTA flds
     C                     MOVE *ZEROS    SEL006           Init DS/*DTA flds
     C                     MOVE *ZEROS    SEL007           Init DS/*DTA flds
     C                     MOVE *ZEROS    SEL008           Init DS/*DTA flds
     C                     MOVE *ZEROS    SEL009           Init DS/*DTA flds
     C                     MOVE *ZEROS    SEL010           Init DS/*DTA flds
     C                     MOVEL'LANDMENU'APPSET
     C                     MOVELPGM       APPPGM 10
     C                     Z-ADD*ZEROS    LEN    155
     C                     Z-ADD*ZEROS    X0      40       INDEX 0
     C                     Z-ADD*ZEROS    X1      30       INDEX 1
     C                     Z-ADD*ZEROS    OFFSET  40       OFFSET
     C                     Z-ADD*ZEROS    NRSLT  309       RESULT
     C                     Z-ADD*ZEROS    X0      40       INDEX 0
     C                     Z-ADD*ZEROS    SP      30       Stk ptr
     C                     Z-ADD*ZEROS    CT      30       Counter
     C                     Z-ADD*ZEROS    DAS002  50
     C                     Z-ADD*ZEROS    DAS001  50
     C                     Z-ADD*ZEROS    DAS003  50
     C                     Z-ADD*ZEROS    DAS004  50
     C                     Z-ADD*ZEROS    WCNTR   30       COUNTER
     C                     Z-ADD*ZEROS    WGETR   30       COUNTER
     C                     Z-ADD*ZEROS    NRSLT0 309
     C                     Z-ADD*ZEROS    RN0003 309
     C                     Z-ADD*ZEROS    NRSLT1 309
     C                     Z-ADD*ZEROS    SVS01   50       SV STS
     C                     Z-ADD*ZEROS    SVS05   50       SV STS
     C                     Z-ADD*ZEROS    SVS06   50       SV STS
     C                     Z-ADD1         XYES    10       *YES keyword
     C                     Z-ADD1         C3      50       *CST INDEX
     C                     Z-ADD1         CALLST  10       CALL STSEX
     C                     Z-ADD*ZEROS    XNO     10       *NO keyword
     C                     Z-ADD*ZEROS    WFILE#  20       FILE#
     C                     END
     C                     MOVE *BLANK    LRFLAG  1
     C                     MOVE '0'       *IN60
     C*
     C           *NAMVAR   DEFN MNUAPP    @DS001
     C           *NAMVAR   DEFN MNUCOMP   @DS002
     C           *NAMVAR   DEFN MNULEV1   @DS003
     C           *NAMVAR   DEFN MNUPGM1   @DS004
     C/EJECT
     C*****************************************************************
     C*        M a i n l i n e      R o u t i n e
     C*****************************************************************
     C                     EXSR SMAIN
     C*
     C/EJECT
     C*****************************************************************
     C* SMAIN - Main flow of the program.
     C*****************************************************************
     C           SMAIN     BEGSR
     C*
     C*
     C* Clear Message Subfile.
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C*      *------------------------------------------*
     C*      *  Process all screens.                    *
     C*      *------------------------------------------*
     C                     MOVEL'SC0001'  SCRNID
     C                     EXSR SPBACT
     C           *INLR     DOWEQ'0'
     C           SCRNID    CASEQ'SC0001'  S001
     C           SCRNID    CASEQ'SC0002'  S002
     C           SCRNID    CASEQ'SC0003'  S003
     C           SCRNID    CASEQ'SEND'    SEND
     C                     END
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SEND - END of program.
     C*****************************************************************
     C           SEND      BEGSR
     C*
     C           LRFLAG    IFEQ 'Y'
     C           LRFLAG    OREQ *BLANK
     C                     MOVE '1'       *INLR
     C                     END                             LRFLAG EQ 'Y'
     C                     MOVE *BLANK    SCRNID
     C                     RETRN
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* S001 - Menu selection
     C*****************************************************************
     C           S001      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'00000000'*IN,1
     C                     MOVEA'0000'    *IN,9
     C                     MOVEA'1'       *IN,80
     C* ***  Clear list panel and start display on
     C* ***  first record in file. Performed only once
     C* ***  at start of program.
     C* POSCUR WKROW,WKCOL
     C                     Z-ADDWKROW     LIN
     C                     Z-ADDWKCOL     POS
     C*                                                               *
     C* GETDTAA mnucomp
     C                     IN   @DS002                 93
     C                     Z-ADD0         DAS002
     C           *IN93     IFEQ '1'
     C                     Z-ADDUSTAT     DAS002
     C                     END
     C* GETDTAA mnuapp
     C                     IN   @DS001                 93
     C                     Z-ADD0         DAS001
     C           *IN93     IFEQ '1'
     C                     Z-ADDUSTAT     DAS001
     C                     END
     C* GETDTAA mnulev1
     C                     IN   @DS003                 93
     C                     Z-ADD0         DAS003
     C           *IN93     IFEQ '1'
     C                     Z-ADDUSTAT     DAS003
     C                     END
     C* GETDTAA mnupgm1
     C                     IN   @DS004                 93
     C                     Z-ADD0         DAS004
     C           *IN93     IFEQ '1'
     C                     Z-ADDUSTAT     DAS004
     C                     END
     C* PRDFV1 = *blanks
     C                     MOVEL*BLANKS   PRDFV1
     C* PRDFV2 = *blanks
     C                     MOVEL*BLANKS   PRDFV2
     C* PRDFV3 = *blanks
     C                     MOVEL*BLANKS   PRDFV3
     C*                                                               *
     C* Retrieve User Details for menu
     C* WSUSER = *userid
     C                     MOVE *BLANKS   WSUSER
     C                     MOVELUSER      WSUSER
     C* GETREC D.menu,F.mnuusr,*EQ,WSUSER
     C*
     C                     EXSR S004
     C* IF %sts(d.menu,f.mnuusr)=*no
     C*  Status of last file I/O
     C           STS02     IFNE *ZERO
     C* SIGNOFF                                                       *
     C                     MOVEA*BLANKS   CST
     C                     MOVEA'SIGNOFF 'CST
     C                     EXSR SCMD
     C* END                                                           *
     C                     END
     C*                                                               *
     C* If user belongs to a group use group values
     C* IF MAGuser <> *blank
     C           WK0001    IFNE *BLANK
     C* WSUSER = Maguser
     C                     MOVE WK0001    WSUSER
     C* GETREC d.menu,f.mnuusr1,*eq,maguser
     C*
     C                     EXSR S005
     C* WKDFV1 = menu.mnuusr1.madfv1
     C                     MOVE WK0003    WKDFV1
     C* WKDFV2 = menu.mnuusr1.madfv2
     C                     MOVE WK0004    WKDFV2
     C* WKDFV3 = menu.mnuusr1.madfv3
     C                     MOVE WK0005    WKDFV3
     C* WKCHG = menu.mnuusr1.machg
     C                     MOVE WK0002    WKCHG
     C* ELSE                                                          *
     C                     ELSE
     C* WKDFV1 = menu.mnuusr.madfv1
     C                     MOVE WADFV1    WKDFV1
     C* WKDFV2 = menu.mnuusr.madfv2
     C                     MOVE WADFV2    WKDFV2
     C* WKDFV3 = menu.mnuusr.madfv3
     C                     MOVE WADFV3    WKDFV3
     C* WKCHG = menu.mnuusr.machg
     C                     MOVE WACHG     WKCHG
     C* END                                                           *
     C                     END
     C* MNU = ' '
     C                     MOVEA*BLANKS   MNU
     C* MND = ' '
     C                     MOVEA*BLANKS   MND
     C*                                                               *
     C* Set F18=Select text if user is allowed selection
     C* IF wkchg='Y'
     C           WKCHG     IFEQ 'Y'
     C* FL0003 = %BCT('F18=Select',zzlev1,1)
     C*  Concatenate with blanks inserted
     C                     Z-ADD1         C1
     C                     MOVE *BLANKS   AARG1
     C                     MOVELC0001     AARG1
     C           AARG1     CAT  ZZLEV1:C1 ARSLT0    P
     C                     MOVE *BLANKS   FL0003
     C                     MOVELARSLT0    FL0003
     C* ELSE                                                          *
     C                     ELSE
     C* FL0003 = *blanks
     C                     MOVEL*BLANKS   FL0003
     C* END                                                           *
     C                     END
     C*                                                               *
     C* Set file for list to first record in file
     C* SETLL D.menu,F.mnuhed,WSUSER
     C*
     C                     EXSR S006
     C* Fill list Panel
     C* NUM = 1
     C                     Z-ADD1         Z4
     C* EXSUBR S01FWD
     C                     EXSR S01FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     EXFMTSCR001
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Exit
     C*
     C           *INKC     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Exit program on function key 3
     C* EXTPGM                                                        *
     C                     MOVE 'Y'       LRFLAG
     C                     MOVE *BLANK    SCRNID
     C                     MOVEL'SEND'    SCRNID
     C                     GOTO $00199
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Bkw
     C*
     C           *INKG     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backwards
     C* SETLL d.menu,f.mnuhed,wsuser,first
     C*
     C                     EXSR S007
     C*  Fill panel.
     C* EXSUBR S01BKW
     C                     EXSR S01BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *INKH     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forwards
     C* SETGT D.menu,f.mnuhed,wsuser,LAST
     C*
     C                     EXSR S008
     C* EXSUBR S01FWD
     C                     EXSR S01FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Previous
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Exit program on function key 12
     C* EXTPGM                                                        *
     C                     MOVE 'Y'       LRFLAG
     C                     MOVE *BLANK    SCRNID
     C                     MOVEL'SEND'    SCRNID
     C                     GOTO $00199
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Select
     C*
     C           *INKS     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C*                                                               *
     C* If F18 is allowed for user call selection pgm
     C* IF wkchg='Y'
     C           WKCHG     IFEQ 'Y'
     C* CALL zzpgm1,prdfv1,prdfv2,prdfv3
     C                     Z-ADD1         CALLST
     C                     CALL ZZPGM1    P0001        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* IF *CALLSTS=*NO
     C           CALLST    IFEQ XNO
     C* DSPERR *NONE,'MNU0014','MENUERR'
     C                     MOVEL'MNU0014' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* END                                                           *
     C                     END
     C*                                                               *
     C* otherwise display error message
     C* ELSE                                                          *
     C                     ELSE
     C* DSPERR *NONE,'MNU0015','MENUERR'
     C                     MOVEL'MNU0015' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Help
     C*
     C           *IN60     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Process help requests
     C*                                                               *
     C* WKMENU = mnu(num)
     C                     MOVE MNU,Z4    WKMENU
     C* WKOPT = ' '
     C                     MOVEL*BLANKS   WKOPT
     C* EXSCR sc0003
     C                     ADD  1         SP
     C                     MOVEL'SC0001  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN01
     C                     EXSR S003
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVEAIN01      *IN
     C                     MOVE '1'       *IN79
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Page Up
     C*
     C           *IN62     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backwards
     C* IF num > 1
     C           Z4        IFGT 1
     C* Z = num - 1
     C           Z4        SUB  1         NRSLT0
     C                     Z-ADDNRSLT0    Z
     C* IF mnd(z) <> ' '
     C           MND,Z     IFNE *BLANKS
     C* FLDATR mnd(num),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADDZ4        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* NUM = num - 1
     C           Z4        SUB  1         NRSLT0
     C                     Z-ADDNRSLT0    Z4
     C* FLDATR mnd(num),*ri
     C                     MOVE 'X'       #RI
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADDZ4        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* *** Move cursor to highlighted menu
     C* NUMLST = num
     C                     Z-ADDZ4        NUMLST
     C* WKROW = num + mrow
     C           Z4        ADD  MROW      NRSLT0
     C                     Z-ADDNRSLT0    WKROW
     C* WKCOL = mcol
     C                     Z-ADDMCOL      WKCOL
     C* POSCUR wkrow,wkcol
     C                     Z-ADDWKROW     LIN
     C                     Z-ADDWKCOL     POS
     C* END                                                           *
     C                     END
     C* ELSE                                                          *
     C                     ELSE
     C*                                                               *
     C* SETLL d.menu,f.mnuhed,wsuser,first
     C*
     C                     EXSR S007
     C*     2. Fill panel.
     C* EXSUBR S01BKW
     C                     EXSR S01BKW
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C*                                                               *
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Page dwn
     C*
     C           *IN61     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forwards
     C* IF num < 12
     C           Z4        IFLT 12
     C* Z = num + 1
     C           Z4        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z
     C* IF mnd(z) <> ' '
     C           MND,Z     IFNE *BLANKS
     C* FLDATR mnd(num),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADDZ4        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* NUM = num + 1
     C           Z4        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z4
     C* FLDATR mnd(num),*ri
     C                     MOVE 'X'       #RI
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADDZ4        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* *** Move cursor to highlighted menu
     C* NUMLST = num
     C                     Z-ADDZ4        NUMLST
     C* WKROW = num + mrow
     C           Z4        ADD  MROW      NRSLT0
     C                     Z-ADDNRSLT0    WKROW
     C* WKCOL = mcol
     C                     Z-ADDMCOL      WKCOL
     C* POSCUR wkrow,wkcol
     C                     Z-ADDWKROW     LIN
     C                     Z-ADDWKCOL     POS
     C* END                                                           *
     C                     END
     C* ELSE                                                          *
     C                     ELSE
     C*     2. Fill Panel.
     C* SETGT D.menu,f.mnuhed,wsuser,LAST
     C*
     C                     EXSR S008
     C* EXSUBR S01FWD
     C                     EXSR S01FWD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C*                                                               *
     C* Check If cursor is on menu bar
     C* WKNUM = num
     C                     Z-ADDZ4        Z5
     C* IF mnd(1) <> ' '
     C           MND,1     IFNE *BLANKS
     C* IF %clf(mnd(1))
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD1         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* NUM = 1
     C                     Z-ADD1         Z4
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF mnd(2) <> ' '
     C           MND,2     IFNE *BLANKS
     C* IF %clf(mnd(2))
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD2         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* NUM = 2
     C                     Z-ADD2         Z4
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF mnd(3) <> ' '
     C           MND,3     IFNE *BLANKS
     C* IF %clf(mnd(3))
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD3         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* NUM = 3
     C                     Z-ADD3         Z4
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF mnd(4) <> ' '
     C           MND,4     IFNE *BLANKS
     C* IF %clf(mnd(4))
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD4         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* NUM = 4
     C                     Z-ADD4         Z4
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF mnd(5) <> ' '
     C           MND,5     IFNE *BLANKS
     C* IF %clf(mnd(5))
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD5         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* NUM = 5
     C                     Z-ADD5         Z4
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF mnd(6) <> ' '
     C           MND,6     IFNE *BLANKS
     C* IF %clf(mnd(6))
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD6         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* NUM = 6
     C                     Z-ADD6         Z4
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF mnd(7) <> ' '
     C           MND,7     IFNE *BLANKS
     C* IF %clf(mnd(7))
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD7         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* NUM = 7
     C                     Z-ADD7         Z4
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF mnd(8) <> ' '
     C           MND,8     IFNE *BLANKS
     C* IF %clf(mnd(8))
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD8         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* NUM = 8
     C                     Z-ADD8         Z4
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF mnd(9) <> ' '
     C           MND,9     IFNE *BLANKS
     C* IF %clf(mnd(9))
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD9         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* NUM = 9
     C                     Z-ADD9         Z4
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF mnd(10) <> ' '
     C           MND,10    IFNE *BLANKS
     C* IF %clf(mnd(10))
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD10        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* NUM = 10
     C                     Z-ADD10        Z4
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF mnd(11) <> ' '
     C           MND,11    IFNE *BLANKS
     C* IF %clf(mnd(11))
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD11        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* NUM = 11
     C                     Z-ADD11        Z4
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF mnd(12) <> ' '
     C           MND,12    IFNE *BLANKS
     C* IF %clf(mnd(12))
     C*  Cursor location on fields/Keywords.
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD12        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SCLF
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ 1
     C* NUM = 12
     C                     Z-ADD12        Z4
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* WKROW = *row
     C                     Z-ADD0         HALFWD
     C                     MOVE ROW       BYTE2
     C                     MOVE HALFWD    ROW1
     C                     Z-ADDROW1      WKROW
     C* WKCOL = *col
     C                     Z-ADD0         HALFWD
     C                     MOVE COL       BYTE2
     C                     MOVE HALFWD    COL1
     C                     Z-ADDCOL1      WKCOL
     C*                                                               *
     C* IF (num <> 0) & (mnu(num) <> ' ')
     C           Z4        IFNE *ZERO
     C           MNU,Z4    ANDNE*BLANKS
     C* IF numlst <> num
     C           NUMLST    IFNE Z4
     C* FLDATR mnd(wknum),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADDZ5        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR mnd(num),*ri
     C                     MOVE 'X'       #RI
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADDZ4        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* NUMLST = num
     C                     Z-ADDZ4        NUMLST
     C* ELSE                                                          *
     C                     ELSE
     C* WKMENU = mnu(num)
     C                     MOVE MNU,Z4    WKMENU
     C* EXSCR sc0002
     C                     ADD  1         SP
     C                     MOVEL'SC0001  'SID,SP
     C                     MOVE 'F'       STY,SP
     C                     MOVEA*IN       IN01
     C                     EXSR S002
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00199
     C                     END
     C                     MOVEAIN01      *IN
     C                     MOVE '1'       *IN79
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* POSCUR WKROW,WKCOL
     C                     Z-ADDWKROW     LIN
     C                     Z-ADDWKCOL     POS
     C                     END
     C                     END
     C           $00199    ENDSR
     C/EJECT
     C*****************************************************************
     C* S002 - Options for menu
     C*****************************************************************
     C           S002      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'00000000'*IN,1
     C                     MOVEA'00010000'*IN,9
     C                     MOVEA'000000'  *IN,17
     C                     MOVEA'1'       *IN,80
     C*                                                               *
     C* Initialise Fields
     C* FST03 = ' '
     C                     MOVEL*BLANKS   FST03
     C* LST03 = ' '
     C                     MOVEL*BLANKS   LST03
     C* SVK03 = ' '
     C                     MOVEL*BLANKS   SVK03
     C* FSTSEL = 0
     C                     Z-ADD*ZERO     FSTSEL
     C* LSTSEL = 0
     C                     Z-ADD*ZERO     LSTSEL
     C* SEL = 0
     C                     Z-ADD*ZERO     SEL
     C* SELCNT = 0
     C                     Z-ADD*ZERO     SELCNT
     C* SOPT = 0
     C                     Z-ADD*ZERO     SOPT
     C* OPTU = 'N'
     C                     MOVE 'N'       OPTU
     C*                                                               *
     C* ** Position cusror to fisrt line
     C* IF once2  <> 'Y'
     C           ONCE2     IFNE 'Y'
     C* PROW = 6
     C                     Z-ADD6         PROW
     C* PCOL = 40
     C                     Z-ADD40        PCOL
     C* PECOL = 78
     C                     Z-ADD78        PECOL
     C* WKROW1 = prow + 1
     C           PROW      ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    WKROW1
     C* WKCOL1 = pcol
     C                     Z-ADDPCOL      WKCOL1
     C* POSCUR WKROW1,WKCOL1
     C                     Z-ADDWKROW1    LIN
     C                     Z-ADDWKCOL1    POS
     C* ONCE2 = 'Y'
     C                     MOVE 'Y'       ONCE2
     C* END                                                           *
     C                     END
     C*                                                               *
     C* S03CNT = 010
     C                     Z-ADD010       S03CNT
     C*                                                               *
     C* ** Build first List
     C* OP = 1
     C                     Z-ADD1         OP
     C* EXSUBR S03AFR
     C                     EXSR S03AFR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     EXFMTSCR002
     C                     MOVEA'01'      *IN,11
     C                     MOVEA'1'       *IN,80
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Bkw
     C*
     C           *INKG     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backwards
     C* FLDATR t03(op),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* SVK03 = FST03
     C                     MOVE FST03     SVK03
     C* SELCNT = FSTSEL - 1
     C           FSTSEL    SUB  1         NRSLT0
     C                     Z-ADDNRSLT0    SELCNT
     C* ** Array Backwards read.
     C* EXSUBR S03ABR
     C                     EXSR S03ABR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *INKH     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forwards
     C* FLDATR t03(op),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* SVK03 = LST03
     C                     MOVE LST03     SVK03
     C* SELCNT = LSTSEL - 1
     C           LSTSEL    SUB  1         NRSLT0
     C                     Z-ADDNRSLT0    SELCNT
     C* ** Array Forward Read.
     C* EXSUBR S03AFR
     C                     EXSR S03AFR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Return to previous screen
     C* *** on function key 12
     C* EXTSCR                                                        *
     C                     GOTO $00299
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Select
     C*
     C           *INKS     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C*                                                               *
     C* If F18 is allowed for user call selection pgm
     C* IF wkchg='Y'
     C           WKCHG     IFEQ 'Y'
     C* CALL zzpgm1,prdfv1,prdfv2,prdfv3
     C                     Z-ADD1         CALLST
     C                     CALL ZZPGM1    P0001        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* IF *CALLSTS=*NO
     C           CALLST    IFEQ XNO
     C* DSPERR *NONE,'MNU0014','MENUERR'
     C                     MOVEL'MNU0014' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* END                                                           *
     C                     END
     C*                                                               *
     C* otherwise display error message
     C* ELSE                                                          *
     C                     ELSE
     C* DSPERR *NONE,'MNU0015','MENUERR'
     C                     MOVEL'MNU0015' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Help
     C*
     C           *IN60     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Process help requests
     C*                                                               *
     C* WKOPT = b01(op)
     C                     MOVE B01,OP    WKOPT
     C* EXSCR sc0003
     C                     ADD  1         SP
     C                     MOVEL'SC0002  'SID,SP
     C                     MOVE 'W'       STY,SP
     C                     MOVEA*IN       IN02
     C                     EXSR S003
     C                     MOVE *BLANKS   SID,SP
     C                     MOVE *BLANKS   STY,SP
     C                     SUB  1         SP
     C                     EXSR SREDSP
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C                     MOVEAIN02      *IN
     C                     MOVE '1'       *IN79
     C* X = 0
     C                     Z-ADD*ZERO     X
     C* DO 1,10,x
     C           1         DO   10        X
     C* FLDATR T03(x),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDX         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* IF x = op
     C           X         IFEQ OP
     C* FLDATR t03(x),*ri
     C                     MOVE 'X'       #RI
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDX         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Bkwd
     C*
     C           *IN62     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backwards
     C*                                                               *
     C* IF op = 1
     C           OP        IFEQ 1
     C* FLDATR t03(op),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* SVK03 = FST03
     C                     MOVE FST03     SVK03
     C* SELCNT = FSTSEL - 1
     C           FSTSEL    SUB  1         NRSLT0
     C                     Z-ADDNRSLT0    SELCNT
     C* ** Array Backwards read.
     C* EXSUBR S03ABR
     C                     EXSR S03ABR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C*                                                               *
     C* ELSE                                                          *
     C                     ELSE
     C* Z = op - 1
     C           OP        SUB  1         NRSLT0
     C                     Z-ADDNRSLT0    Z
     C* IF t03(z) <> ' '
     C           T03,Z     IFNE *BLANKS
     C* FLDATR t03(op),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* OP = op - 1
     C           OP        SUB  1         NRSLT0
     C                     Z-ADDNRSLT0    OP
     C* FLDATR t03(op),*ri
     C                     MOVE 'X'       #RI
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* *** Move cursor to highlighted option
     C* OPLST = op
     C                     Z-ADDOP        OPLST
     C* WKROW1 = op + prow
     C           OP        ADD  PROW      NRSLT0
     C                     Z-ADDNRSLT0    WKROW1
     C* WKCOL1 = pcol
     C                     Z-ADDPCOL      WKCOL1
     C* POSCUR wkrow1,wkcol1
     C                     Z-ADDWKROW1    LIN
     C                     Z-ADDWKCOL1    POS
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *IN61     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forwards
     C*                                                               *
     C* IF op = 10
     C           OP        IFEQ 10
     C* FLDATR t03(op),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* SVK03 = LST03
     C                     MOVE LST03     SVK03
     C* SELCNT = LSTSEL - 1
     C           LSTSEL    SUB  1         NRSLT0
     C                     Z-ADDNRSLT0    SELCNT
     C* ** Array Forward Read.
     C* EXSUBR S03AFR
     C                     EXSR S03AFR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C*                                                               *
     C* ELSE                                                          *
     C                     ELSE
     C* Z = op + 1
     C           OP        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    Z
     C* FLDATR t03(op),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* IF t03(Z) <> ' '
     C           T03,Z     IFNE *BLANKS
     C* OP = op + 1
     C           OP        ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    OP
     C* ELSE                                                          *
     C                     ELSE
     C* OP = 1
     C                     Z-ADD1         OP
     C* END                                                           *
     C                     END
     C* FLDATR t03(op),*ri
     C                     MOVE 'X'       #RI
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* *** Move cursor to highlighted option
     C* OPLST = op
     C                     Z-ADDOP        OPLST
     C* WKROW1 = op +  prow
     C           OP        ADD  PROW      NRSLT0
     C                     Z-ADDNRSLT0    WKROW1
     C* WKCOL1 = pcol
     C                     Z-ADDPCOL      WKCOL1
     C* POSCUR wkrow1,wkcol1
     C                     Z-ADDWKROW1    LIN
     C                     Z-ADDWKCOL1    POS
     C* END                                                           *
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C*                                                               *
     C* Check If cursor is on menu bar
     C* Bypass If cursor is on option selection & option no was used last
     C* ERR = 'N'
     C                     MOVE 'N'       ERR
     C* WKOP = op
     C                     Z-ADDOP        Z6
     C* IF (OPTU='N') *OR (%CLF(SOPT)=*NO)
     C* P2ROW = prow + 1
     C           PROW      ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    P2ROW
     C* IF t03(1) <> ' '
     C           T03,1     IFNE *BLANKS
     C* IF %CLF(T03(1))
     C* IF %CSL(P2row,PCOL,P2ROW,PECOL)=*YES
     C*  Cursor Location
     C                     Z-ADDP2ROW     NARG1
     C                     Z-ADDPCOL      NARG2
     C                     Z-ADDP2ROW     NARG3
     C                     Z-ADDPECOL     NARG4
     C                     EXSR SCSL
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* OP = 1
     C                     Z-ADD1         OP
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* P2ROW = prow + 2
     C           PROW      ADD  2         NRSLT0
     C                     Z-ADDNRSLT0    P2ROW
     C* IF t03(2) <> ' '
     C           T03,2     IFNE *BLANKS
     C* IF %clf(t03(2))
     C* IF %CSL(P2row,PCOL,P2row,PECOL)=*YES
     C*  Cursor Location
     C                     Z-ADDP2ROW     NARG1
     C                     Z-ADDPCOL      NARG2
     C                     Z-ADDP2ROW     NARG3
     C                     Z-ADDPECOL     NARG4
     C                     EXSR SCSL
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* OP = 2
     C                     Z-ADD2         OP
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* P2ROW = prow + 3
     C           PROW      ADD  3         NRSLT0
     C                     Z-ADDNRSLT0    P2ROW
     C* IF t03(3) <> ' '
     C           T03,3     IFNE *BLANKS
     C* IF %clf(t03(3))
     C* IF %CSL(P2row,PCOL,P2row,PECOL)=*YES
     C*  Cursor Location
     C                     Z-ADDP2ROW     NARG1
     C                     Z-ADDPCOL      NARG2
     C                     Z-ADDP2ROW     NARG3
     C                     Z-ADDPECOL     NARG4
     C                     EXSR SCSL
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* OP = 3
     C                     Z-ADD3         OP
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* P2ROW = prow + 4
     C           PROW      ADD  4         NRSLT0
     C                     Z-ADDNRSLT0    P2ROW
     C* IF t03(4) <> ' '
     C           T03,4     IFNE *BLANKS
     C* IF %clf(t03(4))
     C* IF %CSL(P2row,PCOL,P2row,PECOL)=*YES
     C*  Cursor Location
     C                     Z-ADDP2ROW     NARG1
     C                     Z-ADDPCOL      NARG2
     C                     Z-ADDP2ROW     NARG3
     C                     Z-ADDPECOL     NARG4
     C                     EXSR SCSL
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* OP = 4
     C                     Z-ADD4         OP
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* P2ROW = prow + 5
     C           PROW      ADD  5         NRSLT0
     C                     Z-ADDNRSLT0    P2ROW
     C* IF t03(5) <> ' '
     C           T03,5     IFNE *BLANKS
     C* IF %clf(t03(5))
     C* IF %CSL(P2row,PCOL,P2row,PECOL)=*YES
     C*  Cursor Location
     C                     Z-ADDP2ROW     NARG1
     C                     Z-ADDPCOL      NARG2
     C                     Z-ADDP2ROW     NARG3
     C                     Z-ADDPECOL     NARG4
     C                     EXSR SCSL
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* OP = 5
     C                     Z-ADD5         OP
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* P2ROW = prow + 6
     C           PROW      ADD  6         NRSLT0
     C                     Z-ADDNRSLT0    P2ROW
     C* IF t03(6) <> ' '
     C           T03,6     IFNE *BLANKS
     C* IF %clf(t03(6))
     C* IF %CSL(P2row,PCOL,P2row,PECOL)=*YES
     C*  Cursor Location
     C                     Z-ADDP2ROW     NARG1
     C                     Z-ADDPCOL      NARG2
     C                     Z-ADDP2ROW     NARG3
     C                     Z-ADDPECOL     NARG4
     C                     EXSR SCSL
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* OP = 6
     C                     Z-ADD6         OP
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* P2ROW = prow + 7
     C           PROW      ADD  7         NRSLT0
     C                     Z-ADDNRSLT0    P2ROW
     C* IF t03(7) <> ' '
     C           T03,7     IFNE *BLANKS
     C* IF %clf(t03(7))
     C* IF %CSL(P2row,PCOL,P2row,PECOL)=*YES
     C*  Cursor Location
     C                     Z-ADDP2ROW     NARG1
     C                     Z-ADDPCOL      NARG2
     C                     Z-ADDP2ROW     NARG3
     C                     Z-ADDPECOL     NARG4
     C                     EXSR SCSL
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* OP = 7
     C                     Z-ADD7         OP
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* P2ROW = prow + 8
     C           PROW      ADD  8         NRSLT0
     C                     Z-ADDNRSLT0    P2ROW
     C* IF t03(8) <> ' '
     C           T03,8     IFNE *BLANKS
     C* IF %clf(t03(8))
     C* IF %CSL(P2row,PCOL,P2row,PECOL)=*YES
     C*  Cursor Location
     C                     Z-ADDP2ROW     NARG1
     C                     Z-ADDPCOL      NARG2
     C                     Z-ADDP2ROW     NARG3
     C                     Z-ADDPECOL     NARG4
     C                     EXSR SCSL
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* OP = 8
     C                     Z-ADD8         OP
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* P2ROW = prow + 9
     C           PROW      ADD  9         NRSLT0
     C                     Z-ADDNRSLT0    P2ROW
     C* IF t03(9) <> ' '
     C           T03,9     IFNE *BLANKS
     C* IF %clf(t03(9))
     C* IF %CSL(P2row,PCOL,P2row,PECOL)=*YES
     C*  Cursor Location
     C                     Z-ADDP2ROW     NARG1
     C                     Z-ADDPCOL      NARG2
     C                     Z-ADDP2ROW     NARG3
     C                     Z-ADDPECOL     NARG4
     C                     EXSR SCSL
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* OP = 9
     C                     Z-ADD9         OP
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* P2ROW = prow + 10
     C           PROW      ADD  10        NRSLT0
     C                     Z-ADDNRSLT0    P2ROW
     C* IF t03(10) <> ' '
     C           T03,10    IFNE *BLANKS
     C* IF %clf(t03(10))
     C* IF %CSL(P2row,PCOL,P2row,PECOL)=*YES
     C*  Cursor Location
     C                     Z-ADDP2ROW     NARG1
     C                     Z-ADDPCOL      NARG2
     C                     Z-ADDP2ROW     NARG3
     C                     Z-ADDPECOL     NARG4
     C                     EXSR SCSL
     C                     Z-ADDNRSLT     NRSLT0
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* OP = 10
     C                     Z-ADD10        OP
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* END  ; optu ='N' or  cursor not on option select field
     C*                                                               *
     C* Preserve cursor position
     C* WKROW1 = *row
     C                     Z-ADD0         HALFWD
     C                     MOVE ROW       BYTE2
     C                     MOVE HALFWD    ROW1
     C                     Z-ADDROW1      WKROW1
     C* WKCOL1 = *col
     C                     Z-ADD0         HALFWD
     C                     MOVE COL       BYTE2
     C                     MOVE HALFWD    COL1
     C                     Z-ADDCOL1      WKCOL1
     C*                                                               *
     C* If option no selected this takes priority over cursor
     C* IF sopt <> 0
     C           SOPT      IFNE *ZERO
     C* OPTU = 'Y'
     C                     MOVE 'Y'       OPTU
     C*                                                               *
     C* Roll Up or down until option no is found
     C* DOW (More = 'Y') *AND ((sopt < fstsel) *OR (sopt > lstsel))
     C           MORE      IFEQ 'Y'
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           SOPT      IFLT FSTSEL
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           SOPT      IFGT LSTSEL
     C                     Z-ADD1         NRSLT1
     C                     ELSE
     C                     Z-ADD0         NRSLT1
     C                     END
     C           RN0003    IFEQ 1
     C           NRSLT1    OREQ 1
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           NRSLT0    IFEQ 1
     C           RN0003    ANDEQ1
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C                     Z-ADDNRSLT0    RSLT01
     C           RSLT01    DOWEQ1
     C* IF (sopt < fstsel)
     C           SOPT      IFLT FSTSEL
     C* FLDATR t03(op),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* SVK03 = FST03
     C                     MOVE FST03     SVK03
     C* SELCNT = fstsel - 1
     C           FSTSEL    SUB  1         NRSLT1
     C                     Z-ADDNRSLT1    SELCNT
     C* EXSUBR S03ABR
     C                     EXSR S03ABR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C* END                                                           *
     C                     END
     C* IF (sopt > lstsel)
     C           SOPT      IFGT LSTSEL
     C* FLDATR t03(op),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* SVK03 = LST03
     C                     MOVE LST03     SVK03
     C* SELCNT = LStsel - 1
     C           LSTSEL    SUB  1         NRSLT1
     C                     Z-ADDNRSLT1    SELCNT
     C* EXSUBR S03AFR
     C                     EXSR S03AFR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C* END                                                           *
     C                     END
     C* END  ;
     C           MORE      IFEQ 'Y'
     C                     Z-ADD1         NRSLT1
     C                     ELSE
     C                     Z-ADD0         NRSLT1
     C                     END
     C           SOPT      IFLT FSTSEL
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           SOPT      IFGT LSTSEL
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           RN0003    IFEQ 1
     C           NRSLT0    OREQ 1
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           NRSLT1    IFEQ 1
     C           RN0003    ANDEQ1
     C                     Z-ADD1         NRSLT1
     C                     ELSE
     C                     Z-ADD0         NRSLT1
     C                     END
     C                     Z-ADDNRSLT1    RSLT01
     C                     END
     C*                                                               *
     C* If option no is greater than last one on file - error
     C* FLDATR t03(wkop),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDZ6        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* IF sopt > lstsel
     C           SOPT      IFGT LSTSEL
     C* DSPERR SOPT,'MNU0017','MENUERR'
     C                     MOVEL'MNU0017' MSGID
     C                     MOVEL'MENUERR' MSGF
     C                     MOVE 'A'       MSGACT
     C                     EXSR SMSG
     C                     MOVE 'X'       DSPERR
     C                     MOVEL'SOPT    'FLDNAM
     C                     Z-ADD*ZERO     FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* ERR = 'Y'
     C                     MOVE 'Y'       ERR
     C*                                                               *
     C* ELSE                                                          *
     C                     ELSE
     C* Y = 1
     C                     Z-ADD1         Y
     C* IF %ALK(SEL,SOPT,Y)=*yes
     C*  Perform array Look up.
     C           SOPT      LOKUPSEL,Y                    93
     C           *IN93     IFEQ '1'
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ 1
     C* OP = Y
     C                     Z-ADDY         OP
     C* FLDATR t03(op),*ri
     C                     MOVE 'X'       #RI
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* OPLST = op
     C                     Z-ADDOP        OPLST
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* If option no not used set option flag to 'N'
     C* ELSE                                                          *
     C                     ELSE
     C* OPTU = 'N'
     C                     MOVE 'N'       OPTU
     C* END  ; option no entered
     C                     END
     C*                                                               *
     C* If enter pressed once - highlight option
     C* IF (err = 'N') & (op <> 0) & (t03(op) <> ' ')
     C           ERR       IFEQ 'N'
     C           OP        ANDNE*ZERO
     C           T03,OP    ANDNE*BLANKS
     C* IF oplst <> op
     C           OPLST     IFNE OP
     C* FLDATR t03(wkop),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDZ6        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR t03(op),*ri
     C                     MOVE 'X'       #RI
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* OPLST = op
     C                     Z-ADDOP        OPLST
     C* ELSE                                                          *
     C                     ELSE
     C* ** Check for any selected records.
     C*    1. Check each array element that
     C*       was loaded in load routine.
     C* WK05A1 = wkmenu
     C                     MOVE WKMENU    WK05A1
     C* WK05A2 = b01(op)
     C                     MOVE B01,OP    WK05A2
     C* GETREC D.menu,F.mnuopt,*eq,wsuser,wk05a1,wk05a2
     C*
     C                     EXSR S009
     C* IF b01(op)<> ' '
     C           B01,OP    IFNE *BLANKS
     C* IF mcpgmt = ' ' | mcpgmt = 'R'
     C           WCPGMT    IFEQ *BLANKS
     C           WCPGMT    OREQ 'R'
     C*                                                               *
     C* Set up Keywords
     C* PARM4 = mcprm4
     C                     MOVE WCPRM4    PARM4
     C* PARM3 = mcprm3
     C                     MOVE WCPRM3    PARM3
     C* PARM2 = mcprm2
     C                     MOVE WCPRM2    PARM2
     C* PARM1 = mcprm1
     C                     MOVE WCPRM1    PARM1
     C*                                                               *
     C* EXSUBR S03KEY   ; *BLANKS, *BLANK, *USERID
     C                     EXSR S03KEY
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C*                                                               *
     C* IF mcprm4 <> ' '
     C           WCPRM4    IFNE *BLANKS
     C* IF mcspgm = ' '
     C           WCSPGM    IFEQ *BLANKS
     C* CALL mcpgmn,PARM1,PARM2,PARM3,PARM4
     C                     Z-ADD1         CALLST
     C                     CALL WCPGMN    P0002        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* ELSE                                                          *
     C                     ELSE
     C* CALL mcpgmn,mcspgm,PARM1,PARM2,PARM3,PARM4
     C                     Z-ADD1         CALLST
     C                     CALL WCPGMN    P0003        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ELSE  ; 3 parms to pass
     C                     ELSE
     C* IF McPRM3 <> ' '
     C           WCPRM3    IFNE *BLANKS
     C* IF mcspgm = ' '
     C           WCSPGM    IFEQ *BLANKS
     C* CALL mcpgmn,PARM1,PARM2,PARM3
     C                     Z-ADD1         CALLST
     C                     CALL WCPGMN    P0004        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* ELSE                                                          *
     C                     ELSE
     C* CALL mcpgmn,mcspgm,PARM1,PARM2,PARM3
     C                     Z-ADD1         CALLST
     C                     CALL WCPGMN    P0005        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ELSE  ; 2 parms to pass
     C                     ELSE
     C* IF McPRM2 <> ' '
     C           WCPRM2    IFNE *BLANKS
     C* IF mcspgm = ' '
     C           WCSPGM    IFEQ *BLANKS
     C* CALL mcpgmn,PARM1,PARM2
     C                     Z-ADD1         CALLST
     C                     CALL WCPGMN    P0006        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* ELSE                                                          *
     C                     ELSE
     C* CALL mcpgmn,mcspgm,PARM1,PARM2
     C                     Z-ADD1         CALLST
     C                     CALL WCPGMN    P0007        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ELSE  ; 1 parm to pass
     C                     ELSE
     C* IF McPRM1 <> ' '
     C           WCPRM1    IFNE *BLANKS
     C* IF mcspgm = ' '
     C           WCSPGM    IFEQ *BLANKS
     C* CALL mcpgmn,PARM1
     C                     Z-ADD1         CALLST
     C                     CALL WCPGMN    P0008        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* ELSE                                                          *
     C                     ELSE
     C* CALL mcpgmn,mcspgm,PARM1
     C                     Z-ADD1         CALLST
     C                     CALL WCPGMN    P0009        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ELSE  ; No Parameters
     C                     ELSE
     C* IF mcspgm = ' '
     C           WCSPGM    IFEQ *BLANKS
     C* CALL mcpgmn
     C                     Z-ADD1         CALLST
     C                     CALL WCPGMN                 93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* ELSE                                                          *
     C                     ELSE
     C* CALL mcpgmn,mcspgm
     C                     Z-ADD1         CALLST
     C                     CALL WCPGMN    P0010        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* END                                                           *
     C                     END
     C* END  ; mcprm1
     C                     END
     C* END  ; mcprm2
     C                     END
     C* END  ; mcprm3
     C                     END
     C* END  ; mcprm4
     C                     END
     C* END ; Option type blank
     C                     END
     C*                                                               *
     C* Call CL
     C* IF mcpgmt = 'C'
     C           WCPGMT    IFEQ 'C'
     C* WK40A1 = %APP(mcprm1,mcprm2)
     C*  Append two fields
     C                     MOVE *BLANK    ARSLT0
     C           WCPRM1    CAT  WCPRM2    ARSLT0
     C                     MOVE *BLANKS   WK40A1
     C                     MOVELARSLT0    WK40A1
     C* WK60A1 = %app(wk40a1,mcprm3)
     C*  Append two fields
     C                     MOVE *BLANK    ARSLT0
     C           WK40A1    CAT  WCPRM3    ARSLT0
     C                     MOVE *BLANKS   WK60A1
     C                     MOVELARSLT0    WK60A1
     C* PARM = %bct(mcpgmn,wk40a1,1)
     C*  Concatenate with blanks inserted
     C                     Z-ADD1         C1
     C           WCPGMN    CAT  WK40A1:C1 ARSLT0    P
     C                     MOVE *BLANKS   PARM
     C                     MOVELARSLT0    PARM
     C* WKLEN = 256
     C                     Z-ADD256       WKLEN
     C* CALL 'QCMDEXC',parm,wklen
     C                     Z-ADD1         CALLST
     C                     CALL 'QCMDEXC' P0011        93
     C                     MOVE '1'       *IN79
     C           *IN93     IFEQ '1'
     C                     MOVE 'Y'       MSGFLG
     C                     Z-ADD*ZERO     CALLST
     C                     END
     C* END                                                           *
     C                     END
     C* Load new menu
     C* IF mcpgmt = 'M'
     C           WCPGMT    IFEQ 'M'
     C* FST03 = ' '
     C                     MOVEL*BLANKS   FST03
     C* LST03 = ' '
     C                     MOVEL*BLANKS   LST03
     C* SVK03 = ' '
     C                     MOVEL*BLANKS   SVK03
     C* FSTSEL = 0
     C                     Z-ADD*ZERO     FSTSEL
     C* LSTSEL = 0
     C                     Z-ADD*ZERO     LSTSEL
     C* SEL = 0
     C                     Z-ADD*ZERO     SEL
     C* SELCNT = 0
     C                     Z-ADD*ZERO     SELCNT
     C* SOPT = 0
     C                     Z-ADD*ZERO     SOPT
     C* OPTU = 'N'
     C                     MOVE 'N'       OPTU
     C* WKMENU = MCPGMN
     C                     MOVE *BLANKS   WKMENU
     C                     MOVELWCPGMN    WKMENU
     C* ** Array forward read.
     C* FLDATR t03(wkop),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDZ6        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR t03(op),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* OP = 1
     C                     Z-ADD1         OP
     C* EXSUBR S03AFR
     C                     EXSR S03AFR
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00299
     C                     END
     C* END                                                           *
     C                     END
     C*                                                               *
     C* END                                                           *
     C                     END
     C* END                                                           *
     C                     END
     C* SOPT = 0
     C                     Z-ADD*ZERO     SOPT
     C* END                                                           *
     C                     END
     C*                                                               *
     C* DSPMSG                                                        *
     C                     MOVE 'Y'       MSGFLG
     C* IF optu='Y'
     C           OPTU      IFEQ 'Y'
     C* POSCUR 0,0
     C                     Z-ADD*ZERO     LIN
     C                     Z-ADD*ZERO     POS
     C                     MOVE '1'       *IN79
     C* ELSE                                                          *
     C                     ELSE
     C* POSCUR wkrow1,wkcol1
     C                     Z-ADDWKROW1    LIN
     C                     Z-ADDWKCOL1    POS
     C* END                                                           *
     C                     END
     C                     END
     C                     END
     C           $00299    ENDSR
     C/EJECT
     C*****************************************************************
     C* S003 - Help text
     C*****************************************************************
     C           S003      BEGSR
     C*
     C                     MOVE 'Y'       DSPLY
     C                     MOVEA'00000000'*IN,1
     C                     MOVEA'00010000'*IN,9
     C                     MOVEA'000000'  *IN,17
     C                     MOVEA'1'       *IN,80
     C* FST04 = 0
     C                     Z-ADD*ZERO     FST04
     C* LST04 = 0
     C                     Z-ADD*ZERO     LST04
     C* SVK04 = 0
     C                     Z-ADD*ZERO     SVK04
     C* SVK004 = WKmenu
     C                     MOVE WKMENU    SVK004
     C* SVK005 = WKopt
     C                     MOVE WKOPT     SVK005
     C* S04CNT = 010
     C                     Z-ADD010       S04CNT
     C* ** Array forward read.
     C* EXSUBR S03AFR
     C                     EXSR S501
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C*
     C           DSPLY     DOWEQ'Y'
     C*
     C                     MOVE '1'       *IN79
     C                     MOVE '0'       *IN99
     C* Write sub-file messages
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE '1'       *IN99
     C                     WRITEMSGCTL
     C                     END
     C                     EXFMTSCR003
     C                     MOVE 'N'       CMDKEY
     C*
     C* Clear Message Subfile.
     C           MSGFLG    IFEQ 'Y'
     C                     MOVE 'C'       MSGACT
     C                     EXSR SMSG
     C                     WRITEMSGCTL
     C                     END
     C*
     C* Cancel
     C*
     C           *INKL     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Return to previous screen
     C* *** on function key 12
     C* EXTSCR                                                        *
     C                     GOTO $00399
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Bkwd
     C*
     C           *IN62     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information backwards
     C* SVK04 = FST04
     C                     Z-ADDFST04     SVK04
     C* ** Array Backwards read.
     C* EXSUBR S03ABR
     C                     EXSR S500
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C*
     C* Fwd
     C*
     C           *IN61     IFEQ '1'
     C           CMDKEY    ANDEQ'N'
     C* *** Scroll information forwards
     C* SVK04 = LST04
     C                     Z-ADDLST04     SVK04
     C* ** Array Forward Read.
     C* EXSUBR S03AFR
     C                     EXSR S501
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $00399
     C                     END
     C                     MOVE 'Y'       CMDKEY
     C                     END
     C           CMDKEY    IFEQ 'N'
     C* EXTSCR                                                        *
     C                     GOTO $00399
     C                     END
     C                     END
     C           $00399    ENDSR
     C/EJECT
     C*****************************************************************
     C* SPBACT - Performs all the program begin actions.
     C*****************************************************************
     C           SPBACT    BEGSR
     C*
     C* PGMBEGACT                                                     *
     C* CALL PGM(RMTOBJ/APITEL)
     C                     MOVEACMD,1     CST
     C                     Z-ADD24        C3
     C                     MOVEA*BLANK    CST,C3
     C                     EXSR SCMD
     C* MROW = 5
     C                     Z-ADD5         MROW
     C* MCOL = 4
     C                     Z-ADD4         MCOL
     C* WKROW = mrow + 1
     C           MROW      ADD  1         NRSLT0
     C                     Z-ADDNRSLT0    WKROW
     C* WKCOL = mcol
     C                     Z-ADDMCOL      WKCOL
     C* END                                                           *
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SREDSP -  Redisplay Windows within stack.
     C*****************************************************************
     C           SREDSP    BEGSR
     C*
     C                     Z-ADDSP        CT
     C           CT        DOWGT1
     C           STY,CT    ANDNE'F'
     C                     SUB  1         CT
     C                     END
     C*
     C*  Redisplay Windows within stack.
     C*
     C           CT        DOWLESP
     C           CT        ANDGT0
     C*
     C           SID,CT    IFEQ 'SC0001'
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR001
     C                     ELSE
     C           SID,CT    IFEQ 'SC0002'
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR002
     C                     ELSE
     C           SID,CT    IFEQ 'SC0003'
     C                     MOVE '1'       *IN79
     C                     MOVE '1'       *IN99
     C                     WRITESCR003
     C                     END
     C                     END
     C                     END
     C*
     C                     ADD  1         CT
     C                     END
     C*
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* S01BKW -
     C*****************************************************************
     C           S01BKW    BEGSR
     C*
     C* ***  Scroll information backward
     C*                                                               *
     C* C01 = 13
     C                     Z-ADD13        Z1
     C* GETREC d.menu,f.MNUhed,*pv,wsuser
     C*
     C                     EXSR S010
     C* DOW %sts(d.menu,f.MNUhed)=*yes & c01 > 1
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           Z1        IFGT 1
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           NRSLT0    IFEQ 1
     C           RN0003    ANDEQ1
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C                     Z-ADDNRSLT0    RSLT01
     C           RSLT01    DOWEQ1
     C* If menu is on programs this is a sub menu
     C* do not display
     C* GETREC D.MENU,F.MNUPGM,*EQ,MBMNUC
     C*
     C                     EXSR S012
     C* IF %STS(D.MENU,F.MNUPGM)=*NO
     C*  Status of last file I/O
     C           STS04     IFNE *ZERO
     C* C01 = C01-1
     C           Z1        SUB  1         RN0003
     C                     Z-ADDRN0003    Z1
     C* NUM = 12
     C                     Z-ADD12        Z4
     C* IF c01 = 12
     C           Z1        IFEQ 12
     C* MNU = ' '
     C                     MOVEA*BLANKS   MNU
     C* MND = ' '
     C                     MOVEA*BLANKS   MND
     C* LAST = mbmnuc
     C                     MOVE WBMNUC    LAST
     C* FL0002 = 'More'
     C                     MOVE 'More'    FL0002
     C* END                                                           *
     C                     END
     C* ** Save key information in key arrays.
     C* FLDATR mnd(1),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD1         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR mnd(12),*ri
     C                     MOVE 'X'       #RI
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD12        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* *** Move cursor to highlighted menu
     C* NUMLST = num
     C                     Z-ADDZ4        NUMLST
     C* WKROW = num + mrow
     C           Z4        ADD  MROW      RN0003
     C                     Z-ADDRN0003    WKROW
     C* WKCOL = mcol
     C                     Z-ADDMCOL      WKCOL
     C* POSCUR wkrow,wkcol
     C                     Z-ADDWKROW     LIN
     C                     Z-ADDWKCOL     POS
     C* MND(C01) = mbmnud
     C                     MOVE *BLANKS   MND,Z1
     C                     MOVE WBMNUD    MND,Z1
     C* MNU(C01) = mbmnuc
     C                     MOVE *BLANKS   MNU,Z1
     C                     MOVE WBMNUC    MNU,Z1
     C* END ; Menu exists on programs file
     C                     END
     C* ** Get next menu
     C* GETREC d.menu,f.MNUhed,*pv,wsuser
     C*
     C                     EXSR S010
     C* END                                                           *
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           RN0003    IFEQ XYES
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           Z1        IFGT 1
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           RN0003    IFEQ 1
     C           NRSLT0    ANDEQ1
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C                     Z-ADDRN0003    RSLT01
     C                     END
     C* FIRST = mnu(1)
     C                     MOVE MNU,1     FIRST
     C*
     C           $S01BK    ENDSR
     C/EJECT
     C*****************************************************************
     C* S01FWD -
     C*****************************************************************
     C           S01FWD    BEGSR
     C*
     C* *** Scroll information forward
     C*                                                               *
     C* FL0002 = ' '
     C                     MOVEL*BLANKS   FL0002
     C* C01 = 0
     C                     Z-ADD*ZERO     Z1
     C* GETREC D.menu,f.MNUhed,*Ne,wsuser
     C*
     C                     EXSR S013
     C* DOW %sts(d.menu,f.MNUhed)=*yes & c01 < 12
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           Z1        IFLT 12
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           NRSLT0    IFEQ 1
     C           RN0003    ANDEQ1
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C                     Z-ADDNRSLT0    RSLT01
     C           RSLT01    DOWEQ1
     C* If menu is on programs this is a sub menu
     C* do not display
     C* GETREC D.MENU,F.MNUPGM,*EQ,MBMNUC
     C*
     C                     EXSR S012
     C* IF %STS(D.MENU,F.MNUPGM)=*NO
     C*  Status of last file I/O
     C           STS04     IFNE *ZERO
     C*                                                               *
     C* C01 = C01+1
     C           Z1        ADD  1         RN0003
     C                     Z-ADDRN0003    Z1
     C* NUM = 1
     C                     Z-ADD1         Z4
     C* IF c01 = 1
     C           Z1        IFEQ 1
     C* FIRST = mbmnuc
     C                     MOVE WBMNUC    FIRST
     C* MNU = ' '
     C                     MOVEA*BLANKS   MNU
     C* MND = ' '
     C                     MOVEA*BLANKS   MND
     C* END                                                           *
     C                     END
     C* ** Save key information in key arrays.
     C* FLDATR mnd(12),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD12        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR mnd(1),*ri
     C                     MOVE 'X'       #RI
     C                     MOVEL'MND     'FLDNAM
     C                     Z-ADD1         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0001  'FLDSCR
     C                     EXSR SATRIB
     C*                                                               *
     C* *** Move cursor to highlighted menu
     C* NUMLST = num
     C                     Z-ADDZ4        NUMLST
     C* WKROW = num + mrow
     C           Z4        ADD  MROW      RN0003
     C                     Z-ADDRN0003    WKROW
     C* WKCOL = mcol
     C                     Z-ADDMCOL      WKCOL
     C* POSCUR wkrow,wkcol
     C                     Z-ADDWKROW     LIN
     C                     Z-ADDWKCOL     POS
     C* MND(C01) = mbmnud
     C                     MOVE *BLANKS   MND,Z1
     C                     MOVE WBMNUD    MND,Z1
     C* MNU(C01) = mbmnuc
     C                     MOVE *BLANKS   MNU,Z1
     C                     MOVE WBMNUC    MNU,Z1
     C* END ; Menu exists on programs file
     C                     END
     C* ** Get next menu record
     C* GETREC d.menu,f.MNUhed,*Ne,wsuser
     C*
     C                     EXSR S013
     C* END                                                           *
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           RN0003    IFEQ XYES
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           Z1        IFLT 12
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           RN0003    IFEQ 1
     C           NRSLT0    ANDEQ1
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C                     Z-ADDRN0003    RSLT01
     C                     END
     C*                                                               *
     C* LAST = mnu(12)
     C                     MOVE MNU,12    LAST
     C* IF %sts(d.menu,f.MNUhed)=*yes
     C*  Status of last file I/O
     C           STS01     IFEQ *ZERO
     C* FL0002 = 'More'
     C                     MOVE 'More'    FL0002
     C* END                                                           *
     C                     END
     C*
     C           $S01FW    ENDSR
     C/EJECT
     C*****************************************************************
     C* S03ABR - SCRN SUB
     C*****************************************************************
     C           S03ABR    BEGSR
     C*
     C* ** Array backwards read.
     C* C03 = 0
     C                     Z-ADD*ZERO     Z2
     C* ** Set pointer to first record on screen.
     C* SETLL D.Menu,F.MNUOPT,WSUSER,WKMENU,SVK03
     C*
     C                     EXSR S015
     C* ** Read backwards until number
     C* ** elements reached, or beginning
     C* ** of file.
     C* GETREC D.Menu,F.MNUOPT,*PV,WSUSER,WKMENU
     C*
     C                     EXSR S016
     C* DOW (C03<S03CNT)&%STS(D.menu,F.mnuopt)=*YES
     C           Z2        IFLT S03CNT
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C*  Status of last file I/O
     C           STS05     IFEQ *ZERO
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           RN0003    IFEQ XYES
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           NRSLT0    IFEQ 1
     C           RN0003    ANDEQ1
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C                     Z-ADDNRSLT0    RSLT01
     C           RSLT01    DOWEQ1
     C* SELCNT = selcnt - 1
     C           SELCNT    SUB  1         RN0003
     C                     Z-ADDRN0003    SELCNT
     C* C03 = C03+1
     C           Z2        ADD  1         RN0003
     C                     Z-ADDRN0003    Z2
     C* GETREC D.Menu,F.MNUOPT,*PV,WSUSER,WKMENU
     C*
     C                     EXSR S016
     C* END                                                           *
     C           Z2        IFLT S03CNT
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C*  Status of last file I/O
     C           STS05     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           RN0003    IFEQ 1
     C           NRSLT0    ANDEQ1
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C                     Z-ADDRN0003    RSLT01
     C                     END
     C* ** Load arrays from this point.
     C* OP = 10
     C                     Z-ADD10        OP
     C* EXSUBR S03ALD
     C                     EXSR S03ALD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S03AB
     C                     END
     C*
     C           $S03AB    ENDSR
     C/EJECT
     C*****************************************************************
     C* S500 - SCRN SUB
     C*****************************************************************
     C           S500      BEGSR
     C*
     C* ** Array backwards read.
     C* C04 = 0
     C                     Z-ADD*ZERO     Z3
     C* ** Set pointer to first record on screen.
     C* SETLL D.MENU,F.mnuHLP,SVK004,SVK005,SVK04
     C*
     C                     EXSR S018
     C* ** Read backwards until number
     C* ** elements reached, or beginning
     C* ** of file.
     C* GETREC D.MENU,F.mnuHLP,*PV,SVK004,SVK005
     C*
     C                     EXSR S019
     C* DOW (C04<S04CNT)&%STS(D.MENU,F.mnuHLP)=*YES
     C           Z3        IFLT S04CNT
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C*  Status of last file I/O
     C           STS06     IFEQ *ZERO
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           RN0003    IFEQ XYES
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           NRSLT0    IFEQ 1
     C           RN0003    ANDEQ1
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C                     Z-ADDNRSLT0    RSLT01
     C           RSLT01    DOWEQ1
     C* C04 = C04+1
     C           Z3        ADD  1         RN0003
     C                     Z-ADDRN0003    Z3
     C* GETREC D.MENU,F.mnuHLP,*PV,SVK004,SVK005
     C*
     C                     EXSR S019
     C* END                                                           *
     C           Z3        IFLT S04CNT
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C*  Status of last file I/O
     C           STS06     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           RN0003    IFEQ 1
     C           NRSLT0    ANDEQ1
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C                     Z-ADDRN0003    RSLT01
     C                     END
     C* ** Load arrays from this point.
     C* EXSUBR S03ALD
     C                     EXSR S502
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S500
     C                     END
     C*
     C           $S500     ENDSR
     C/EJECT
     C*****************************************************************
     C* S03AFR - SCRN SUB
     C*****************************************************************
     C           S03AFR    BEGSR
     C*
     C* ** Set pointer to last record on screen.
     C* SETLL D.Menu,F.MNUOPT,WSUSER,WKMENU,SVK03
     C*
     C                     EXSR S015
     C* OP = 1
     C                     Z-ADD1         OP
     C* ** Load arrays from this point.
     C* EXSUBR S03ALD
     C                     EXSR S03ALD
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S03AF
     C                     END
     C*
     C           $S03AF    ENDSR
     C/EJECT
     C*****************************************************************
     C* S501 - SCRN SUB
     C*****************************************************************
     C           S501      BEGSR
     C*
     C* ** Set pointer to last record on screen.
     C* SETLL D.MENU,F.mnuHLP,SVK004,SVK005,SVK04
     C*
     C                     EXSR S018
     C* ** Load arrays from this point.
     C* EXSUBR S03ALD
     C                     EXSR S502
     C           LRFLAG    IFNE *BLANK
     C                     GOTO $S501
     C                     END
     C*
     C           $S501     ENDSR
     C/EJECT
     C*****************************************************************
     C* S03ALD - SCRN SUB
     C*****************************************************************
     C           S03ALD    BEGSR
     C*
     C* ** load arrays from file
     C* ** clear arrays
     C* B01 = ' '
     C                     MOVEA*BLANKS   B01
     C* T03 = ' '
     C                     MOVEA*BLANKS   T03
     C* PGM = ' '
     C                     MOVEA*BLANKS   A01
     C* FL0001 = ' '
     C                     MOVEL*BLANKS   FL0001
     C* C03 = 0
     C                     Z-ADD*ZERO     Z2
     C* SEL = 0
     C                     Z-ADD*ZERO     SEL
     C* FLDATR sel(1),*ND
     C                     MOVE 'X'       #ND
     C                     MOVEL'SEL     'FLDNAM
     C                     Z-ADD1         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR sel(2),*ND
     C                     MOVE 'X'       #ND
     C                     MOVEL'SEL     'FLDNAM
     C                     Z-ADD2         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR sel(3),*ND
     C                     MOVE 'X'       #ND
     C                     MOVEL'SEL     'FLDNAM
     C                     Z-ADD3         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR sel(4),*ND
     C                     MOVE 'X'       #ND
     C                     MOVEL'SEL     'FLDNAM
     C                     Z-ADD4         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR sel(5),*ND
     C                     MOVE 'X'       #ND
     C                     MOVEL'SEL     'FLDNAM
     C                     Z-ADD5         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR sel(6),*ND
     C                     MOVE 'X'       #ND
     C                     MOVEL'SEL     'FLDNAM
     C                     Z-ADD6         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR sel(7),*ND
     C                     MOVE 'X'       #ND
     C                     MOVEL'SEL     'FLDNAM
     C                     Z-ADD7         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR sel(8),*ND
     C                     MOVE 'X'       #ND
     C                     MOVEL'SEL     'FLDNAM
     C                     Z-ADD8         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR sel(9),*ND
     C                     MOVE 'X'       #ND
     C                     MOVEL'SEL     'FLDNAM
     C                     Z-ADD9         FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* FLDATR sel(10),*ND
     C                     MOVE 'X'       #ND
     C                     MOVEL'SEL     'FLDNAM
     C                     Z-ADD10        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* ** Read file and load to arrays.
     C* C03 = 0
     C                     Z-ADD*ZERO     Z2
     C* GETREC D.Menu,F.MNUOPT,*NE,WSUSER,WKMENU
     C*
     C                     EXSR S021
     C* DOW (C03<S03CNT)&%STS(D.Menu,F.MNUOPT)=*YES
     C           Z2        IFLT S03CNT
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C*  Status of last file I/O
     C           STS05     IFEQ *ZERO
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           RN0003    IFEQ XYES
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           NRSLT0    IFEQ 1
     C           RN0003    ANDEQ1
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C                     Z-ADDNRSLT0    RSLT01
     C           RSLT01    DOWEQ1
     C* SELCNT = selcnt + 1
     C           SELCNT    ADD  1         RN0003
     C                     Z-ADDRN0003    SELCNT
     C* C03 = C03+1
     C           Z2        ADD  1         RN0003
     C                     Z-ADDRN0003    Z2
     C* ** load screen array.
     C* FLDATR sel(C03),*ds
     C                     MOVE 'X'       #DS
     C                     MOVEL'SEL     'FLDNAM
     C                     Z-ADDZ2        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* SEL(C03) = selcnt
     C                     Z-ADDSELCNT    SEL,Z2
     C* B01(C03) = mcoptc
     C                     MOVE *BLANKS   B01,Z2
     C                     MOVE WCOPTC    B01,Z2
     C* T03(C03) = mcoptd
     C                     MOVE *BLANKS   T03,Z2
     C                     MOVE WCOPTD    T03,Z2
     C* PGM(C03) = mcpgmn
     C                     MOVE *BLANKS   A01,Z2
     C                     MOVE WCPGMN    A01,Z2
     C* ** Save first record on screen.
     C* IF C03=1
     C           Z2        IFEQ 1
     C* FSTSEL = sel(C03)
     C                     Z-ADDSEL,Z2    FSTSEL
     C* FST03 = B01(C03)
     C                     MOVE B01,Z2    FST03
     C* END                                                           *
     C                     END
     C* IF C03<S03CNT
     C           Z2        IFLT S03CNT
     C* GETREC D.Menu,F.MNUOPT,*NE,WSUSER,WKMENU
     C*
     C                     EXSR S021
     C* END                                                           *
     C                     END
     C* END                                                           *
     C           Z2        IFLT S03CNT
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C*  Status of last file I/O
     C           STS05     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           RN0003    IFEQ 1
     C           NRSLT0    ANDEQ1
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C                     Z-ADDRN0003    RSLT01
     C                     END
     C* ** Save last record on screen.
     C* IF C03>0
     C           Z2        IFGT *ZERO
     C* LSTSEL = sel(C03)
     C                     Z-ADDSEL,Z2    LSTSEL
     C* LST03 = B01(C03)
     C                     MOVE B01,Z2    LST03
     C* IF op > c03
     C           OP        IFGT Z2
     C* OP = c03
     C                     Z-ADDZ2        OP
     C* END                                                           *
     C                     END
     C* FLDATR t03(op),*ri
     C                     MOVE 'X'       #RI
     C                     MOVEL'T03     'FLDNAM
     C                     Z-ADDOP        FLDINX
     C                     MOVE *BLANK    FLDSCR
     C                     MOVEL'SC0002  'FLDSCR
     C                     EXSR SATRIB
     C* ** move cursor to highlighted option
     C* OPLST = op
     C                     Z-ADDOP        OPLST
     C* WKROW1 = op + prow
     C           OP        ADD  PROW      NRSLT0
     C                     Z-ADDNRSLT0    WKROW1
     C* WKCOL1 = pcol
     C                     Z-ADDPCOL      WKCOL1
     C* POSCUR wkrow1,wkcol1
     C                     Z-ADDWKROW1    LIN
     C                     Z-ADDWKCOL1    POS
     C* END                                                           *
     C                     END
     C*                                                               *
     C* ** More to display?
     C* GETREC D.Menu,F.MNUOPT,*NE,WSUSER,WKMENU
     C*
     C                     EXSR S021
     C* IF %STS(D.Menu,F.MNUOPT)=*YES
     C*  Status of last file I/O
     C           STS05     IFEQ *ZERO
     C* FL0001 = 'More'
     C                     MOVE 'More'    FL0001
     C* MORE = 'Y'
     C                     MOVE 'Y'       MORE
     C* ELSE                                                          *
     C                     ELSE
     C* MORE = 'N'
     C                     MOVE 'N'       MORE
     C* END                                                           *
     C                     END
     C*
     C           $S03AL    ENDSR
     C/EJECT
     C*****************************************************************
     C* S502 - SCRN SUB
     C*****************************************************************
     C           S502      BEGSR
     C*
     C* ** load arrays from file
     C* ** clear arrays
     C* B02 = 0
     C                     Z-ADD*ZERO     B02
     C* T05 = ' '
     C                     MOVEA*BLANKS   T05
     C* C04 = 0
     C                     Z-ADD*ZERO     Z3
     C* ** Read file and load to arrays.
     C* C04 = 0
     C                     Z-ADD*ZERO     Z3
     C* GETREC D.MENU,F.MNUHLP,*NE,SVK004,SVK005
     C*
     C                     EXSR S023
     C* DOW (C04<S04CNT)&%STS(D.MENU,F.MNUHLP)=*YES
     C           Z3        IFLT S04CNT
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C*  Status of last file I/O
     C           STS06     IFEQ *ZERO
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           RN0003    IFEQ XYES
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C           NRSLT0    IFEQ 1
     C           RN0003    ANDEQ1
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C                     Z-ADDNRSLT0    RSLT01
     C           RSLT01    DOWEQ1
     C* C04 = C04+1
     C           Z3        ADD  1         RN0003
     C                     Z-ADDRN0003    Z3
     C* ** Save field being prompted for.
     C* B02(C04) = mdseqn
     C                     Z-ADDWDSEQN    B02,Z3
     C* T05(C04) = mdtext
     C                     MOVE *BLANKS   T05,Z3
     C                     MOVE WDTEXT    T05,Z3
     C* ** Save first record on screen.
     C* IF C04=1
     C           Z3        IFEQ 1
     C* FST04 = B02(C04)
     C                     Z-ADDB02,Z3    FST04
     C* END                                                           *
     C                     END
     C* IF C04<S04CNT
     C           Z3        IFLT S04CNT
     C* GETREC D.MENU,F.MNUHLP,*NE,SVK004,SVK005
     C*
     C                     EXSR S023
     C* END                                                           *
     C                     END
     C* END                                                           *
     C           Z3        IFLT S04CNT
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C*  Status of last file I/O
     C           STS06     IFEQ *ZERO
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           NRSLT0    IFEQ XYES
     C                     Z-ADD1         NRSLT0
     C                     ELSE
     C                     Z-ADD0         NRSLT0
     C                     END
     C           RN0003    IFEQ 1
     C           NRSLT0    ANDEQ1
     C                     Z-ADD1         RN0003
     C                     ELSE
     C                     Z-ADD0         RN0003
     C                     END
     C                     Z-ADDRN0003    RSLT01
     C                     END
     C* ** Save last record on screen.
     C* IF C04>0
     C           Z3        IFGT *ZERO
     C* LST04 = B02(C04)
     C                     Z-ADDB02,Z3    LST04
     C* END                                                           *
     C                     END
     C*
     C           $S502     ENDSR
     C/EJECT
     C*****************************************************************
     C* S03KEY - Set up Keywords
     C*****************************************************************
     C           S03KEY    BEGSR
     C*
     C*                                                               *
     C* Set up Keywords
     C* IF (mcprm4 = '*BLANKS') *OR (mcprm4 = '*BLANK')
     C           WCPRM4    IFEQ '*BLANKS'
     C           WCPRM4    OREQ '*BLANK'
     C* PARM4 = ' '
     C                     MOVEL*BLANKS   PARM4
     C* END                                                           *
     C                     END
     C* IF (mcprm3 = '*BLANKS') *OR (mcprm3 = '*BLANK')
     C           WCPRM3    IFEQ '*BLANKS'
     C           WCPRM3    OREQ '*BLANK'
     C* PARM3 = ' '
     C                     MOVEL*BLANKS   PARM3
     C* END                                                           *
     C                     END
     C* IF (mcprm2 = '*BLANKS') *OR (mcprm2 = '*BLANK')
     C           WCPRM2    IFEQ '*BLANKS'
     C           WCPRM2    OREQ '*BLANK'
     C* PARM2 = ' '
     C                     MOVEL*BLANKS   PARM2
     C* END                                                           *
     C                     END
     C* IF (mcprm1 = '*BLANKS') *OR (mcprm1 = '*BLANK')
     C           WCPRM1    IFEQ '*BLANKS'
     C           WCPRM1    OREQ '*BLANK'
     C* PARM1 = ' '
     C                     MOVEL*BLANKS   PARM1
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF (mcprm4 = '*USERID')
     C           WCPRM4    IFEQ '*USERID'
     C* PARM4 = *USERID
     C                     MOVE *BLANKS   PARM4
     C                     MOVELUSER      PARM4
     C* END                                                           *
     C                     END
     C* IF (mcprm3 = '*USERID')
     C           WCPRM3    IFEQ '*USERID'
     C* PARM3 = *USERID
     C                     MOVE *BLANKS   PARM3
     C                     MOVELUSER      PARM3
     C* END                                                           *
     C                     END
     C* IF (mcprm2 = '*USERID')
     C           WCPRM2    IFEQ '*USERID'
     C* PARM2 = *USERID
     C                     MOVE *BLANKS   PARM2
     C                     MOVELUSER      PARM2
     C* END                                                           *
     C                     END
     C* IF (mcprm1 = '*USERID')
     C           WCPRM1    IFEQ '*USERID'
     C* PARM1 = *USERID
     C                     MOVE *BLANKS   PARM1
     C                     MOVELUSER      PARM1
     C* END                                                           *
     C                     END
     C*                                                               *
     C* *LEV1 keyword
     C* IF prdfv1=*blanks
     C           PRDFV1    IFEQ *BLANKS
     C* WKLEV = wkdfv1     ; set to default value
     C                     MOVE WKDFV1    WKLEV
     C* ELSE                                                          *
     C                     ELSE
     C* WKLEV = prdfv1     ; set to selected value
     C                     MOVE PRDFV1    WKLEV
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF (mcprm4 = '*LEV1')
     C           WCPRM4    IFEQ '*LEV1'
     C* PARM4 = wklev
     C                     MOVE *BLANKS   PARM4
     C                     MOVELWKLEV     PARM4
     C* END                                                           *
     C                     END
     C* IF (mcprm3 = '*LEV1')
     C           WCPRM3    IFEQ '*LEV1'
     C* PARM3 = wklev
     C                     MOVE *BLANKS   PARM3
     C                     MOVELWKLEV     PARM3
     C* END                                                           *
     C                     END
     C* IF (mcprm2 = '*LEV1')
     C           WCPRM2    IFEQ '*LEV1'
     C* PARM2 = wklev
     C                     MOVE *BLANKS   PARM2
     C                     MOVELWKLEV     PARM2
     C* END                                                           *
     C                     END
     C* IF (mcprm1 = '*LEV1')
     C           WCPRM1    IFEQ '*LEV1'
     C* PARM1 = wklev
     C                     MOVE *BLANKS   PARM1
     C                     MOVELWKLEV     PARM1
     C* END                                                           *
     C                     END
     C*                                                               *
     C* *LEV2 keyword
     C* IF prdfv2=*blanks
     C           PRDFV2    IFEQ *BLANKS
     C* WKLEV = wkdfv2     ; set to default value
     C                     MOVE WKDFV2    WKLEV
     C* ELSE                                                          *
     C                     ELSE
     C* WKLEV = prdfv2     ; set to selected value
     C                     MOVE PRDFV2    WKLEV
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF (mcprm4 = '*LEV2')
     C           WCPRM4    IFEQ '*LEV2'
     C* PARM4 = wklev
     C                     MOVE *BLANKS   PARM4
     C                     MOVELWKLEV     PARM4
     C* END                                                           *
     C                     END
     C* IF (mcprm3 = '*LEV2')
     C           WCPRM3    IFEQ '*LEV2'
     C* PARM3 = wklev
     C                     MOVE *BLANKS   PARM3
     C                     MOVELWKLEV     PARM3
     C* END                                                           *
     C                     END
     C* IF (mcprm2 = '*LEV2')
     C           WCPRM2    IFEQ '*LEV2'
     C* PARM2 = wklev
     C                     MOVE *BLANKS   PARM2
     C                     MOVELWKLEV     PARM2
     C* END                                                           *
     C                     END
     C* IF (mcprm1 = '*LEV2')
     C           WCPRM1    IFEQ '*LEV2'
     C* PARM1 = wklev
     C                     MOVE *BLANKS   PARM1
     C                     MOVELWKLEV     PARM1
     C* END                                                           *
     C                     END
     C*                                                               *
     C* *LEV3 keyword
     C* IF prdfv3=*blanks
     C           PRDFV3    IFEQ *BLANKS
     C* WKLEV = wkdfv3     ; set to default value
     C                     MOVE WKDFV3    WKLEV
     C* ELSE                                                          *
     C                     ELSE
     C* WKLEV = prdfv3     ; set to selected value
     C                     MOVE PRDFV3    WKLEV
     C* END                                                           *
     C                     END
     C*                                                               *
     C* IF (mcprm4 = '*LEV3')
     C           WCPRM4    IFEQ '*LEV3'
     C* PARM4 = wklev
     C                     MOVE *BLANKS   PARM4
     C                     MOVELWKLEV     PARM4
     C* END                                                           *
     C                     END
     C* IF (mcprm3 = '*LEV3')
     C           WCPRM3    IFEQ '*LEV3'
     C* PARM3 = wklev
     C                     MOVE *BLANKS   PARM3
     C                     MOVELWKLEV     PARM3
     C* END                                                           *
     C                     END
     C* IF (mcprm2 = '*LEV3')
     C           WCPRM2    IFEQ '*LEV3'
     C* PARM2 = wklev
     C                     MOVE *BLANKS   PARM2
     C                     MOVELWKLEV     PARM2
     C* END                                                           *
     C                     END
     C* IF (mcprm1 = '*LEV3')
     C           WCPRM1    IFEQ '*LEV3'
     C* PARM1 = wklev
     C                     MOVE *BLANKS   PARM1
     C                     MOVELWKLEV     PARM1
     C* END                                                           *
     C                     END
     C*
     C           $S03KE    ENDSR
     C/EJECT
     C*****************************************************************
     C* SCSL - Checks if cursor is within the boundray of cordinates
     C*        specified and returns a result of true (1) or false (0).
     C*
     C* FUNCTION:    CURSOR_LOCATION (ROW1, COLUMN1, ROW2, COLUMN2)
     C*****************************************************************
     C           SCSL      BEGSR
     C* Get row
     C                     Z-ADD0         HALFWD
     C                     MOVE ROW       BYTE2
     C                     Z-ADDHALFWD    ROW1
     C* Get column
     C                     Z-ADD0         HALFWD
     C                     MOVE COL       BYTE2
     C                     Z-ADDHALFWD    COL1
     C*
     C           ROW1      IFGE NARG1
     C           ROW1      ANDLENARG3
     C           COL1      ANDGENARG2
     C           COL1      ANDLENARG4
     C                     Z-ADD1         NRSLT
     C                     ELSE
     C                     Z-ADD0         NRSLT
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SCMD - Processes OS/400 Commands
     C*****************************************************************
     C           SCMD      BEGSR
     C*
     C                     MOVE 'N'       CMDERR           Error flag
     C                     Z-ADD2560      LEN
     C                     MOVE '1'       *IN79
     C* Validate command syntax
     C*
     C                     CALL 'QCMDCHK'              92
     C                     PARM           CST              CMD string
     C                     PARM           LEN              Length
     C* Check command syntax failure
     C*
     C           *IN92     IFEQ '1'
     C                     MOVE 'Y'       CMDERR
     C                     END
     C* Execute command
     C*
     C           CMDERR    IFEQ 'N'
     C                     CALL 'QCMDEXC'              92
     C                     PARM           CST
     C                     PARM           LEN
     C* Check command failure
     C*
     C           *IN92     IFEQ '1'
     C                     MOVE 'Y'       CMDERR
     C                     END
     C                     END
     C*
     C                     MOVEA*BLANKS   CST
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SMSG - calls message handling program to either clear, add, or
     C*        remove messages from message subfile or extracts
     C*        messages from message files.
     C*****************************************************************
     C           SMSG      BEGSR
     C*
     C* Add message to message subfile
     C*
     C           MSGACT    IFEQ 'A'
     C           MSGACT    OREQ 'R'
     C                     MOVE 'Y'       MSGFLG
     C                     ELSE
     C* Clear message subfile or extract message from message file.
     C*
     C           MSGACT    IFEQ 'C'
     C                     MOVE 'N'       MSGFLG
     C                     END
     C                     END
     C*
     C           MSGACT    IFEQ 'C'
     C           MSGACT    OREQ 'A'
     C           MSGACT    OREQ 'E'
     C                     CALL 'CLMSG'   PMSGCL
     C                     MOVE *BLANK    MSGID
     C                     MOVE *BLANK    MSGF
     C                     MOVE *BLANK    MSGFL
     C* Do not clear the message data field if message is extracted
     C* from message file
     C           MSGACT    IFNE 'E'
     C                     MOVE *BLANK    MSGDTA
     C                     END
     C                     END
     C*
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SHELP - Process help text.
     C*****************************************************************
     C           SHELP     BEGSR
     C* Get row
     C                     Z-ADD0         HALFWD
     C                     MOVE ROW       BYTE2
     C                     Z-ADDHALFWD    APPROW
     C* Get column
     C                     Z-ADD0         HALFWD
     C                     MOVE COL       BYTE2
     C                     Z-ADDHALFWD    APPCOL
     C* Call help processing program.
     C*
     C                     CALL 'CAHELP'  PHELP
     C                     ENDSR
     C/EJECT
     C**************************************************************************
     C* S004   - GETREC D.menu,F.mnuusr,*EQ,WSUSER
     C**************************************************************************
     C           S004      BEGSR
     C                     Z-ADD2         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAUS01
     C                     MOVELWSUSER    KAUS01
     C           K0001     CHAINMNUUSR               9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD02           RD.SW.MNUUSR    MNUUS
     C                     Z-ADD*ZERO     HRC02            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD02           RD.SW.MNUUSR    MNUUS
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S005   - GETREC d.menu,f.mnuusr1,*eq,maguser
     C**************************************************************************
     C           S005      BEGSR
     C                     Z-ADD3         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAUS01
     C                     MOVELWK0001    KAUS01
     C           K0001     CHAINMNUUSR1              9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     Z-ADD*ZERO     HRC03            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD03           RD.SW.MNUUSR1   MNUHE
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S006   - SETLL D.menu,F.mnuhed,WSUSER
     C**************************************************************************
     C           S006      BEGSR
     C                     Z-ADD3         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUHED    MNUOP
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     MOVE 'N'       SWRD04           RD.SW.MNUPGM    MNUHL
     C                     MOVE 'N'       SWRD06           RD.SW.MNUHLP
     C                     MOVEL*LOVAL    HBMNUC           Menu
     C*
     C                     MOVELWSUSER    KAGU01
     C                     MOVELWSUSER    HBUSER           User
     C                     MOVELWSUSER    MBUSER           User
     C*
     C           K0002     SETLLMNUHED                   90
     C           *IN90     IFEQ '0'                        REC NOT MATCH
     C                     Z-ADD12        STS01            SYMUL NOT FND
     C                     END                             *IN90=0
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S007   - SETLL d.menu,f.mnuhed,wsuser,first
     C**************************************************************************
     C           S007      BEGSR
     C                     Z-ADD3         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUHED    MNUOP
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     MOVE 'N'       SWRD04           RD.SW.MNUPGM    MNUHL
     C                     MOVE 'N'       SWRD06           RD.SW.MNUHLP
     C                     MOVEL*LOVAL    HBMNUC           Menu
     C*
     C                     MOVELWSUSER    KAGU01
     C                     MOVELWSUSER    HBUSER           User
     C                     MOVELWSUSER    MBUSER           User
     C                     MOVELFIRST     KBMN02
     C                     MOVELFIRST     HBMNUC           Menu
     C                     MOVELFIRST     MBMNUC           Menu
     C*
     C           K0003     SETLLMNUHED                   90
     C           *IN90     IFEQ '0'                        REC NOT MATCH
     C                     Z-ADD12        STS01            SYMUL NOT FND
     C                     END                             *IN90=0
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S008   - SETGT D.menu,f.mnuhed,wsuser,LAST
     C**************************************************************************
     C           S008      BEGSR
     C                     Z-ADD3         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUHED    MNUOP
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     MOVE 'N'       SWRD04           RD.SW.MNUPGM    MNUHL
     C                     MOVE 'N'       SWRD06           RD.SW.MNUHLP
     C                     MOVEL*HIVAL    HBMNUC           Menu
     C*
     C                     MOVELWSUSER    KAGU01
     C                     MOVELWSUSER    HBUSER           User
     C                     MOVELWSUSER    MBUSER           User
     C                     MOVELLAST      KBMN02
     C                     MOVELLAST      HBMNUC           Menu
     C                     MOVELLAST      MBMNUC           Menu
     C*
     C           K0003     SETGTMNUHED
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S009   - GETREC D.menu,F.mnuopt,*eq,wsuser,wk05a1,wk05a2
     C**************************************************************************
     C           S009      BEGSR
     C                     Z-ADD5         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KAGU01
     C                     MOVELWSUSER    KAGU01
     C                     MOVEL*BLANK    KBMN02
     C                     MOVELWK05A1    KBMN02
     C                     MOVEL*BLANK    KCOP03
     C                     MOVELWK05A2    KCOP03
     C           K0004     CHAINMNUOPT               9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     Z-ADD*ZERO     HRC05            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S010   - GETREC d.menu,f.MNUhed,*pv,wsuser
     C**************************************************************************
     C           S010      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KBUS01
     C                     MOVELWSUSER    KBUS01
     C           K0005     REDPEMNUHED                 9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD01           RD.SW.MNUHED    MNUOP
     C                     Z-ADD*ZERO     HRC01            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUHED    MNUOP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C                     EXSR S011                       CHK BOF
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S011   - Process To Reset File Pointer(BOF) - MNUHED
     C**************************************************************************
     C           S011      BEGSR
     C*
     C           SWRD01    IFNE 'Y'                        RD.SW.MNUHED    MNUOP
     C           STS01     ANDNE1122                       RCD LOCK
     C           STS01     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUHED    MNUOP
     C                     Z-ADDSTS01     SVS01            SAVE FILE STS
     C                     MOVEL*BLANK    KBUS01           User
     C                     MOVELMBUSER    KBUS01
     C           K0005     SETLLMNUHED
     C                     Z-ADDSVS01     STS01            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S012   - GETREC D.MENU,F.MNUPGM,*EQ,MBMNUC
     C**************************************************************************
     C           S012      BEGSR
     C                     Z-ADD4         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KPPG01
     C                     MOVELWBMNUC    KPPG01
     C           K0006     CHAINMNUPGM               9091
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD04           RD.SW.MNUPGM    MNUHL
     C                     Z-ADD*ZERO     HRC04            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD04           RD.SW.MNUPGM    MNUHL
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S013   - GETREC D.menu,f.MNUhed,*Ne,wsuser
     C**************************************************************************
     C           S013      BEGSR
     C                     Z-ADD1         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KBUS01
     C                     MOVELWSUSER    KBUS01
     C           K0005     READEMNUHED                 9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD01           RD.SW.MNUHED    MNUOP
     C                     Z-ADD*ZERO     HRC01            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUHED    MNUOP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C                     EXSR S014                       CHK EOF
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S014   - Process To Reset File Pointer(EOF) - MNUHED
     C**************************************************************************
     C           S014      BEGSR
     C*
     C           SWRD01    IFNE 'Y'                        RD.SW.MNUHED    MNUOP
     C           STS01     ANDNE1122                       RCD LOCK
     C           STS01     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD01           RD.SW.MNUHED    MNUOP
     C                     Z-ADDSTS01     SVS01            SAVE FILE STS
     C                     MOVEL*BLANK    KBUS01           User
     C                     MOVELMBUSER    KBUS01
     C           K0005     SETGTMNUHED
     C                     Z-ADDSVS01     STS01            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S015   - SETLL D.Menu,F.MNUOPT,WSUSER,WKMENU,SVK03
     C**************************************************************************
     C           S015      BEGSR
     C                     Z-ADD4         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     MOVE 'N'       SWRD04           RD.SW.MNUPGM    MNUHL
     C                     MOVE 'N'       SWRD06           RD.SW.MNUHLP
     C                     MOVEL*LOVAL    HCOPTC           Option
     C*
     C                     MOVELWSUSER    KCUS01
     C                     MOVELWSUSER    HCUSER           User
     C                     MOVELWSUSER    MCUSER           User
     C                     MOVELWKMENU    KCMN02
     C                     MOVELWKMENU    HCMNUC           Menu
     C                     MOVELWKMENU    MCMNUC           Menu
     C                     MOVELSVK03     KCOP03
     C                     MOVELSVK03     HCOPTC           Option
     C                     MOVELSVK03     MCOPTC           Option
     C*
     C           K0007     SETLLMNUOPT                   90
     C           *IN90     IFEQ '0'                        REC NOT MATCH
     C                     Z-ADD12        STS05            SYMUL NOT FND
     C                     END                             *IN90=0
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S016   - GETREC D.Menu,F.MNUOPT,*PV,WSUSER,WKMENU
     C**************************************************************************
     C           S016      BEGSR
     C                     Z-ADD5         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KCUS01
     C                     MOVELWSUSER    KCUS01
     C                     MOVEL*BLANK    KCMN02
     C                     MOVELWKMENU    KCMN02
     C           K0008     REDPEMNUOPT                 9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     Z-ADD*ZERO     HRC05            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C                     EXSR S017                       CHK BOF
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S017   - Process To Reset File Pointer(BOF) - MNUOPT
     C**************************************************************************
     C           S017      BEGSR
     C*
     C           SWRD05    IFNE 'Y'                        RD.SW.MNUOPT    MNUPG
     C           STS05     ANDNE1122                       RCD LOCK
     C           STS05     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     Z-ADDSTS05     SVS05            SAVE FILE STS
     C                     MOVEL*BLANK    KCUS01           User
     C                     MOVELMCUSER    KCUS01
     C                     MOVEL*BLANK    KCMN02           Menu
     C                     MOVELMCMNUC    KCMN02
     C           K0008     SETLLMNUOPT
     C                     Z-ADDSVS05     STS05            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S018   - SETLL D.MENU,F.mnuHLP,SVK004,SVK005,SVK04
     C**************************************************************************
     C           S018      BEGSR
     C                     Z-ADD6         WFILE#           SET FILE#
     C                     MOVE 'Y'       SWRD06           RD.SW.MNUHLP
     C                     Z-ADD*LOVAL    HDSEQN           Sequence Number
     C*
     C                     MOVELSVK004    KDMN01
     C                     MOVELSVK004    HDMNUC           Menu
     C                     MOVELSVK004    MDMNUC           Menu
     C                     MOVELSVK005    KDOP02
     C                     MOVELSVK005    HDOPTC           Option
     C                     MOVELSVK005    MDOPTC           Option
     C                     Z-ADDSVK04     KDSE03
     C                     Z-ADDSVK04     HDSEQN           Sequence Number
     C                     Z-ADDSVK04     MDSEQN           Sequence Number
     C*
     C           K0009     SETLLMNUHLP                   90
     C           *IN90     IFEQ '0'                        REC NOT MATCH
     C                     Z-ADD12        STS06            SYMUL NOT FND
     C                     END                             *IN90=0
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S019   - GETREC D.MENU,F.mnuHLP,*PV,SVK004,SVK005
     C**************************************************************************
     C           S019      BEGSR
     C                     Z-ADD6         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KDMN01
     C                     MOVELSVK004    KDMN01
     C                     MOVEL*BLANK    KDOP02
     C                     MOVELSVK005    KDOP02
     C           K0010     REDPEMNUHLP                 9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD06           RD.SW.MNUHLP
     C                     Z-ADD*ZERO     HRC06            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD06           RD.SW.MNUHLP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C                     EXSR S020                       CHK BOF
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S020   - Process To Reset File Pointer(BOF) - MNUHLP
     C**************************************************************************
     C           S020      BEGSR
     C*
     C           SWRD06    IFNE 'Y'                        RD.SW.MNUHLP
     C           STS06     ANDNE1122                       RCD LOCK
     C           STS06     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD06           RD.SW.MNUHLP
     C                     Z-ADDSTS06     SVS06            SAVE FILE STS
     C                     MOVEL*BLANK    KDMN01           Menu
     C                     MOVELMDMNUC    KDMN01
     C                     MOVEL*BLANK    KDOP02           Option
     C                     MOVELMDOPTC    KDOP02
     C           K0010     SETLLMNUHLP
     C                     Z-ADDSVS06     STS06            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S021   - GETREC D.Menu,F.MNUOPT,*NE,WSUSER,WKMENU
     C**************************************************************************
     C           S021      BEGSR
     C                     Z-ADD5         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KCUS01
     C                     MOVELWSUSER    KCUS01
     C                     MOVEL*BLANK    KCMN02
     C                     MOVELWKMENU    KCMN02
     C           K0008     READEMNUOPT                 9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     Z-ADD*ZERO     HRC05            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C                     EXSR S022                       CHK EOF
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S022   - Process To Reset File Pointer(EOF) - MNUOPT
     C**************************************************************************
     C           S022      BEGSR
     C*
     C           SWRD05    IFNE 'Y'                        RD.SW.MNUOPT    MNUPG
     C           STS05     ANDNE1122                       RCD LOCK
     C           STS05     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD05           RD.SW.MNUOPT    MNUPG
     C                     Z-ADDSTS05     SVS05            SAVE FILE STS
     C                     MOVEL*BLANK    KCUS01           User
     C                     MOVELMCUSER    KCUS01
     C                     MOVEL*BLANK    KCMN02           Menu
     C                     MOVELMCMNUC    KCMN02
     C           K0008     SETGTMNUOPT
     C                     Z-ADDSVS05     STS05            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S023   - GETREC D.MENU,F.MNUHLP,*NE,SVK004,SVK005
     C**************************************************************************
     C           S023      BEGSR
     C                     Z-ADD6         WFILE#           SET FILE#
     C                     MOVEL*BLANK    KDMN01
     C                     MOVELSVK004    KDMN01
     C                     MOVEL*BLANK    KDOP02
     C                     MOVELSVK005    KDOP02
     C           K0010     READEMNUHLP                 9190
     C           *IN90     IFEQ '1'
     C           *IN91     OREQ '1'
     C                     MOVE 'N'       SWRD06           RD.SW.MNUHLP
     C                     Z-ADD*ZERO     HRC06            ZERO RRN
     C                     ELSE
     C                     MOVE 'Y'       SWRD06           RD.SW.MNUHLP
     C                     EXSR SMVTOW                     MOVE FLD TO WORK
     C                     END
     C*
     C                     EXSR S024                       CHK EOF
     C*
     C                     ENDSR
     C*
     C/EJECT
     C**************************************************************************
     C* S024   - Process To Reset File Pointer(EOF) - MNUHLP
     C**************************************************************************
     C           S024      BEGSR
     C*
     C           SWRD06    IFNE 'Y'                        RD.SW.MNUHLP
     C           STS06     ANDNE1122                       RCD LOCK
     C           STS06     ANDNE1218                       RCD LOCK
     C*
     C                     MOVE 'Y'       SWRD06           RD.SW.MNUHLP
     C                     Z-ADDSTS06     SVS06            SAVE FILE STS
     C                     MOVEL*BLANK    KDMN01           Menu
     C                     MOVELMDMNUC    KDMN01
     C                     MOVEL*BLANK    KDOP02           Option
     C                     MOVELMDOPTC    KDOP02
     C           K0010     SETGTMNUHLP
     C                     Z-ADDSVS06     STS06            RESTORE FILE STS
     C*
     C                     END
     C                     ENDSR
     C*
     C/EJECT
     C*****************************************************************
     C* *PSSR - Program Execution Errors Handler
     C*****************************************************************
     C           *PSSR     BEGSR
     C           UERCNT    IFNE *ZERO
     C                     MOVEL'*CANCL'  URSUME
     C                     ELSE
     C                     Z-ADD1         UERCNT
     C                     MOVE 'R'       MSGACT
     C                     MOVE *BLANKS   MSGF
     C                     MOVEL'QCPFMSG' MSGF
     C                     MOVE *BLANKS   MSGFL
     C                     MOVEL'QSYS'    MSGFL
     C                     MOVE *BLANKS   MSGDTA
     C           UMSGTX    IFNE *BLANKS
     C                     MOVELUMSGTX    MSGDTA
     C                     ELSE
     C                     MOVELUROUTN    MSGDTA
     C                     END
     C*
     C           USTAT     IFEQ *ZEROS
     C                     MOVE UFSTAT    USTAT
     C                     MOVE UFSRCL    USRCLN
     C                     END
     C                     MOVE USTAT     USTAT4
     C*
     C           MSGID     IFEQ *BLANKS
     C                     MOVE USTAT4    MSGID
     C                     MOVEL'RPG'     MSGID
     C                     MOVEL'QRPGMSGE'MSGF
     C                     END
     C*
     C                     CALL 'CLMSG'   PMSGCL         93
     C*
     C                     MOVEL'1'       UEROPT
     C                     EXFMTPSSR0001
     C*
     C           UEROPT    IFEQ '1'
     C                     MOVEL'*GETIN  'URSUME
     C                     ELSE
     C           UEROPT    IFEQ '2'
     C                     MOVEL'*CANCL  'URSUME
     C                     ELSE
     C           UEROPT    IFEQ '3'
     C                     MOVE '        'URSUME
     C                     END
     C                     END
     C                     END
     C                     END
     C*
     C                     MOVEL*BLANK    MSGID
     C                     MOVE *ZERO     UERCNT
     C*
     C                     ENDSRURSUME
     C*/EJECT
     C*****************************************************************
     C* SCLF   - CLF : Cursor Location On Field Handler
     C*****************************************************************
     C           SCLF      BEGSR
     C*
     C* FIND TABLE OFFSET BY SCREEN ID AND FIELD NAME AND FIELD INDEX
     C*
     C                     Z-ADD1         X0
     C           #MAP      LOKUPDA4,X0                   90
     C           *IN90     IFEQ '1'                        IF FIND
     C                     MOVE DA5,X0    #CLF
     C*          ------------------------------------------------------
     C*          | CALCULATE CURRENT SCREEN OFFSET
     C*          ------------------------------------------------------
     C* Get row
     C                     Z-ADD0         HALFWD
     C                     MOVE ROW       BYTE2
     C                     Z-ADDHALFWD    APPROW
     C* Get column
     C                     Z-ADD0         HALFWD
     C                     MOVE COL       BYTE2
     C                     Z-ADDHALFWD    APPCOL
     C*
     C           APPROW    SUB  1         OFFSET
     C           OFFSET    MULT 80        OFFSET
     C                     ADD  APPCOL    OFFSET
     C*          ------------------------------------------------------
     C*          | CHECK OFFSET BOUNDARY
     C*          ------------------------------------------------------
     C           OFFSET    IFGE #FROM
     C           OFFSET    ANDLE#TO
     C                     Z-ADD1         NRSLT
     C                     ELSE                            x-OFFSET GE #FR
     C                     Z-ADD0         NRSLT
     C                     END                             OFFSET GE #FROM
     C*
     C                     MOVE *BLANK    #ATRIB
     C                     END                             *IN90 EQ '1'
     C                     ENDSR
     C*/EJECT
     C*****************************************************************
     C* SATRIB - Display Attribute Handler
     C*****************************************************************
     C           SATRIB    BEGSR
     C*
     C* FIND TABLE OFFSET BY SCREEN ID AND FIELD NAME AND FIELD INDEX
     C*
     C                     Z-ADD1         X0
     C           #MAP      LOKUPDA1,X0                   90
     C           *IN90     IFEQ '1'                        IF FIND
     C                     MOVEADA2,X0    DA3
     C*
     C*          ------------------------------------------------------
     C*          | @DSPERR/VALIDATION FIELD DISPLAY ATTRIBUTES
     C*          ------------------------------------------------------
     C           DSPERR    IFNE *BLANK
     C           DA3,6     IFNE *BLANK                     TURN ON *PC
     C                     MOVE DA3,6     X1
     C           DSPERR    IFEQ 'X'
     C                     MOVE '0'       *IN80
     C                     MOVEA'1'       *IN,X1
     C                     ELSE                            x-DSPERR EQ 'X'
     C                     MOVEA'0'       *IN,X1
     C                     END                             DSPERR EQ 'X'
     C                     END                             DA3,6 NE *BLANK
     C*
     C           DA3,2     IFNE *BLANK                     TURN ON *RI
     C                     MOVE DA3,2     X1
     C           DSPERR    IFEQ 'X'
     C                     MOVEA'1'       *IN,X1
     C                     ELSE                            x-DSPERR EQ 'X'
     C                     MOVEA'0'       *IN,X1
     C                     END                             DSPERR EQ 'X'
     C                     END                             DA3,2 NE *BLANK
     C*
     C           DA3,3     IFNE *BLANK                     TURN OFF *UL
     C           DA3,16    ANDEQ' Y'                       KEEP UL
     C                     MOVE DA3,3     X1
     C           DSPERR    IFEQ 'X'
     C                     MOVEA'0'       *IN,X1
     C                     ELSE                            x-DSPERR EQ 'X'
     C                     MOVEA'1'       *IN,X1
     C                     END                             DSPERR EQ 'X'
     C                     END                             DA3,3 NE *BLANK
     C                     ELSE                            x-DSPERR NE *BL
     C*
     C*          ------------------------------------------------------
     C*          | *DS - RESET FIELD DISPLAY ATTRIBUTES
     C*          ------------------------------------------------------
     C           #DS       IFNE *BLANK
     C           1         DO   15        X0
     C           DA3,X0    IFNE *BLANK
     C           X0        IFEQ 3
     C           DA3,16    ANDEQ' Y'
     C                     ELSE                            x-X0 EQ 3
     C                     MOVE DA3,X0    X1
     C                     MOVEA'0'       *IN,X1
     C                     END                             X0 EQ 3
     C                     END                             DA3,X0 NE *BLAN
     C                     END                             1 DO 15
     C*          ------------------------------------------------------
     C*          | *DS - TURN ON ORIGINAL COLOR ATTRIBUTES
     C*          |       IF THERE IS NO COLOR SPECIFIED
     C*          ------------------------------------------------------
     C           DA3,17    IFNE *BLANK
     C           #GN       ANDEQ*BLANK
     C           #RD       ANDEQ*BLANK
     C           #WT       ANDEQ*BLANK
     C           #PK       ANDEQ*BLANK
     C           #TQ       ANDEQ*BLANK
     C           #YW       ANDEQ*BLANK
     C           #BU       ANDEQ*BLANK
     C                     MOVE DA3,17    X1
     C                     MOVEA'1'       *IN,X1
     C                     END                             DA3,17 NE *BLAN
     C                     END                             #DS NE *BLANK
     C*
     C*          ------------------------------------------------------
     C*          | LOOP TO TURN ON/OFF ATTRIBUTE INDICATORS
     C*          ------------------------------------------------------
     C           1         DO   15        X0
     C           DA3,X0    IFNE *BLANK
     C                     MOVE DA3,X0    X1
     C*          ------------------------------------------------------
     C*          | TURN ON ATTRIBUTE INDICATORS
     C*          ------------------------------------------------------
     C           DA6,X0    IFNE *BLANK
     C                     MOVEA'1'       *IN,X1
     C                     ELSE                            x-DA6,X0 NE *BL
     C*          ------------------------------------------------------
     C*          | FOR COLOR ATTRIBUTE, RESET OTHER COLOR THAT ARE
     C*          | NOT SPECIFIED.
     C*          ------------------------------------------------------
     C           X0        IFGE 9
     C           X0        ANDLE15
     C           #GN       IFNE *BLANK
     C           #RD       ORNE *BLANK
     C           #WT       ORNE *BLANK
     C           #PK       ORNE *BLANK
     C           #TQ       ORNE *BLANK
     C           #YW       ORNE *BLANK
     C           #BU       ORNE *BLANK
     C                     MOVEA'0'       *IN,X1
     C                     END                             #GN NE *BLANK
     C                     END                             X0 GE 9
     C                     END                             DA6,X0 NE *BLAN
     C                     END                             DA3,X0 NE *BLAN
     C                     END                             1 DO 15
     C                     END                             DSPERR NE *BLAN
     C                     END                             *IN90 EQ '1'
     C*
     C                     MOVE *BLANK    #ATRIB
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SFERR - File Exception Handler
     C*****************************************************************
     C           SFERR     BEGSR
     C                     MOVE 'Y'       MSGFLG           MSG FLAG ON
     C           WFILE#    IFEQ 1                          MNUHED
     C           STS01     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS01            ASSET LOCK STATUS
     C                     ELSE
     C           STS01     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS01            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C           WFILE#    IFEQ 2                          MNUUSR
     C           STS02     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS02            ASSET LOCK STATUS
     C                     ELSE
     C           STS02     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS02            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C           WFILE#    IFEQ 3                          MNUUSR1
     C           STS03     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS03            ASSET LOCK STATUS
     C                     ELSE
     C           STS03     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS03            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C           WFILE#    IFEQ 4                          MNUPGM
     C           STS04     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS04            ASSET LOCK STATUS
     C                     ELSE
     C           STS04     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS04            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C           WFILE#    IFEQ 5                          MNUOPT
     C           STS05     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS05            ASSET LOCK STATUS
     C                     ELSE
     C           STS05     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS05            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C           WFILE#    IFEQ 6                          MNUHLP
     C           STS06     IFEQ 1218                       LOCK(SYS)
     C                     Z-ADD1122      STS06            ASSET LOCK STATUS
     C                     ELSE
     C           STS06     IFEQ 1211                       CLOSED FILE
     C                     EXSR *PSSR
     C                     ELSE
     C                     Z-ADD1121      STS06            TRIGGER TO EXEC NEXT
     C                     END
     C                     END
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C* SMVTOW - Move Fields From File(s) To Work Area
     C*****************************************************************
     C           SMVTOW    BEGSR
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUHED
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 01
     C                     MOVELMBMNUC    WBMNUC           Menu
     C                     MOVELMBMNUD    WBMNUD           Menu Description
     C                     Z-ADDREC01     HRC01
     C                     MOVELMBUSER    HBUSER           User
     C                     MOVELMBMNUC    HBMNUC           Menu
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUUSR
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 02
     C                     MOVELMACHG     WACHG            Allow Change of Locat
     C                     MOVELMADFV1    WADFV1           Default Value for Lev
     C                     MOVELMADFV2    WADFV2           Default Value for Lev
     C                     MOVELMADFV3    WADFV3           Default Value for Lev
     C                     MOVELRN0001    WK0001           Group User
     C                     Z-ADDREC02     HRC02
     C                     MOVELMAUSER    HAUSER           User
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUUSR1
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 03
     C                     MOVELMACHG     WK0002           Allow Change of Locat
     C                     MOVELMADFV1    WK0003           Default Value for Lev
     C                     MOVELMADFV2    WK0004           Default Value for Lev
     C                     MOVELMADFV3    WK0005           Default Value for Lev
     C                     Z-ADDREC03     HRC03
     C                     MOVELMAUSER    HD0001           User
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUPGM
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 04
     C                     Z-ADDREC04     HRC04
     C                     MOVELMPPGMN    HPPGMN           Program Name
     C                     MOVELMPSPGM    HPSPGM           Secondary Program Nam
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUOPT
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 05
     C                     MOVELMCACTA    WCACTA           Add
     C                     MOVELMCACTD    WCACTD           Delete
     C                     MOVELMCACTR    WCACTR           Revise
     C                     MOVELMCMNUC    WCMNUC           Menu
     C                     MOVELMCOPTC    WCOPTC           Option
     C                     MOVELMCOPTD    WCOPTD           Option Description
     C                     MOVELMCPGMN    WCPGMN           Program Name
     C                     MOVELMCPGMT    WCPGMT           Program Type
     C                     MOVELMCPRM1    WCPRM1           Parameter
     C                     MOVELMCPRM2    WCPRM2           Parameter
     C                     MOVELMCPRM3    WCPRM3           Parameter
     C                     MOVELMCPRM4    WCPRM4           Parameter
     C                     MOVELMCSPGM    WCSPGM           Secondary Program Nam
     C                     MOVELMCUSER    WCUSER           User
     C                     Z-ADDREC05     HRC05
     C                     MOVELMCUSER    HCUSER           User
     C                     MOVELMCMNUC    HCMNUC           Menu
     C                     MOVELMCOPTC    HCOPTC           Option
     C                     ELSE
     C*          ------------------------------------------------------
     C*          | Move Fields From File To Work Area - MNUHLP
     C*          ------------------------------------------------------
     C           WFILE#    IFEQ 06
     C                     MOVELMDMNUC    WDMNUC           Menu
     C                     MOVELMDOPTC    WDOPTC           Option
     C                     Z-ADDMDSEQN    WDSEQN           Sequence Number
     C                     MOVELMDTEXT    WDTEXT           Text
     C                     Z-ADDREC06     HRC06
     C                     MOVELMDMNUC    HDMNUC           Menu
     C                     MOVELMDOPTC    HDOPTC           Option
     C                     Z-ADDMDSEQN    HDSEQN           Sequence Number
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ENDSR
     C/EJECT
     C*****************************************************************
     C*            C o m p i l e   T i m e   A r r a y
     C*               I n i t i a l i z a t i o n
     C*****************************************************************
**  CMD -- OS/400 Commands array
CALL PGM(RMTOBJ/APITEL)
**   Cursor Location on field map Array - DA4
                        Boundary
Screen    Field     Idx From  To
=======================+===+===+
SC0001    MND       000104040433
SC0001    MND       000204840513
SC0001    MND       000305640593
SC0001    MND       000406440673
SC0001    MND       000507240753
SC0001    MND       000608040833
SC0001    MND       000708840913
SC0001    MND       000809640993
SC0001    MND       000910441073
SC0001    MND       001011241153
SC0001    MND       001112041233
SC0001    MND       001212841313
**   Display Attribute Map Array - DA1
                         H R U B C P N P G R P W T Y B K O
Screen    Field/Grp Idx  I I L L S C D R N D K T Q W U U C
=========+=========+===+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=============
SC0001    MND       0001  01
SC0001    MND       0002  02
SC0001    MND       0003  03
SC0001    MND       0004  04
SC0001    MND       0005  05
SC0001    MND       0006  06
SC0001    MND       0007  07
SC0001    MND       0008  08
SC0001    MND       0009  09
SC0001    MND       0010  10
SC0001    MND       0011  11
SC0001    MND       0012  12
SC0002    T03       0001  13
SC0002    T03       0002  14
SC0002    T03       0003  15
SC0002    T03       0004  16
SC0002    T03       0005  17
SC0002    T03       0006  18
SC0002    T03       0007  19
SC0002    T03       0008  20
SC0002    T03       0009  21
SC0002    T03       0010  22
SC0002    SOPT      0000  1112    11                   Y
SC0002    SEL       0001            01
SC0002    SEL       0002            02
SC0002    SEL       0003            03
SC0002    SEL       0004            04
SC0002    SEL       0005            05
SC0002    SEL       0006            06
SC0002    SEL       0007            07
SC0002    SEL       0008            08
SC0002    SEL       0009            09
SC0002    SEL       0010            10
